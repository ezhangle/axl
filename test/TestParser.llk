//.............................................................................

LL (2);

declaration
	: (type_specifier | type_modifier)* declarator ';'
	;

type_specifier
	: EToken_BYTE
		{
			printf ("spec:byte\n");
		}
	| resolver (type_property_specifier_rslv)
	  EToken_PROPERTY EToken_Integer? EToken_Identifier $n '{' '}'
		{
			printf ("spec:property %s {}\n", $n.m_Data.m_String);
		}
	;

type_modifier
	: EToken_PROPERTY
		{
			printf ("mod:property\n");
		}
	| EToken_CONST
		{
			printf ("mod:const\n");
		}
	;
	
type_property_specifier_rslv
	: EToken_PROPERTY EToken_Identifier '{'
	| EToken_PROPERTY EToken_Integer
	;

declarator
	: EToken_Identifier
		{
			printf ("decl:id %s\n", $1.m_Data.m_String);
		}
	;

//.............................................................................
