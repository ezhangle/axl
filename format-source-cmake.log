----------------------
02/04/2019 15:37:05 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\cmake\axl_config_build.cmake.in
----------------------
[-] set (AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[+] set(AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[-] set (AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (
[+] set(
[-] set (AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[+] set(AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("@AXL_ROOT_DIR@/version.cmake")
[+] include("@AXL_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:37:05 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\cmake\axl_config_install.cmake.in
----------------------
[-] get_filename_component (AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[+] set(AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[-] set (AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[+] set(AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[-] set (AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[+] set(AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[-] set (AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[+] set(AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
----------------------
02/04/2019 15:42:12 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\cmake\axl_config_build.cmake.in
----------------------
[-] set (AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[+] set(AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[-] set (AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (
[+] set(
[-] set (AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[+] set(AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("@AXL_ROOT_DIR@/version.cmake")
[+] include("@AXL_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:42:12 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\cmake\axl_config_install.cmake.in
----------------------
[-] get_filename_component (AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[+] set(AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[-] set (AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[+] set(AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[-] set (AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[+] set(AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[-] set (AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[+] set(AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
----------------------
02/04/2019 15:42:13 - C:\Projects\repos\ioninja\axl\cmake\axl_config_build.cmake.in
----------------------
[-] set (AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[+] set(AXL_INC_DIR "@AXL_ROOT_DIR@/include")
[-] set (AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(AXL_LIB_DIR "@AXL_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (
[+] set(
[-] set (AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[+] set(AXL_DOC_SHARE_DIR     "@AXL_ROOT_DIR@/doc/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("@AXL_ROOT_DIR@/version.cmake")
[+] include("@AXL_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:42:13 - C:\Projects\repos\ioninja\axl\cmake\axl_config_install.cmake.in
----------------------
[-] get_filename_component (AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(AXL_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@AXL_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[+] set(AXL_INC_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_INC_SUBDIR@")
[-] set (AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[+] set(AXL_LIB_DIR       "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_LIB_SUBDIR@")
[-] set (AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[+] set(AXL_CMAKE_DIR     "${CMAKE_CURRENT_LIST_DIR}")
[-] set (AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[+] set(AXL_DOC_SHARE_DIR "${AXL_INSTALL_PREFIX}/@AXL_INSTALL_DOC_SUBDIR@/share")
[-] set (AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[+] set(AXL_SPHINX_HTML_THEME "sphinx_rtd_theme")
[-] include ("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/axl_version.cmake")
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\CMakeLists.txt
----------------------
[-] project (axl)
[+] project(axl)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (AXL_INSTALL_LIB_SUBDIR lib)
[+] set(AXL_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (AXL_INSTALL_INC_SUBDIR     include)
[+] 	set(AXL_INSTALL_INC_SUBDIR     include)
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (AXL_INSTALL_DOC_SUBDIR     doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\CMakeLists.txt
----------------------
[-] project (axl)
[+] project(axl)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (AXL_INSTALL_LIB_SUBDIR lib)
[+] set(AXL_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (AXL_INSTALL_INC_SUBDIR     include)
[+] 	set(AXL_INSTALL_INC_SUBDIR     include)
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (AXL_INSTALL_DOC_SUBDIR     doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\cmake\CMakeLists.txt
----------------------
[-] string (REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\doc\CMakeLists.txt
----------------------
[-] if (SPHINX_FOUND)
[+] if(SPHINX_FOUND)
[-] 	add_subdirectory (index)
[+] 	add_subdirectory(index)
[-] 	add_subdirectory (build-guide)
[+] 	add_subdirectory(build-guide)
[-] 	if (DOXYGEN_FOUND AND DOXYREST_FOUND)
[+] 	if(DOXYGEN_FOUND AND DOXYREST_FOUND)
[-] 		add_subdirectory (manual)
[+] 		add_subdirectory(manual)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Build Guide")
[+] set(DOC_NAME "AXL Build Guide")
[-] set (TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Documentation Index")
[+] set(DOC_NAME "AXL Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\doc\manual\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Reference")
[+] set(DOC_NAME "AXL Reference")
[-] set (TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/manual)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/manual)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\CMakeLists.txt
----------------------
[-] if (LINUX)
[+] if(LINUX)
[-] 	if (${LIBUDEV_FOUND})
[+] 	if(${LIBUDEV_FOUND})
[-] 		option (
[+] 		option(
[-] 		option (
[+] 		option(
[-] 			"Build wrappers for new functions in LibUdev (e.g. udev_device_get_sysattr_value)"
[+] 			"Build wrappers for new functions in LibUdev(e.g. udev_device_get_sysattr_value)"
[-] 	else ()
[+] 	else()
[-] 		unset (BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[+] 		unset(BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_core)
[+] add_subdirectory(axl_core)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_GUI_QT CACHE)
[+] 	unset(BUILD_AXL_GUI_QT CACHE)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_GUI)
[+] if(BUILD_AXL_GUI)
[-] 	add_subdirectory (axl_gui)
[+] 	add_subdirectory(axl_gui)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND)
[+] if(RAGEL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_INI CACHE)
[+] 	unset(BUILD_AXL_INI CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	add_subdirectory (axl_ini)
[+] 	add_subdirectory(axl_ini)
[-] endif ()
[+] endif()
[-] if (EXPAT_FOUND)
[+] if(EXPAT_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_xml library (Expat XML Parser wrappers)"
[+] 		"Build axl_xml library(Expat XML Parser wrappers)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_XML CACHE)
[+] 	unset(BUILD_AXL_XML CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	add_subdirectory (axl_xml)
[+] 	add_subdirectory(axl_xml)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_fsm library (finite state machines)"
[+] 	"Build axl_fsm library(finite state machines)"
[-] if (BUILD_AXL_FSM)
[+] if(BUILD_AXL_FSM)
[-] 	add_subdirectory (axl_fsm)
[+] 	add_subdirectory(axl_fsm)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_PCAP CACHE)
[+] 	unset(BUILD_AXL_IO_PCAP CACHE)
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_USB CACHE)
[+] 	unset(BUILD_AXL_IO_USB CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO)
[+] if(BUILD_AXL_IO)
[-] 	add_subdirectory (axl_io)
[+] 	add_subdirectory(axl_io)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_LEX)
[+] if(BUILD_AXL_LEX)
[-] 	add_subdirectory (axl_lex)
[+] 	add_subdirectory(axl_lex)
[-] endif ()
[+] endif()
[-] if (LUA_FOUND)
[+] if(LUA_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_LUA CACHE)
[+] 	unset(BUILD_AXL_LUA CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_LUA)
[+] if(BUILD_AXL_LUA)
[-] 	add_subdirectory (axl_lua)
[+] 	add_subdirectory(axl_lua)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND AND LUA_FOUND)
[+] if(RAGEL_FOUND AND LUA_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_st library (string templates)"
[+] 		"Build axl_st library(string templates)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_ST CACHE)
[+] 	unset(BUILD_AXL_ST CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	add_subdirectory (axl_st)
[+] 	add_subdirectory(axl_st)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_zip library (miniz wrapper)"
[+] 	"Build axl_zip library(miniz wrapper)"
[-] if (BUILD_AXL_ZIP)
[+] if(BUILD_AXL_ZIP)
[-] 	add_subdirectory (axl_zip)
[+] 	add_subdirectory(axl_zip)
[-] endif ()
[+] endif()
[-] if (OPENSSL_FOUND)
[+] if(OPENSSL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_CRY CACHE)
[+] 	unset(BUILD_AXL_CRY CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	add_subdirectory (axl_cry)
[+] 	add_subdirectory(axl_cry)
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	option (
[+] 	option(
[-] 		"Build axl_cf library (Core Foundation Framework wrappers)"
[+] 		"Build axl_cf library(Core Foundation Framework wrappers)"
[-] 	option (
[+] 	option(
[-] 		"Build axl_iok library (IOKit Framework wrappers)"
[+] 		"Build axl_iok library(IOKit Framework wrappers)"
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CF)
[+] if(BUILD_AXL_CF)
[-] 	add_subdirectory (axl_cf)
[+] 	add_subdirectory(axl_cf)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IOK)
[+] if(BUILD_AXL_IOK)
[-] 	add_subdirectory (axl_iok)
[+] 	add_subdirectory(axl_iok)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_cf\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_core\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${SYS_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${SYS_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${SYS_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${SYS_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${SYS_LNX_LIBUDEV_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_LIBUDEV_CPP_LIST})
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (LINUX)
[+] if(LINUX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_cry\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_fsm\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_gui\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_GDI)
[+] if(NOT BUILD_AXL_GUI_GDI)
[-] 	axl_exclude_from_build (${GUI_GDI_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_GDI_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_QT)
[+] if(NOT BUILD_AXL_GUI_QT)
[-] 	axl_exclude_from_build (${GUI_QT_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_QT_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	add_definitions (
[+] 	add_definitions(
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	qt5_use_modules (axl_gui Widgets)
[+] 	qt5_use_modules(axl_gui Widgets)
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_ini\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_io\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (
[+] axl_exclude_from_build(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${IO_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${IO_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${IO_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${IO_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_IO_PCAP)
[+] if(BUILD_AXL_IO_PCAP)
[-] 	include_directories (${PCAP_INC_DIR})
[+] 	include_directories(${PCAP_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_PCAP=1)
[+] 	add_definitions(-D_AXL_IO_PCAP=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_PCAP_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PCAP_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_USB_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_USB_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] 	if (BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[+] 	if(BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[-] 		add_definitions (-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[+] 		add_definitions(-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_iok\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_lex\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:51 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_lua\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_st\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_xml\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\src\axl_zip\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (miniz.c)
[+] axl_exclude_from_build(miniz.c)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\test\CMakeLists.txt
----------------------
[-] option (
[+] option(
[-] 	"Build axl_test_auto (misc automated tests - smoke, unit, integration etc)"
[+] 	"Build axl_test_auto(misc automated tests - smoke, unit, integration etc)"
[-] if (BUILD_AXL_TEST_AUTO)
[+] if(BUILD_AXL_TEST_AUTO)
[-] 	add_subdirectory (axl_test_auto)
[+] 	add_subdirectory(axl_test_auto)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build axl_test_qt (QT GUI general-purpose testig app)"
[+] 		"Build axl_test_qt(QT GUI general-purpose testig app)"
[-] 	if (BUILD_AXL_TEST_QT)
[+] 	if(BUILD_AXL_TEST_QT)
[-] 		add_subdirectory (axl_test_qt)
[+] 		add_subdirectory(axl_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_test_con)
[+] add_subdirectory(axl_test_con)
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\test\axl_test_auto\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (test_Bstr.cpp)
[+] 	axl_exclude_from_build(test_Bstr.cpp)
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	include_directories (${OPENSSL_INC_DIR})
[+] 	include_directories(${OPENSSL_INC_DIR})
[-] 	link_directories (${OPENSSL_LIB_DIR})
[+] 	link_directories(${OPENSSL_LIB_DIR})
[-] 	add_definitions (-D_AXL_CRY=1)
[+] 	add_definitions(-D_AXL_CRY=1)
[-] 	list (APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Crypto.cpp)
[+] 	axl_exclude_from_build(test_Crypto.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Usb.cpp)
[+] 	axl_exclude_from_build(test_Usb.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	include_directories (${LUA_INC_DIR})
[+] 	include_directories(${LUA_INC_DIR})
[-] 	link_directories (${LUA_LIB_DIR})
[+] 	link_directories(${LUA_LIB_DIR})
[-] 	add_definitions (-D_AXL_LUA=1)
[+] 	add_definitions(-D_AXL_LUA=1)
[-] 	list (APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_StringTemplate.cpp)
[+] 	axl_exclude_from_build(test_StringTemplate.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	list (APPEND OPT_LIB_LIST axl_ini)
[+] 	list(APPEND OPT_LIB_LIST axl_ini)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_IniParser.cpp)
[+] 	axl_exclude_from_build(test_IniParser.cpp)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[+] 	if(BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_LUA AND LUA_DLL_DIR)
[+] 	if(BUILD_AXL_LUA AND LUA_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] file (
[+] file(
[-] foreach (_FILE_NAME ${TEST_CPP_LIST})
[+] foreach(_FILE_NAME ${TEST_CPP_LIST})
[-] 	axl_is_excluded_from_build (_IS_EXCLUDED ${_FILE_NAME})
[+] 	axl_is_excluded_from_build(_IS_EXCLUDED ${_FILE_NAME})
[-] 	if (NOT _IS_EXCLUDED)
[+] 	if(NOT _IS_EXCLUDED)
[-] 		get_filename_component (_TEST_NAME ${_FILE_NAME} NAME_WE)
[+] 		get_filename_component(_TEST_NAME ${_FILE_NAME} NAME_WE)
[-] 		add_test (
[+] 		add_test(
[-] 	endif ()
[+] 	endif()
[-] endforeach ()
[+] endforeach()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\test\axl_test_con\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	include_directories (${EXPAT_INC_DIR})
[+] 	include_directories(${EXPAT_INC_DIR})
[-] 	link_directories (${EXPAT_LIB_DIR})
[+] 	link_directories(${EXPAT_LIB_DIR})
[-] 	add_definitions (-D_AXL_XML=1)
[+] 	add_definitions(-D_AXL_XML=1)
[-] 	list (APPEND OPT_LIB_LIST axl_xml expat)
[+] 	list(APPEND OPT_LIB_LIST axl_xml expat)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_XML AND EXPAT_DLL_DIR)
[+] 	if(BUILD_AXL_XML AND EXPAT_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[+] 		list(APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10\_CPack_Packages\win32-Source\7Z\axl-6.2.1-src\test\axl_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] set (
[+] set(
[-] qt5_wrap_cpp_alt (
[+] qt5_wrap_cpp_alt(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (axl_test_qt Widgets)
[+] qt5_use_modules(axl_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (UNIX AND NOT APPLE)
[+] if(UNIX AND NOT APPLE)
[-] 	add_qt_rpath_link ()
[+] 	add_qt_rpath_link()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\CMakeLists.txt
----------------------
[-] project (axl)
[+] project(axl)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(AXL_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(AXL_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(AXL_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(AXL_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(AXL_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${AXL_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${AXL_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (AXL_INSTALL_LIB_SUBDIR lib)
[+] set(AXL_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (AXL_INSTALL_INC_SUBDIR     include)
[+] 	set(AXL_INSTALL_INC_SUBDIR     include)
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (AXL_INSTALL_DOC_SUBDIR     doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(AXL_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(AXL_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(AXL_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/axl_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${AXL_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${AXL_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${AXL_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${AXL_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\cmake\CMakeLists.txt
----------------------
[-] string (REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\doc\CMakeLists.txt
----------------------
[-] if (SPHINX_FOUND)
[+] if(SPHINX_FOUND)
[-] 	add_subdirectory (index)
[+] 	add_subdirectory(index)
[-] 	add_subdirectory (build-guide)
[+] 	add_subdirectory(build-guide)
[-] 	if (DOXYGEN_FOUND AND DOXYREST_FOUND)
[+] 	if(DOXYGEN_FOUND AND DOXYREST_FOUND)
[-] 		add_subdirectory (manual)
[+] 		add_subdirectory(manual)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Build Guide")
[+] set(DOC_NAME "AXL Build Guide")
[-] set (TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Documentation Index")
[+] set(DOC_NAME "AXL Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\doc\manual\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Reference")
[+] set(DOC_NAME "AXL Reference")
[-] set (TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/manual)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/manual)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\CMakeLists.txt
----------------------
[-] if (LINUX)
[+] if(LINUX)
[-] 	if (${LIBUDEV_FOUND})
[+] 	if(${LIBUDEV_FOUND})
[-] 		option (
[+] 		option(
[-] 		option (
[+] 		option(
[-] 			"Build wrappers for new functions in LibUdev (e.g. udev_device_get_sysattr_value)"
[+] 			"Build wrappers for new functions in LibUdev(e.g. udev_device_get_sysattr_value)"
[-] 	else ()
[+] 	else()
[-] 		unset (BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[+] 		unset(BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_core)
[+] add_subdirectory(axl_core)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_GUI_QT CACHE)
[+] 	unset(BUILD_AXL_GUI_QT CACHE)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_GUI)
[+] if(BUILD_AXL_GUI)
[-] 	add_subdirectory (axl_gui)
[+] 	add_subdirectory(axl_gui)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND)
[+] if(RAGEL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_INI CACHE)
[+] 	unset(BUILD_AXL_INI CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	add_subdirectory (axl_ini)
[+] 	add_subdirectory(axl_ini)
[-] endif ()
[+] endif()
[-] if (EXPAT_FOUND)
[+] if(EXPAT_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_xml library (Expat XML Parser wrappers)"
[+] 		"Build axl_xml library(Expat XML Parser wrappers)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_XML CACHE)
[+] 	unset(BUILD_AXL_XML CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	add_subdirectory (axl_xml)
[+] 	add_subdirectory(axl_xml)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_fsm library (finite state machines)"
[+] 	"Build axl_fsm library(finite state machines)"
[-] if (BUILD_AXL_FSM)
[+] if(BUILD_AXL_FSM)
[-] 	add_subdirectory (axl_fsm)
[+] 	add_subdirectory(axl_fsm)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_PCAP CACHE)
[+] 	unset(BUILD_AXL_IO_PCAP CACHE)
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_USB CACHE)
[+] 	unset(BUILD_AXL_IO_USB CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO)
[+] if(BUILD_AXL_IO)
[-] 	add_subdirectory (axl_io)
[+] 	add_subdirectory(axl_io)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_LEX)
[+] if(BUILD_AXL_LEX)
[-] 	add_subdirectory (axl_lex)
[+] 	add_subdirectory(axl_lex)
[-] endif ()
[+] endif()
[-] if (LUA_FOUND)
[+] if(LUA_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_LUA CACHE)
[+] 	unset(BUILD_AXL_LUA CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_LUA)
[+] if(BUILD_AXL_LUA)
[-] 	add_subdirectory (axl_lua)
[+] 	add_subdirectory(axl_lua)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND AND LUA_FOUND)
[+] if(RAGEL_FOUND AND LUA_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_st library (string templates)"
[+] 		"Build axl_st library(string templates)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_ST CACHE)
[+] 	unset(BUILD_AXL_ST CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	add_subdirectory (axl_st)
[+] 	add_subdirectory(axl_st)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_zip library (miniz wrapper)"
[+] 	"Build axl_zip library(miniz wrapper)"
[-] if (BUILD_AXL_ZIP)
[+] if(BUILD_AXL_ZIP)
[-] 	add_subdirectory (axl_zip)
[+] 	add_subdirectory(axl_zip)
[-] endif ()
[+] endif()
[-] if (OPENSSL_FOUND)
[+] if(OPENSSL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_CRY CACHE)
[+] 	unset(BUILD_AXL_CRY CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	add_subdirectory (axl_cry)
[+] 	add_subdirectory(axl_cry)
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	option (
[+] 	option(
[-] 		"Build axl_cf library (Core Foundation Framework wrappers)"
[+] 		"Build axl_cf library(Core Foundation Framework wrappers)"
[-] 	option (
[+] 	option(
[-] 		"Build axl_iok library (IOKit Framework wrappers)"
[+] 		"Build axl_iok library(IOKit Framework wrappers)"
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CF)
[+] if(BUILD_AXL_CF)
[-] 	add_subdirectory (axl_cf)
[+] 	add_subdirectory(axl_cf)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IOK)
[+] if(BUILD_AXL_IOK)
[-] 	add_subdirectory (axl_iok)
[+] 	add_subdirectory(axl_iok)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_cf\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_core\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${SYS_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${SYS_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${SYS_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${SYS_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${SYS_LNX_LIBUDEV_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_LIBUDEV_CPP_LIST})
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (LINUX)
[+] if(LINUX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_cry\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_fsm\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_gui\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_GDI)
[+] if(NOT BUILD_AXL_GUI_GDI)
[-] 	axl_exclude_from_build (${GUI_GDI_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_GDI_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_QT)
[+] if(NOT BUILD_AXL_GUI_QT)
[-] 	axl_exclude_from_build (${GUI_QT_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_QT_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	add_definitions (
[+] 	add_definitions(
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	qt5_use_modules (axl_gui Widgets)
[+] 	qt5_use_modules(axl_gui Widgets)
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_ini\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_io\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (
[+] axl_exclude_from_build(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${IO_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${IO_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${IO_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${IO_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_IO_PCAP)
[+] if(BUILD_AXL_IO_PCAP)
[-] 	include_directories (${PCAP_INC_DIR})
[+] 	include_directories(${PCAP_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_PCAP=1)
[+] 	add_definitions(-D_AXL_IO_PCAP=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_PCAP_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PCAP_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_USB_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_USB_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] 	if (BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[+] 	if(BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[-] 		add_definitions (-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[+] 		add_definitions(-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_iok\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_lex\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_lua\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_st\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_xml\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\src\axl_zip\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (miniz.c)
[+] axl_exclude_from_build(miniz.c)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\test\CMakeLists.txt
----------------------
[-] option (
[+] option(
[-] 	"Build axl_test_auto (misc automated tests - smoke, unit, integration etc)"
[+] 	"Build axl_test_auto(misc automated tests - smoke, unit, integration etc)"
[-] if (BUILD_AXL_TEST_AUTO)
[+] if(BUILD_AXL_TEST_AUTO)
[-] 	add_subdirectory (axl_test_auto)
[+] 	add_subdirectory(axl_test_auto)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build axl_test_qt (QT GUI general-purpose testig app)"
[+] 		"Build axl_test_qt(QT GUI general-purpose testig app)"
[-] 	if (BUILD_AXL_TEST_QT)
[+] 	if(BUILD_AXL_TEST_QT)
[-] 		add_subdirectory (axl_test_qt)
[+] 		add_subdirectory(axl_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_test_con)
[+] add_subdirectory(axl_test_con)
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\test\axl_test_auto\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (test_Bstr.cpp)
[+] 	axl_exclude_from_build(test_Bstr.cpp)
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	include_directories (${OPENSSL_INC_DIR})
[+] 	include_directories(${OPENSSL_INC_DIR})
[-] 	link_directories (${OPENSSL_LIB_DIR})
[+] 	link_directories(${OPENSSL_LIB_DIR})
[-] 	add_definitions (-D_AXL_CRY=1)
[+] 	add_definitions(-D_AXL_CRY=1)
[-] 	list (APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Crypto.cpp)
[+] 	axl_exclude_from_build(test_Crypto.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Usb.cpp)
[+] 	axl_exclude_from_build(test_Usb.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	include_directories (${LUA_INC_DIR})
[+] 	include_directories(${LUA_INC_DIR})
[-] 	link_directories (${LUA_LIB_DIR})
[+] 	link_directories(${LUA_LIB_DIR})
[-] 	add_definitions (-D_AXL_LUA=1)
[+] 	add_definitions(-D_AXL_LUA=1)
[-] 	list (APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_StringTemplate.cpp)
[+] 	axl_exclude_from_build(test_StringTemplate.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	list (APPEND OPT_LIB_LIST axl_ini)
[+] 	list(APPEND OPT_LIB_LIST axl_ini)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_IniParser.cpp)
[+] 	axl_exclude_from_build(test_IniParser.cpp)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[+] 	if(BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_LUA AND LUA_DLL_DIR)
[+] 	if(BUILD_AXL_LUA AND LUA_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] file (
[+] file(
[-] foreach (_FILE_NAME ${TEST_CPP_LIST})
[+] foreach(_FILE_NAME ${TEST_CPP_LIST})
[-] 	axl_is_excluded_from_build (_IS_EXCLUDED ${_FILE_NAME})
[+] 	axl_is_excluded_from_build(_IS_EXCLUDED ${_FILE_NAME})
[-] 	if (NOT _IS_EXCLUDED)
[+] 	if(NOT _IS_EXCLUDED)
[-] 		get_filename_component (_TEST_NAME ${_FILE_NAME} NAME_WE)
[+] 		get_filename_component(_TEST_NAME ${_FILE_NAME} NAME_WE)
[-] 		add_test (
[+] 		add_test(
[-] 	endif ()
[+] 	endif()
[-] endforeach ()
[+] endforeach()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\test\axl_test_con\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	include_directories (${EXPAT_INC_DIR})
[+] 	include_directories(${EXPAT_INC_DIR})
[-] 	link_directories (${EXPAT_LIB_DIR})
[+] 	link_directories(${EXPAT_LIB_DIR})
[-] 	add_definitions (-D_AXL_XML=1)
[+] 	add_definitions(-D_AXL_XML=1)
[-] 	list (APPEND OPT_LIB_LIST axl_xml expat)
[+] 	list(APPEND OPT_LIB_LIST axl_xml expat)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_XML AND EXPAT_DLL_DIR)
[+] 	if(BUILD_AXL_XML AND EXPAT_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[+] 		list(APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:52 - C:\Projects\repos\ioninja\axl\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\axl-6.2.1-src\test\axl_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] set (
[+] set(
[-] qt5_wrap_cpp_alt (
[+] qt5_wrap_cpp_alt(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (axl_test_qt Widgets)
[+] qt5_use_modules(axl_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (UNIX AND NOT APPLE)
[+] if(UNIX AND NOT APPLE)
[-] 	add_qt_rpath_link ()
[+] 	add_qt_rpath_link()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\cmake\CMakeLists.txt
----------------------
[-] string (REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." AXL_INSTALL_ROOT_SUBDIR ${AXL_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\doc\CMakeLists.txt
----------------------
[-] if (SPHINX_FOUND)
[+] if(SPHINX_FOUND)
[-] 	add_subdirectory (index)
[+] 	add_subdirectory(index)
[-] 	add_subdirectory (build-guide)
[+] 	add_subdirectory(build-guide)
[-] 	if (DOXYGEN_FOUND AND DOXYREST_FOUND)
[+] 	if(DOXYGEN_FOUND AND DOXYREST_FOUND)
[-] 		add_subdirectory (manual)
[+] 		add_subdirectory(manual)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Build Guide")
[+] set(DOC_NAME "AXL Build Guide")
[-] set (TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-build-guide-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Documentation Index")
[+] set(DOC_NAME "AXL Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\doc\manual\CMakeLists.txt
----------------------
[-] set (DOC_NAME "AXL Reference")
[+] set(DOC_NAME "AXL Reference")
[-] set (TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME axl-${AXL_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${AXL_DOC_DIR}/html/manual)
[+] set(HTML_DIR ${AXL_DOC_DIR}/html/manual)
[-] set (PDF_DIR  ${AXL_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${AXL_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE ${DOXYREST_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\CMakeLists.txt
----------------------
[-] if (LINUX)
[+] if(LINUX)
[-] 	if (${LIBUDEV_FOUND})
[+] 	if(${LIBUDEV_FOUND})
[-] 		option (
[+] 		option(
[-] 		option (
[+] 		option(
[-] 			"Build wrappers for new functions in LibUdev (e.g. udev_device_get_sysattr_value)"
[+] 			"Build wrappers for new functions in LibUdev(e.g. udev_device_get_sysattr_value)"
[-] 	else ()
[+] 	else()
[-] 		unset (BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[+] 		unset(BUILD_AXL_SYS_LNX_LIBUDEV CACHE)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_core)
[+] add_subdirectory(axl_core)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_GUI_QT CACHE)
[+] 	unset(BUILD_AXL_GUI_QT CACHE)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_GUI)
[+] if(BUILD_AXL_GUI)
[-] 	add_subdirectory (axl_gui)
[+] 	add_subdirectory(axl_gui)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND)
[+] if(RAGEL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_INI CACHE)
[+] 	unset(BUILD_AXL_INI CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	add_subdirectory (axl_ini)
[+] 	add_subdirectory(axl_ini)
[-] endif ()
[+] endif()
[-] if (EXPAT_FOUND)
[+] if(EXPAT_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_xml library (Expat XML Parser wrappers)"
[+] 		"Build axl_xml library(Expat XML Parser wrappers)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_XML CACHE)
[+] 	unset(BUILD_AXL_XML CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	add_subdirectory (axl_xml)
[+] 	add_subdirectory(axl_xml)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_fsm library (finite state machines)"
[+] 	"Build axl_fsm library(finite state machines)"
[-] if (BUILD_AXL_FSM)
[+] if(BUILD_AXL_FSM)
[-] 	add_subdirectory (axl_fsm)
[+] 	add_subdirectory(axl_fsm)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_PCAP CACHE)
[+] 	unset(BUILD_AXL_IO_PCAP CACHE)
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_IO_USB CACHE)
[+] 	unset(BUILD_AXL_IO_USB CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO)
[+] if(BUILD_AXL_IO)
[-] 	add_subdirectory (axl_io)
[+] 	add_subdirectory(axl_io)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_AXL_LEX)
[+] if(BUILD_AXL_LEX)
[-] 	add_subdirectory (axl_lex)
[+] 	add_subdirectory(axl_lex)
[-] endif ()
[+] endif()
[-] if (LUA_FOUND)
[+] if(LUA_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_LUA CACHE)
[+] 	unset(BUILD_AXL_LUA CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_LUA)
[+] if(BUILD_AXL_LUA)
[-] 	add_subdirectory (axl_lua)
[+] 	add_subdirectory(axl_lua)
[-] endif ()
[+] endif()
[-] if (RAGEL_FOUND AND LUA_FOUND)
[+] if(RAGEL_FOUND AND LUA_FOUND)
[-] 	option (
[+] 	option(
[-] 		"Build axl_st library (string templates)"
[+] 		"Build axl_st library(string templates)"
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_ST CACHE)
[+] 	unset(BUILD_AXL_ST CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	add_subdirectory (axl_st)
[+] 	add_subdirectory(axl_st)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build axl_zip library (miniz wrapper)"
[+] 	"Build axl_zip library(miniz wrapper)"
[-] if (BUILD_AXL_ZIP)
[+] if(BUILD_AXL_ZIP)
[-] 	add_subdirectory (axl_zip)
[+] 	add_subdirectory(axl_zip)
[-] endif ()
[+] endif()
[-] if (OPENSSL_FOUND)
[+] if(OPENSSL_FOUND)
[-] 	option (
[+] 	option(
[-] else ()
[+] else()
[-] 	unset (BUILD_AXL_CRY CACHE)
[+] 	unset(BUILD_AXL_CRY CACHE)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	add_subdirectory (axl_cry)
[+] 	add_subdirectory(axl_cry)
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	option (
[+] 	option(
[-] 		"Build axl_cf library (Core Foundation Framework wrappers)"
[+] 		"Build axl_cf library(Core Foundation Framework wrappers)"
[-] 	option (
[+] 	option(
[-] 		"Build axl_iok library (IOKit Framework wrappers)"
[+] 		"Build axl_iok library(IOKit Framework wrappers)"
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_CF)
[+] if(BUILD_AXL_CF)
[-] 	add_subdirectory (axl_cf)
[+] 	add_subdirectory(axl_cf)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IOK)
[+] if(BUILD_AXL_IOK)
[-] 	add_subdirectory (axl_iok)
[+] 	add_subdirectory(axl_iok)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_cf\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_core\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${SYS_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${SYS_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${SYS_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${SYS_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${SYS_LNX_LIBUDEV_CPP_LIST})
[+] 	axl_exclude_from_build(${SYS_LNX_LIBUDEV_CPP_LIST})
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (LINUX)
[+] if(LINUX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (APPLE)
[+] if(APPLE)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_cry\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_fsm\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_gui\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_GDI)
[+] if(NOT BUILD_AXL_GUI_GDI)
[-] 	axl_exclude_from_build (${GUI_GDI_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_GDI_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT BUILD_AXL_GUI_QT)
[+] if(NOT BUILD_AXL_GUI_QT)
[-] 	axl_exclude_from_build (${GUI_QT_CPP_LIST})
[+] 	axl_exclude_from_build(${GUI_QT_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	add_definitions (
[+] 	add_definitions(
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] if (BUILD_AXL_GUI_QT)
[+] if(BUILD_AXL_GUI_QT)
[-] 	qt5_use_modules (axl_gui Widgets)
[+] 	qt5_use_modules(axl_gui Widgets)
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_ini\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_io\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (
[+] axl_exclude_from_build(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT UNIX)
[+] if(NOT UNIX)
[-] 	axl_exclude_from_build (${IO_PSX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PSX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (${IO_WIN_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_WIN_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT LINUX)
[+] if(NOT LINUX)
[-] 	axl_exclude_from_build (${IO_LNX_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_LNX_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT APPLE)
[+] if(NOT APPLE)
[-] 	axl_exclude_from_build (${IO_DRW_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_DRW_CPP_LIST})
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] if (BUILD_AXL_IO_PCAP)
[+] if(BUILD_AXL_IO_PCAP)
[-] 	include_directories (${PCAP_INC_DIR})
[+] 	include_directories(${PCAP_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_PCAP=1)
[+] 	add_definitions(-D_AXL_IO_PCAP=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_PCAP_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_PCAP_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (${IO_USB_CPP_LIST})
[+] 	axl_exclude_from_build(${IO_USB_CPP_LIST})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_SYS_LNX_LIBUDEV)
[+] if(BUILD_AXL_SYS_LNX_LIBUDEV)
[-] 	add_definitions (-D_AXL_SYS_LNX_LIBUDEV=1)
[+] 	add_definitions(-D_AXL_SYS_LNX_LIBUDEV=1)
[-] 	if (BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[+] 	if(BUILD_AXL_SYS_LNX_LIBUDEV_NEW_API)
[-] 		add_definitions (-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[+] 		add_definitions(-D_AXL_SYS_LNX_LIBUDEV_NEW_API=1)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] if (WIN32)
[+] if(WIN32)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	axl_install_redirected_includes (
[+] 	axl_install_redirected_includes(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_iok\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_lex\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_lua\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_st\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_ragel_step (
[+] add_ragel_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_xml\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\src\axl_zip\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (miniz.c)
[+] axl_exclude_from_build(miniz.c)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] axl_install_redirected_includes (
[+] axl_install_redirected_includes(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\test\CMakeLists.txt
----------------------
[-] option (
[+] option(
[-] 	"Build axl_test_auto (misc automated tests - smoke, unit, integration etc)"
[+] 	"Build axl_test_auto(misc automated tests - smoke, unit, integration etc)"
[-] if (BUILD_AXL_TEST_AUTO)
[+] if(BUILD_AXL_TEST_AUTO)
[-] 	add_subdirectory (axl_test_auto)
[+] 	add_subdirectory(axl_test_auto)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build axl_test_qt (QT GUI general-purpose testig app)"
[+] 		"Build axl_test_qt(QT GUI general-purpose testig app)"
[-] 	if (BUILD_AXL_TEST_QT)
[+] 	if(BUILD_AXL_TEST_QT)
[-] 		add_subdirectory (axl_test_qt)
[+] 		add_subdirectory(axl_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (axl_test_con)
[+] add_subdirectory(axl_test_con)
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\test\axl_test_auto\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (NOT WIN32)
[+] if(NOT WIN32)
[-] 	axl_exclude_from_build (test_Bstr.cpp)
[+] 	axl_exclude_from_build(test_Bstr.cpp)
[-] endif ()
[+] endif()
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_CRY)
[+] if(BUILD_AXL_CRY)
[-] 	include_directories (${OPENSSL_INC_DIR})
[+] 	include_directories(${OPENSSL_INC_DIR})
[-] 	link_directories (${OPENSSL_LIB_DIR})
[+] 	link_directories(${OPENSSL_LIB_DIR})
[-] 	add_definitions (-D_AXL_CRY=1)
[+] 	add_definitions(-D_AXL_CRY=1)
[-] 	list (APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_cry ${OPENSSL_CRYPTO_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Crypto.cpp)
[+] 	axl_exclude_from_build(test_Crypto.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_Usb.cpp)
[+] 	axl_exclude_from_build(test_Usb.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_ST)
[+] if(BUILD_AXL_ST)
[-] 	include_directories (${LUA_INC_DIR})
[+] 	include_directories(${LUA_INC_DIR})
[-] 	link_directories (${LUA_LIB_DIR})
[+] 	link_directories(${LUA_LIB_DIR})
[-] 	add_definitions (-D_AXL_LUA=1)
[+] 	add_definitions(-D_AXL_LUA=1)
[-] 	list (APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST axl_st axl_lua ${LUA_LIB_NAME})
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_StringTemplate.cpp)
[+] 	axl_exclude_from_build(test_StringTemplate.cpp)
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_INI)
[+] if(BUILD_AXL_INI)
[-] 	list (APPEND OPT_LIB_LIST axl_ini)
[+] 	list(APPEND OPT_LIB_LIST axl_ini)
[-] else ()
[+] else()
[-] 	axl_exclude_from_build (test_IniParser.cpp)
[+] 	axl_exclude_from_build(test_IniParser.cpp)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[+] 	if(BUILD_AXL_CRY AND OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_LUA AND LUA_DLL_DIR)
[+] 	if(BUILD_AXL_LUA AND LUA_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${LUA_DLL_DIR}/${LUA_LIB_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] file (
[+] file(
[-] foreach (_FILE_NAME ${TEST_CPP_LIST})
[+] foreach(_FILE_NAME ${TEST_CPP_LIST})
[-] 	axl_is_excluded_from_build (_IS_EXCLUDED ${_FILE_NAME})
[+] 	axl_is_excluded_from_build(_IS_EXCLUDED ${_FILE_NAME})
[-] 	if (NOT _IS_EXCLUDED)
[+] 	if(NOT _IS_EXCLUDED)
[-] 		get_filename_component (_TEST_NAME ${_FILE_NAME} NAME_WE)
[+] 		get_filename_component(_TEST_NAME ${_FILE_NAME} NAME_WE)
[-] 		add_test (
[+] 		add_test(
[-] 	endif ()
[+] 	endif()
[-] endforeach ()
[+] endforeach()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\test\axl_test_con\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${AXL_INC_DIR})
[+] include_directories(${AXL_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] set (OPT_LIB_LIST)
[+] set(OPT_LIB_LIST)
[-] if (BUILD_AXL_IO_USB)
[+] if(BUILD_AXL_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_AXL_IO_USB=1)
[+] 	add_definitions(-D_AXL_IO_USB=1)
[-] 	list (APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[+] 	list(APPEND OPT_LIB_LIST ${LIBUSB_LIB_NAME})
[-] endif ()
[+] endif()
[-] if (BUILD_AXL_XML)
[+] if(BUILD_AXL_XML)
[-] 	include_directories (${EXPAT_INC_DIR})
[+] 	include_directories(${EXPAT_INC_DIR})
[-] 	link_directories (${EXPAT_LIB_DIR})
[+] 	link_directories(${EXPAT_LIB_DIR})
[-] 	add_definitions (-D_AXL_XML=1)
[+] 	add_definitions(-D_AXL_XML=1)
[-] 	list (APPEND OPT_LIB_LIST axl_xml expat)
[+] 	list(APPEND OPT_LIB_LIST axl_xml expat)
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	if (BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[+] 	if(BUILD_AXL_IO_USB AND LIBUSB_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[+] 		list(APPEND _DLL_LIST ${LIBUSB_DLL_DIR}/libusb-1.0.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (BUILD_AXL_XML AND EXPAT_DLL_DIR)
[+] 	if(BUILD_AXL_XML AND EXPAT_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[+] 		list(APPEND _DLL_LIST ${EXPAT_DLL_DIR}/expat.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:53 - C:\Projects\repos\ioninja\axl\test\axl_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] set (
[+] set(
[-] qt5_wrap_cpp_alt (
[+] qt5_wrap_cpp_alt(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (axl_test_qt Widgets)
[+] qt5_use_modules(axl_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (UNIX AND NOT APPLE)
[+] if(UNIX AND NOT APPLE)
[-] 	add_qt_rpath_link ()
[+] 	add_qt_rpath_link()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
