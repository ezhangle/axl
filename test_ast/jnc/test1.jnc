typedef unsigned int8  uint8_t,  uchar_t,  byte_t;
typedef unsigned int16 uint16_t, ushort_t, word_t;
typedef unsigned int32 uint32_t, ulong_t,  dword_t;
typedef unsigned int64 uint64_t, qword_t;
typedef bigendian int16 beint16_t;
typedef bigendian int32 beint32_t;
typedef bigendian int64 beint64_t;
typedef bigendian unsigned int16 beuint16_t, beushort_t, beword_t;
typedef bigendian unsigned int32 beuint32_t, beulong_t,  bedword_t;
typedef bigendian unsigned int64 beuint64_t, beqword_t;

typedef unsigned int32 size_t;

typedef const char* unsafe pchar_t;
typedef const char* pchar2_t;

//.............................................................................

void
printf (
	char* unsafe pFormat,
	unsafe ...
	);

//.............................................................................

struct TStruct
{
	int32 m_a:8;
	int32 m_b:8;
	int32 m_c:8;
	int32 m_d:8;
};

union TUnion
{
	TStruct m_Struct;
	unsigned bigendian int32 m_Value;
};

struct TBase1
{
	int m_a;
};

struct TBase2
{
	int m_b;
};

struct TBase3: TBase2
{
	int m_c;
};

struct TDerived: TBase1, TBase3
{
	int m_d;
};

int
main ()
{
	TDerived s;

	s.m_a = 1;
	s.m_b = 2;
	s.m_c = 3;
	s.m_d = 4;

	TBase1* p1 = &s;
	TBase2* p2 = &s;
	TBase3* p3 = &s;

	p1->m_a = 10;
	p2->m_b = 20;
	p3->m_c = 30;

	p2 = p3;

	printf (
		"{ %d %d %d %d }\n", 
		s.m_a, 
		s.m_b, 
		s.m_c, 
		s.m_d
		);

	
/*	TUnion u;
	u.m_Value = 0x01020380;

	int a = u.m_Struct.m_a;
	int b = u.m_Struct.m_b;
	int c = u.m_Struct.m_c;
	int d = u.m_Struct.m_d;

	printf (
		"%x, { %x %x %x %x } %x\n", 
		u.m_Value, 
		u.m_Struct.m_a, 
		u.m_Struct.m_b, 
		u.m_Struct.m_c, 
		u.m_Struct.m_d,
		
		u.m_Struct.m_b + u.m_Struct.m_c
		);
*/
	return 0;
}

//.............................................................................

/*
void
StructTest (
	TStruct* unsafe p,
	size_t Size
	);
*/

//.............................................................................
