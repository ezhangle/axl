//.............................................................................

class IScheduler
{
	abstract 
	bool 
	Schedule (function* pfn ());
};

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

class CNewThreadScheduler: IScheduler
{
	override
	bool 
	Schedule (function* pfn ())
	{
		printf ("CNewThreadScheduler.Schedule ()\n");
		pfn ();
		return true;
	}
};

//.............................................................................

foo ()
{
	printf ("foo () TID: %d\n", GetCurrentThreadId ());
}

int 
main ()
{
	printf ("main () TID: %d\n", GetCurrentThreadId ());

	foo ();

	IScheduler s = stack new CNewThreadScheduler;

	IScheduler class* s2 = s;

//	s.Schedule (foo);

	return 0;
}
 
//.............................................................................

int
printf (
	unsafe const char* pFormat,
	unsafe ...
	);

int
GetCurrentThreadId ();

bool
CreateThread (function* pfn ());

void
IfaceTest (CNewThreadScheduler);

//.............................................................................
