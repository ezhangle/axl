//.............................................................................

foo (double a, double b, double c, double d)
{
	printf ("%f %f %f %f\n", a, b, c, d);
}

typedef FBar (int, int);

//.............................................................................

/*

bindable int Red;
bindable int Green;
bindable int Blue;

autoev AutoEv
{
	printf ("autoev: Red = %02x\n", Red);
	printf ("autoev: Green = %02x\n", Green);
	printf ("autoev: Blue = %02x\n", Blue);
	printf ("autoev: RGB (%02x %02x, %02x)\n", Red, Green, Blue);
};

//.............................................................................

OnRedChange ()
{
	printf ("OnRedChange: Red = %02x\n", Red);
}

class CTest
{
	preconstruct ()
	{
		printf ("CTest.preconstruct ()\n");
	}

	~this ()
	{
		printf ("CTest.~this ()\n");
	}
}

//.............................................................................

int
main ()
{
	FBar pfn = (stack FBar) foo ~(,20,, 40);	
	pfn (30, 40);

	{
		printf ("{\n");
		CTest t = stack new CTest;
		printf ("}\n");
	}

	onchange (Red) += OnRedChange;
	
	{
	stack new AutoEv;
	Red = 0xab;
	Green = 0xcd;
	Blue = 0xef;
	}

	Red = 0xff;
	
	printf ("done\n");
	return 0;
}

*/

//.............................................................................

property MyProp
{
	int
	get ()
	{
		printf ("MyProp.get ()\n");
	}

	set (int Value)
	{
		printf ("MyProp.set (%d)\n", Value);
	}	
};

typedef int property PIntProp;

//.............................................................................

int
main ()
{
	MyProp = 100;

	PIntProp prInt := (stack PIntProp) MyProp;

	int x = prInt;
	prInt = 100;

	printf ("done\n");
	return 0;
}

//.............................................................................

int
printf (
	char* unsafe pFormat,
	unsafe ...
	);

//.............................................................................
