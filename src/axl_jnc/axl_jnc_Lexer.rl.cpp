
/* #line 1 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
#include "pch.h"
#include "axl_jnc_Lexer.h"

// warning C4065: switch statement contains 'default' but no 'case' labels

#pragma warning (disable: 4065)

namespace axl {
namespace jnc {

//.............................................................................


/* #line 2 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
static const unsigned char _axl_jnc_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 91, 1, 92, 1, 93, 1, 
	94, 1, 95, 1, 96, 1, 97, 1, 
	98, 1, 99, 1, 100, 1, 101, 1, 
	102, 1, 103, 1, 104, 1, 105, 1, 
	106, 1, 107, 1, 108, 1, 109, 1, 
	110, 1, 111, 1, 112, 1, 113, 1, 
	114, 1, 115, 1, 116, 1, 118, 1, 
	119, 1, 120, 1, 121, 1, 122, 1, 
	123, 1, 124, 1, 125, 1, 126, 1, 
	127, 1, 128, 1, 129, 1, 130, 1, 
	131, 1, 132, 1, 133, 1, 134, 1, 
	135, 1, 136, 1, 137, 1, 138, 1, 
	139, 2, 0, 113, 2, 0, 114, 2, 
	0, 115, 2, 0, 117, 2, 3, 4, 
	2, 3, 5, 2, 3, 6, 2, 3, 
	7, 2, 3, 8, 2, 3, 9, 2, 
	3, 10, 2, 3, 11, 2, 3, 12, 
	2, 3, 13, 2, 3, 14, 2, 3, 
	15, 2, 3, 16, 2, 3, 17, 2, 
	3, 18, 2, 3, 19, 2, 3, 20, 
	2, 3, 21, 2, 3, 22, 2, 3, 
	23, 2, 3, 24, 2, 3, 25, 2, 
	3, 26, 2, 3, 27, 2, 3, 28, 
	2, 3, 29, 2, 3, 30, 2, 3, 
	31, 2, 3, 32, 2, 3, 33, 2, 
	3, 34, 2, 3, 35, 2, 3, 36, 
	2, 3, 37, 2, 3, 38, 2, 3, 
	39, 2, 3, 40, 2, 3, 41, 2, 
	3, 42, 2, 3, 43, 2, 3, 44, 
	2, 3, 45, 2, 3, 46, 2, 3, 
	47, 2, 3, 48, 2, 3, 49, 2, 
	3, 50, 2, 3, 51, 2, 3, 52, 
	2, 3, 53, 2, 3, 54, 2, 3, 
	55, 2, 3, 56, 2, 3, 57, 2, 
	3, 58, 2, 3, 59, 2, 3, 60, 
	2, 3, 61, 2, 3, 62, 2, 3, 
	63, 2, 3, 64, 2, 3, 65, 2, 
	3, 66, 2, 3, 67, 2, 3, 68, 
	2, 3, 69, 2, 3, 70, 2, 3, 
	71, 2, 3, 72, 2, 3, 73, 2, 
	3, 74, 2, 3, 75, 2, 3, 76, 
	2, 3, 77, 2, 3, 78, 2, 3, 
	79, 2, 3, 80, 2, 3, 81, 2, 
	3, 82, 2, 3, 83, 2, 3, 84, 
	2, 3, 85, 2, 3, 86, 2, 3, 
	87, 2, 3, 88, 2, 3, 89, 2, 
	3, 90
};

static const short _axl_jnc_key_offsets[] = {
	0, 3, 6, 7, 9, 12, 14, 21, 
	24, 73, 76, 77, 80, 81, 82, 84, 
	87, 88, 89, 91, 94, 95, 98, 99, 
	104, 106, 109, 110, 116, 117, 119, 120, 
	121, 123, 124, 125, 132, 141, 148, 149, 
	159, 167, 175, 183, 191, 199, 207, 215, 
	223, 231, 239, 247, 256, 264, 272, 280, 
	290, 299, 307, 315, 323, 331, 339, 347, 
	355, 363, 371, 379, 387, 395, 403, 411, 
	419, 427, 439, 447, 455, 463, 471, 479, 
	487, 495, 503, 511, 519, 527, 536, 544, 
	552, 560, 568, 576, 584, 592, 600, 608, 
	617, 627, 635, 643, 651, 659, 667, 675, 
	683, 691, 699, 707, 715, 723, 731, 739, 
	747, 755, 768, 776, 784, 792, 800, 808, 
	816, 824, 832, 840, 848, 856, 864, 876, 
	884, 892, 900, 908, 916, 924, 932, 940, 
	948, 956, 964, 972, 980, 988, 996, 1004, 
	1012, 1020, 1028, 1036, 1044, 1052, 1061, 1070, 
	1078, 1086, 1094, 1102, 1114, 1122, 1130, 1138, 
	1146, 1154, 1162, 1171, 1179, 1187, 1195, 1203, 
	1211, 1219, 1227, 1235, 1243, 1251, 1261, 1269, 
	1277, 1285, 1293, 1301, 1309, 1317, 1325, 1333, 
	1341, 1349, 1357, 1365, 1373, 1384, 1392, 1400, 
	1408, 1416, 1424, 1433, 1441, 1449, 1457, 1465, 
	1473, 1481, 1489, 1497, 1505, 1513, 1521, 1529, 
	1537, 1545, 1553, 1561, 1572, 1580, 1588, 1596, 
	1604, 1612, 1620, 1628, 1637, 1645, 1653, 1661, 
	1669, 1677, 1685, 1693, 1701, 1709, 1718, 1727, 
	1735, 1743, 1751, 1759, 1767, 1775, 1783, 1791, 
	1799, 1807, 1815, 1823, 1831, 1839, 1847, 1855, 
	1863, 1872, 1880, 1888, 1896, 1904, 1912, 1920, 
	1928, 1936, 1947, 1955, 1965, 1973, 1981, 1989, 
	1997, 2005, 2013, 2021, 2029, 2037, 2047, 2056, 
	2064, 2072, 2080, 2088, 2096, 2104, 2112, 2120, 
	2128, 2136, 2144, 2152, 2160, 2168, 2178, 2187, 
	2196, 2204, 2212, 2220, 2228, 2236, 2244, 2252, 
	2261, 2269, 2277, 2285, 2295, 2303, 2311, 2319, 
	2328, 2336, 2344, 2353, 2361, 2369, 2377, 2385, 
	2393, 2401, 2409, 2417, 2425, 2435, 2443, 2451, 
	2459, 2467, 2475, 2483, 2491, 2499, 2507, 2515, 
	2524, 2532, 2540, 2548, 2556, 2564, 2572, 2581, 
	2589, 2597, 2605, 2613, 2621
};

static const char _axl_jnc_trans_keys[] = {
	10, 34, 92, 10, 39, 92, 46, 10, 
	42, 10, 42, 47, 48, 57, 34, 48, 
	57, 65, 70, 97, 102, 10, 34, 92, 
	9, 10, 13, 32, 33, 34, 37, 38, 
	39, 42, 43, 45, 46, 47, 48, 58, 
	60, 61, 62, 64, 69, 94, 95, 97, 
	98, 99, 100, 101, 102, 103, 104, 105, 
	109, 110, 111, 112, 114, 115, 116, 117, 
	118, 119, 124, 49, 57, 65, 90, 106, 
	122, 9, 13, 32, 61, 10, 34, 92, 
	10, 61, 38, 61, 10, 39, 92, 10, 
	61, 43, 61, 45, 61, 62, 46, 42, 
	47, 61, 10, 46, 88, 120, 48, 57, 
	48, 57, 46, 48, 57, 10, 48, 57, 
	65, 70, 97, 102, 61, 60, 61, 61, 
	61, 61, 62, 61, 61, 95, 48, 57, 
	65, 90, 97, 122, 43, 45, 95, 48, 
	57, 65, 90, 97, 122, 95, 48, 57, 
	65, 90, 97, 122, 61, 95, 98, 108, 
	117, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	101, 103, 48, 57, 65, 90, 97, 122, 
	95, 118, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 111, 114, 48, 57, 65, 90, 
	97, 122, 95, 103, 110, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 98, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 107, 48, 57, 65, 
	90, 97, 122, 95, 97, 100, 104, 108, 
	111, 48, 57, 65, 90, 98, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	115, 116, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 101, 111, 48, 57, 65, 90, 97, 
	122, 95, 102, 108, 115, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 98, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 43, 45, 95, 108, 110, 
	118, 120, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 97, 108, 111, 114, 117, 48, 57, 
	65, 90, 98, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 112, 48, 57, 
	65, 90, 97, 122, 95, 102, 110, 48, 
	57, 65, 90, 97, 122, 95, 100, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 120, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 100, 
	48, 57, 65, 90, 97, 122, 49, 51, 
	54, 56, 95, 112, 48, 57, 65, 90, 
	97, 122, 54, 95, 48, 57, 65, 90, 
	97, 122, 50, 95, 48, 57, 65, 90, 
	97, 122, 52, 95, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 117, 48, 57, 65, 90, 
	97, 122, 95, 108, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 98, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 97, 101, 117, 48, 
	57, 65, 90, 98, 122, 95, 109, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 115, 48, 
	57, 65, 90, 97, 122, 95, 112, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 119, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 98, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 98, 110, 
	112, 118, 48, 57, 65, 90, 97, 122, 
	95, 106, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 101, 104, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 103, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 97, 111, 114, 117, 48, 57, 
	65, 90, 98, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 107, 48, 57, 
	65, 90, 97, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 102, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 120, 48, 57, 
	65, 90, 97, 122, 95, 101, 111, 48, 
	57, 65, 90, 97, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 115, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 112, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	118, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	121, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	117, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	98, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 116, 48, 57, 65, 90, 98, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 121, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 101, 105, 116, 119, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 103, 108, 122, 48, 
	57, 65, 90, 97, 121, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 97, 100, 
	114, 48, 57, 65, 90, 98, 122, 95, 
	99, 116, 48, 57, 65, 90, 97, 122, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 104, 48, 57, 65, 90, 97, 122, 
	95, 104, 114, 121, 48, 57, 65, 90, 
	97, 122, 95, 105, 114, 48, 57, 65, 
	90, 97, 122, 95, 110, 115, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 112, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 100, 111, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 104, 110, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	105, 115, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 97, 105, 48, 57, 65, 90, 98, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 103, 48, 57, 65, 90, 97, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 103, 48, 57, 65, 90, 97, 
	122, 95, 97, 105, 111, 48, 57, 65, 
	90, 98, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 105, 108, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 101, 104, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 107, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 61, 124, 0
};

static const char _axl_jnc_single_lengths[] = {
	3, 3, 1, 2, 3, 0, 1, 3, 
	43, 3, 1, 3, 1, 1, 2, 3, 
	1, 1, 2, 3, 1, 3, 1, 3, 
	0, 1, 1, 0, 1, 2, 1, 1, 
	2, 1, 1, 1, 3, 1, 1, 4, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 4, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 6, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 3, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 7, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 6, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 3, 2, 
	2, 2, 2, 6, 2, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 4, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 5, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 5, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 5, 2, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 4, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 4, 3, 3, 
	2, 2, 2, 2, 2, 2, 2, 3, 
	2, 2, 2, 4, 2, 2, 2, 3, 
	2, 2, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 3, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2
};

static const char _axl_jnc_range_lengths[] = {
	0, 0, 0, 0, 0, 1, 3, 0, 
	3, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 1, 0, 3, 0, 0, 0, 0, 
	0, 0, 0, 3, 3, 3, 0, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 0
};

static const short _axl_jnc_index_offsets[] = {
	0, 4, 8, 10, 13, 17, 19, 24, 
	28, 75, 79, 81, 85, 87, 89, 92, 
	96, 98, 100, 103, 107, 109, 113, 115, 
	120, 122, 125, 127, 131, 133, 136, 138, 
	140, 143, 145, 147, 152, 159, 164, 166, 
	174, 180, 186, 192, 198, 204, 210, 216, 
	222, 228, 234, 240, 247, 253, 259, 265, 
	273, 280, 286, 292, 298, 304, 310, 316, 
	322, 328, 334, 340, 346, 352, 358, 364, 
	370, 376, 386, 392, 398, 404, 410, 416, 
	422, 428, 434, 440, 446, 452, 459, 465, 
	471, 477, 483, 489, 495, 501, 507, 513, 
	520, 528, 534, 540, 546, 552, 558, 564, 
	570, 576, 582, 588, 594, 600, 606, 612, 
	618, 624, 635, 641, 647, 653, 659, 665, 
	671, 677, 683, 689, 695, 701, 707, 717, 
	723, 729, 735, 741, 747, 753, 759, 765, 
	771, 777, 783, 789, 795, 801, 807, 813, 
	819, 825, 831, 837, 843, 849, 856, 863, 
	869, 875, 881, 887, 897, 903, 909, 915, 
	921, 927, 933, 940, 946, 952, 958, 964, 
	970, 976, 982, 988, 994, 1000, 1008, 1014, 
	1020, 1026, 1032, 1038, 1044, 1050, 1056, 1062, 
	1068, 1074, 1080, 1086, 1092, 1101, 1107, 1113, 
	1119, 1125, 1131, 1138, 1144, 1150, 1156, 1162, 
	1168, 1174, 1180, 1186, 1192, 1198, 1204, 1210, 
	1216, 1222, 1228, 1234, 1243, 1249, 1255, 1261, 
	1267, 1273, 1279, 1285, 1292, 1298, 1304, 1310, 
	1316, 1322, 1328, 1334, 1340, 1346, 1353, 1360, 
	1366, 1372, 1378, 1384, 1390, 1396, 1402, 1408, 
	1414, 1420, 1426, 1432, 1438, 1444, 1450, 1456, 
	1462, 1469, 1475, 1481, 1487, 1493, 1499, 1505, 
	1511, 1517, 1526, 1532, 1540, 1546, 1552, 1558, 
	1564, 1570, 1576, 1582, 1588, 1594, 1602, 1609, 
	1615, 1621, 1627, 1633, 1639, 1645, 1651, 1657, 
	1663, 1669, 1675, 1681, 1687, 1693, 1701, 1708, 
	1715, 1721, 1727, 1733, 1739, 1745, 1751, 1757, 
	1764, 1770, 1776, 1782, 1790, 1796, 1802, 1808, 
	1815, 1821, 1827, 1834, 1840, 1846, 1852, 1858, 
	1864, 1870, 1876, 1882, 1888, 1896, 1902, 1908, 
	1914, 1920, 1926, 1932, 1938, 1944, 1950, 1956, 
	1963, 1969, 1975, 1981, 1987, 1993, 1999, 2006, 
	2012, 2018, 2024, 2030, 2036
};

static const short _axl_jnc_indicies[] = {
	2, 3, 4, 1, 6, 7, 8, 5, 
	10, 9, 12, 13, 11, 12, 13, 14, 
	11, 15, 0, 17, 18, 18, 18, 16, 
	19, 20, 21, 17, 23, 24, 23, 23, 
	25, 26, 27, 28, 29, 30, 31, 32, 
	33, 34, 35, 37, 38, 39, 40, 41, 
	43, 44, 42, 45, 46, 47, 48, 49, 
	50, 51, 52, 53, 54, 55, 56, 57, 
	58, 59, 60, 61, 62, 63, 64, 36, 
	42, 42, 22, 23, 23, 23, 65, 67, 
	66, 2, 3, 4, 1, 68, 1, 69, 
	66, 70, 71, 66, 6, 7, 8, 5, 
	72, 5, 73, 66, 74, 75, 66, 76, 
	77, 78, 66, 79, 66, 11, 80, 81, 
	66, 82, 80, 84, 85, 85, 36, 83, 
	15, 86, 84, 36, 83, 87, 17, 18, 
	18, 18, 88, 89, 66, 90, 91, 66, 
	93, 92, 94, 66, 95, 96, 66, 98, 
	97, 99, 66, 42, 42, 42, 42, 0, 
	84, 84, 42, 101, 42, 42, 100, 42, 
	101, 42, 42, 100, 102, 66, 42, 103, 
	104, 105, 42, 42, 42, 100, 42, 106, 
	42, 42, 42, 100, 42, 107, 42, 42, 
	42, 100, 42, 108, 42, 42, 42, 100, 
	42, 109, 42, 42, 42, 100, 42, 110, 
	42, 42, 42, 100, 42, 111, 42, 42, 
	42, 100, 42, 112, 42, 42, 42, 100, 
	42, 113, 42, 42, 42, 100, 42, 114, 
	42, 42, 42, 100, 42, 115, 42, 42, 
	42, 100, 42, 116, 42, 42, 42, 100, 
	42, 118, 119, 42, 42, 42, 117, 42, 
	120, 42, 42, 42, 100, 42, 121, 42, 
	42, 42, 100, 42, 122, 42, 42, 42, 
	100, 42, 123, 124, 125, 42, 42, 42, 
	100, 42, 126, 127, 42, 42, 42, 100, 
	42, 128, 42, 42, 42, 100, 42, 129, 
	42, 42, 42, 100, 42, 130, 42, 42, 
	42, 100, 42, 131, 42, 42, 42, 100, 
	42, 132, 42, 42, 42, 100, 42, 133, 
	42, 42, 42, 100, 42, 134, 42, 42, 
	42, 100, 42, 135, 42, 42, 42, 100, 
	42, 136, 42, 42, 42, 100, 42, 137, 
	42, 42, 42, 100, 42, 138, 42, 42, 
	42, 100, 42, 139, 42, 42, 42, 100, 
	42, 140, 42, 42, 42, 100, 42, 141, 
	42, 42, 42, 100, 42, 142, 42, 42, 
	42, 100, 42, 143, 42, 42, 42, 100, 
	42, 144, 145, 146, 147, 148, 42, 42, 
	42, 100, 42, 149, 42, 42, 42, 100, 
	42, 150, 42, 42, 42, 100, 42, 151, 
	42, 42, 42, 100, 42, 152, 42, 42, 
	42, 100, 42, 153, 42, 42, 42, 100, 
	42, 154, 42, 42, 42, 100, 42, 155, 
	42, 42, 42, 100, 42, 156, 42, 42, 
	42, 100, 42, 157, 42, 42, 42, 100, 
	42, 158, 42, 42, 42, 100, 42, 159, 
	42, 42, 42, 100, 42, 160, 161, 42, 
	42, 42, 100, 42, 162, 42, 42, 42, 
	100, 42, 164, 42, 42, 42, 163, 42, 
	165, 42, 42, 42, 100, 42, 166, 42, 
	42, 42, 100, 42, 167, 42, 42, 42, 
	100, 42, 168, 42, 42, 42, 100, 42, 
	169, 42, 42, 42, 100, 42, 170, 42, 
	42, 42, 100, 42, 171, 42, 42, 42, 
	100, 42, 172, 173, 42, 42, 42, 100, 
	42, 174, 175, 176, 42, 42, 42, 100, 
	42, 177, 42, 42, 42, 100, 42, 178, 
	42, 42, 42, 100, 42, 179, 42, 42, 
	42, 100, 42, 180, 42, 42, 42, 100, 
	42, 181, 42, 42, 42, 100, 42, 182, 
	42, 42, 42, 100, 42, 183, 42, 42, 
	42, 100, 42, 184, 42, 42, 42, 100, 
	42, 185, 42, 42, 42, 100, 42, 186, 
	42, 42, 42, 100, 42, 187, 42, 42, 
	42, 100, 42, 188, 42, 42, 42, 100, 
	42, 190, 42, 42, 42, 189, 42, 191, 
	42, 42, 42, 100, 42, 192, 42, 42, 
	42, 100, 42, 193, 42, 42, 42, 100, 
	84, 84, 42, 194, 195, 196, 197, 101, 
	42, 42, 100, 42, 198, 42, 42, 42, 
	100, 42, 199, 42, 42, 42, 100, 42, 
	200, 42, 42, 42, 100, 42, 201, 42, 
	42, 42, 100, 42, 203, 42, 42, 42, 
	202, 42, 204, 42, 42, 42, 100, 42, 
	205, 42, 42, 42, 100, 42, 206, 42, 
	42, 42, 100, 42, 207, 42, 42, 42, 
	100, 42, 208, 42, 42, 42, 100, 42, 
	209, 42, 42, 42, 100, 42, 210, 42, 
	42, 42, 100, 42, 211, 212, 213, 214, 
	215, 42, 42, 42, 100, 42, 216, 42, 
	42, 42, 100, 42, 217, 42, 42, 42, 
	100, 42, 218, 42, 42, 42, 100, 42, 
	219, 42, 42, 42, 100, 42, 220, 42, 
	42, 42, 100, 42, 221, 42, 42, 42, 
	100, 42, 222, 42, 42, 42, 100, 42, 
	223, 42, 42, 42, 100, 42, 224, 42, 
	42, 42, 100, 42, 225, 42, 42, 42, 
	100, 42, 226, 42, 42, 42, 100, 42, 
	227, 42, 42, 42, 100, 42, 228, 42, 
	42, 42, 100, 42, 229, 42, 42, 42, 
	100, 42, 230, 42, 42, 42, 100, 42, 
	231, 42, 42, 42, 100, 42, 232, 42, 
	42, 42, 100, 42, 233, 42, 42, 42, 
	100, 42, 234, 42, 42, 42, 100, 42, 
	235, 42, 42, 42, 100, 42, 236, 42, 
	42, 42, 100, 42, 237, 42, 42, 42, 
	100, 42, 238, 239, 42, 42, 42, 100, 
	42, 240, 241, 42, 42, 42, 100, 42, 
	242, 42, 42, 42, 100, 42, 243, 42, 
	42, 42, 100, 42, 244, 42, 42, 42, 
	100, 42, 245, 42, 42, 42, 100, 247, 
	248, 249, 250, 42, 251, 42, 42, 42, 
	246, 252, 42, 42, 42, 42, 100, 253, 
	42, 42, 42, 42, 100, 254, 42, 42, 
	42, 42, 100, 42, 255, 42, 42, 42, 
	100, 42, 256, 42, 42, 42, 100, 42, 
	257, 42, 42, 42, 100, 42, 258, 259, 
	42, 42, 42, 100, 42, 260, 42, 42, 
	42, 100, 42, 261, 42, 42, 42, 100, 
	42, 262, 42, 42, 42, 100, 42, 263, 
	42, 42, 42, 100, 42, 264, 42, 42, 
	42, 100, 42, 265, 42, 42, 42, 100, 
	42, 266, 42, 42, 42, 100, 42, 267, 
	42, 42, 42, 100, 42, 268, 42, 42, 
	42, 100, 42, 269, 42, 42, 42, 100, 
	42, 270, 271, 272, 42, 42, 42, 100, 
	42, 273, 42, 42, 42, 100, 42, 274, 
	42, 42, 42, 100, 42, 275, 42, 42, 
	42, 100, 42, 276, 42, 42, 42, 100, 
	42, 277, 42, 42, 42, 100, 42, 278, 
	42, 42, 42, 100, 42, 279, 42, 42, 
	42, 100, 42, 280, 42, 42, 42, 100, 
	42, 281, 42, 42, 42, 100, 42, 282, 
	42, 42, 42, 100, 42, 284, 42, 42, 
	42, 283, 42, 285, 42, 42, 42, 100, 
	42, 286, 42, 42, 42, 100, 42, 287, 
	42, 42, 42, 100, 42, 288, 289, 290, 
	291, 42, 42, 42, 100, 42, 292, 42, 
	42, 42, 100, 42, 293, 42, 42, 42, 
	100, 42, 294, 42, 42, 42, 100, 42, 
	295, 42, 42, 42, 100, 42, 296, 42, 
	42, 42, 100, 42, 297, 298, 42, 42, 
	42, 100, 42, 299, 42, 42, 42, 100, 
	42, 300, 42, 42, 42, 100, 42, 301, 
	42, 42, 42, 100, 42, 302, 42, 42, 
	42, 100, 42, 303, 42, 42, 42, 100, 
	42, 304, 42, 42, 42, 100, 42, 305, 
	42, 42, 42, 100, 42, 306, 42, 42, 
	42, 100, 42, 307, 42, 42, 42, 100, 
	42, 308, 42, 42, 42, 100, 42, 309, 
	42, 42, 42, 100, 42, 310, 42, 42, 
	42, 100, 42, 311, 42, 42, 42, 100, 
	42, 312, 42, 42, 42, 100, 42, 313, 
	42, 42, 42, 100, 42, 314, 42, 42, 
	42, 100, 42, 315, 316, 317, 318, 42, 
	42, 42, 100, 42, 319, 42, 42, 42, 
	100, 42, 320, 42, 42, 42, 100, 42, 
	321, 42, 42, 42, 100, 42, 322, 42, 
	42, 42, 100, 42, 323, 42, 42, 42, 
	100, 42, 324, 42, 42, 42, 100, 42, 
	325, 42, 42, 42, 100, 42, 326, 327, 
	42, 42, 42, 100, 42, 328, 42, 42, 
	42, 100, 42, 329, 42, 42, 42, 100, 
	42, 330, 42, 42, 42, 100, 42, 331, 
	42, 42, 42, 100, 42, 332, 42, 42, 
	42, 100, 42, 333, 42, 42, 42, 100, 
	42, 334, 42, 42, 42, 100, 42, 335, 
	42, 42, 42, 100, 42, 336, 42, 42, 
	42, 100, 42, 337, 338, 42, 42, 42, 
	100, 42, 339, 340, 42, 42, 42, 100, 
	42, 341, 42, 42, 42, 100, 42, 342, 
	42, 42, 42, 100, 42, 343, 42, 42, 
	42, 100, 42, 344, 42, 42, 42, 100, 
	42, 345, 42, 42, 42, 100, 42, 346, 
	42, 42, 42, 100, 42, 347, 42, 42, 
	42, 100, 42, 348, 42, 42, 42, 100, 
	42, 349, 42, 42, 42, 100, 42, 350, 
	42, 42, 42, 100, 42, 351, 42, 42, 
	42, 100, 42, 352, 42, 42, 42, 100, 
	42, 353, 42, 42, 42, 100, 42, 354, 
	42, 42, 42, 100, 42, 355, 42, 42, 
	42, 100, 42, 356, 42, 42, 42, 100, 
	42, 357, 42, 42, 42, 100, 42, 358, 
	359, 42, 42, 42, 100, 42, 360, 42, 
	42, 42, 100, 42, 361, 42, 42, 42, 
	100, 42, 362, 42, 42, 42, 100, 42, 
	363, 42, 42, 42, 100, 42, 364, 42, 
	42, 42, 100, 42, 365, 42, 42, 42, 
	100, 42, 366, 42, 42, 42, 100, 42, 
	367, 42, 42, 42, 100, 42, 368, 369, 
	370, 371, 42, 42, 42, 100, 42, 372, 
	42, 42, 42, 100, 42, 373, 374, 375, 
	42, 42, 42, 100, 42, 376, 42, 42, 
	42, 100, 42, 377, 42, 42, 42, 100, 
	42, 378, 42, 42, 42, 100, 42, 379, 
	42, 42, 42, 100, 42, 380, 42, 42, 
	42, 100, 42, 381, 42, 42, 42, 100, 
	42, 382, 42, 42, 42, 100, 42, 383, 
	42, 42, 42, 100, 42, 384, 42, 42, 
	42, 100, 42, 385, 386, 387, 42, 42, 
	42, 100, 42, 388, 389, 42, 42, 42, 
	100, 42, 390, 42, 42, 42, 100, 42, 
	391, 42, 42, 42, 100, 42, 392, 42, 
	42, 42, 100, 42, 393, 42, 42, 42, 
	100, 42, 394, 42, 42, 42, 100, 42, 
	395, 42, 42, 42, 100, 42, 396, 42, 
	42, 42, 100, 42, 397, 42, 42, 42, 
	100, 42, 398, 42, 42, 42, 100, 42, 
	399, 42, 42, 42, 100, 42, 400, 42, 
	42, 42, 100, 42, 401, 42, 42, 42, 
	100, 42, 402, 42, 42, 42, 100, 42, 
	403, 42, 42, 42, 100, 42, 404, 405, 
	406, 42, 42, 42, 100, 42, 407, 408, 
	42, 42, 42, 100, 42, 409, 410, 42, 
	42, 42, 100, 42, 411, 42, 42, 42, 
	100, 42, 412, 42, 42, 42, 100, 42, 
	413, 42, 42, 42, 100, 42, 414, 42, 
	42, 42, 100, 42, 415, 42, 42, 42, 
	100, 42, 416, 42, 42, 42, 100, 42, 
	417, 42, 42, 42, 100, 42, 418, 419, 
	42, 42, 42, 100, 42, 420, 42, 42, 
	42, 100, 42, 421, 42, 42, 42, 100, 
	42, 422, 42, 42, 42, 100, 42, 423, 
	424, 425, 42, 42, 42, 100, 42, 426, 
	42, 42, 42, 100, 42, 427, 42, 42, 
	42, 100, 42, 428, 42, 42, 42, 100, 
	42, 429, 430, 42, 42, 42, 100, 42, 
	431, 42, 42, 42, 100, 42, 432, 42, 
	42, 42, 100, 42, 433, 434, 42, 42, 
	42, 100, 42, 435, 42, 42, 42, 100, 
	42, 436, 42, 42, 42, 100, 42, 437, 
	42, 42, 42, 100, 42, 438, 42, 42, 
	42, 100, 42, 439, 42, 42, 42, 100, 
	42, 440, 42, 42, 42, 100, 42, 441, 
	42, 42, 42, 100, 42, 442, 42, 42, 
	42, 100, 42, 443, 42, 42, 42, 100, 
	42, 444, 445, 446, 42, 42, 42, 100, 
	42, 447, 42, 42, 42, 100, 42, 448, 
	42, 42, 42, 100, 42, 449, 42, 42, 
	42, 100, 42, 450, 42, 42, 42, 100, 
	42, 451, 42, 42, 42, 100, 42, 452, 
	42, 42, 42, 100, 42, 453, 42, 42, 
	42, 100, 42, 454, 42, 42, 42, 100, 
	42, 455, 42, 42, 42, 100, 42, 456, 
	42, 42, 42, 100, 42, 457, 458, 42, 
	42, 42, 100, 42, 459, 42, 42, 42, 
	100, 42, 460, 42, 42, 42, 100, 42, 
	461, 42, 42, 42, 100, 42, 462, 42, 
	42, 42, 100, 42, 463, 42, 42, 42, 
	100, 42, 464, 42, 42, 42, 100, 42, 
	465, 466, 42, 42, 42, 100, 42, 467, 
	42, 42, 42, 100, 42, 468, 42, 42, 
	42, 100, 42, 469, 42, 42, 42, 100, 
	42, 470, 42, 42, 42, 100, 42, 471, 
	42, 42, 42, 100, 472, 473, 66, 0
};

static const short _axl_jnc_trans_targs[] = {
	8, 0, 8, 8, 12, 1, 8, 8, 
	16, 8, 8, 3, 3, 4, 8, 24, 
	8, 7, 27, 8, 8, 26, 8, 9, 
	8, 10, 11, 13, 14, 15, 17, 18, 
	19, 20, 21, 23, 25, 28, 29, 31, 
	32, 34, 35, 36, 38, 39, 55, 73, 
	95, 113, 126, 144, 146, 149, 161, 173, 
	188, 211, 247, 257, 285, 299, 316, 334, 
	340, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 2, 
	22, 8, 8, 8, 5, 6, 8, 8, 
	8, 8, 30, 8, 8, 8, 8, 8, 
	33, 8, 8, 8, 8, 37, 8, 40, 
	46, 49, 41, 42, 43, 44, 45, 35, 
	47, 48, 35, 50, 51, 8, 52, 53, 
	35, 54, 35, 56, 68, 70, 57, 63, 
	58, 59, 60, 61, 62, 35, 64, 65, 
	66, 67, 35, 69, 35, 71, 72, 35, 
	74, 76, 79, 81, 84, 75, 35, 77, 
	78, 35, 80, 35, 82, 83, 35, 85, 
	86, 91, 87, 8, 88, 89, 90, 35, 
	92, 93, 94, 35, 96, 109, 97, 101, 
	104, 98, 99, 100, 35, 102, 103, 35, 
	105, 106, 107, 108, 35, 8, 110, 111, 
	112, 35, 114, 116, 119, 122, 115, 35, 
	117, 118, 8, 35, 120, 121, 35, 123, 
	124, 125, 35, 127, 130, 133, 134, 138, 
	128, 129, 35, 131, 132, 35, 35, 135, 
	136, 137, 35, 139, 140, 141, 142, 143, 
	35, 145, 35, 147, 148, 35, 35, 150, 
	151, 155, 152, 153, 154, 35, 8, 156, 
	157, 158, 35, 159, 35, 35, 35, 160, 
	35, 162, 163, 169, 164, 165, 166, 167, 
	168, 35, 170, 171, 172, 35, 174, 181, 
	182, 175, 176, 177, 178, 179, 180, 35, 
	35, 183, 184, 8, 185, 186, 187, 35, 
	189, 193, 199, 205, 190, 191, 192, 35, 
	194, 35, 195, 196, 197, 198, 35, 200, 
	201, 202, 203, 204, 35, 206, 207, 208, 
	209, 210, 35, 212, 214, 219, 243, 213, 
	35, 215, 216, 217, 218, 35, 220, 229, 
	221, 222, 223, 224, 225, 226, 227, 228, 
	35, 230, 238, 231, 234, 232, 233, 35, 
	235, 236, 237, 35, 239, 240, 241, 242, 
	35, 244, 245, 246, 35, 248, 249, 254, 
	250, 251, 252, 253, 35, 255, 256, 35, 
	258, 259, 269, 281, 35, 260, 263, 266, 
	261, 262, 35, 264, 265, 35, 267, 268, 
	35, 270, 274, 278, 271, 272, 35, 273, 
	35, 275, 276, 277, 35, 279, 280, 35, 
	282, 283, 284, 35, 286, 291, 293, 287, 
	288, 35, 35, 289, 290, 35, 292, 35, 
	294, 295, 296, 298, 297, 35, 35, 300, 
	303, 313, 301, 302, 35, 304, 306, 305, 
	35, 307, 309, 308, 35, 310, 311, 312, 
	35, 314, 315, 35, 317, 322, 327, 318, 
	319, 320, 321, 35, 323, 324, 325, 326, 
	35, 328, 329, 35, 330, 331, 332, 333, 
	35, 335, 337, 336, 35, 338, 339, 35, 
	8, 8
};

static const short _axl_jnc_trans_actions[] = {
	103, 0, 108, 55, 366, 0, 105, 53, 
	363, 101, 51, 0, 1, 0, 59, 0, 
	99, 0, 0, 111, 57, 372, 61, 0, 
	114, 0, 375, 0, 0, 375, 0, 0, 
	0, 7, 7, 369, 369, 0, 0, 0, 
	0, 0, 360, 360, 0, 0, 0, 0, 
	0, 360, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 95, 97, 21, 83, 37, 15, 43, 
	81, 33, 9, 29, 11, 31, 13, 0, 
	0, 35, 93, 85, 0, 0, 91, 89, 
	87, 27, 0, 23, 75, 39, 19, 25, 
	0, 77, 41, 49, 79, 0, 45, 0, 
	0, 0, 0, 0, 0, 0, 0, 150, 
	0, 0, 132, 0, 0, 65, 0, 0, 
	216, 0, 222, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 174, 0, 0, 
	0, 0, 219, 0, 237, 0, 0, 330, 
	0, 0, 0, 0, 0, 0, 342, 0, 
	0, 198, 0, 261, 0, 0, 273, 0, 
	0, 0, 0, 63, 0, 0, 0, 288, 
	0, 0, 0, 333, 0, 0, 0, 0, 
	0, 0, 0, 0, 345, 0, 0, 309, 
	0, 0, 0, 0, 291, 71, 0, 0, 
	0, 255, 0, 0, 0, 0, 0, 321, 
	0, 0, 69, 264, 0, 0, 213, 0, 
	0, 0, 123, 0, 0, 0, 0, 0, 
	0, 0, 357, 0, 0, 252, 324, 0, 
	0, 0, 165, 0, 0, 0, 0, 0, 
	204, 0, 276, 0, 0, 144, 318, 0, 
	0, 0, 0, 0, 0, 225, 67, 0, 
	0, 0, 240, 0, 243, 246, 249, 0, 
	258, 0, 0, 0, 0, 0, 0, 0, 
	0, 210, 0, 0, 0, 183, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 117, 
	306, 0, 0, 73, 0, 0, 0, 177, 
	0, 0, 0, 0, 0, 0, 0, 231, 
	0, 348, 0, 0, 0, 0, 303, 0, 
	0, 0, 0, 0, 294, 0, 0, 0, 
	0, 0, 156, 0, 0, 0, 0, 0, 
	126, 0, 0, 0, 0, 297, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	285, 0, 0, 0, 0, 0, 0, 207, 
	0, 0, 0, 300, 0, 0, 0, 0, 
	162, 0, 0, 0, 159, 0, 0, 0, 
	0, 0, 0, 0, 180, 0, 0, 336, 
	0, 0, 0, 0, 279, 0, 0, 0, 
	0, 0, 168, 0, 0, 351, 0, 0, 
	312, 0, 0, 0, 0, 0, 141, 0, 
	135, 0, 0, 0, 201, 0, 0, 267, 
	0, 0, 0, 339, 0, 0, 0, 0, 
	0, 192, 282, 0, 0, 138, 0, 354, 
	0, 0, 0, 0, 0, 129, 315, 0, 
	0, 0, 0, 0, 147, 0, 0, 0, 
	270, 0, 0, 0, 195, 0, 0, 0, 
	171, 0, 0, 120, 0, 0, 0, 0, 
	0, 0, 0, 234, 0, 0, 0, 0, 
	153, 0, 0, 228, 0, 0, 0, 0, 
	186, 0, 0, 0, 189, 0, 0, 327, 
	47, 17
};

static const short _axl_jnc_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const short _axl_jnc_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	5, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const short _axl_jnc_eof_trans[] = {
	1, 1, 10, 10, 10, 1, 17, 1, 
	0, 66, 67, 67, 69, 67, 67, 67, 
	73, 67, 67, 67, 67, 67, 83, 84, 
	87, 84, 88, 89, 67, 67, 93, 67, 
	67, 98, 67, 1, 101, 101, 67, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 118, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 164, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 190, 101, 101, 
	101, 101, 101, 101, 101, 101, 203, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 247, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	284, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 101, 101, 101, 101, 
	101, 101, 101, 101, 67
};

static const int axl_jnc_start = 8;
static const int axl_jnc_first_final = 8;
static const int axl_jnc_error = -1;

static const int axl_jnc_en_main = 8;


/* #line 243 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */


//.............................................................................

void 
CLexer::Init ()
{
	
/* #line 1096 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
	{
	cs = axl_jnc_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 251 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
}

bool
CLexer::Exec ()
{
	
/* #line 1102 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const unsigned char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _axl_jnc_actions + _axl_jnc_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 1119 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

	_keys = _axl_jnc_trans_keys + _axl_jnc_key_offsets[cs];
	_trans = _axl_jnc_index_offsets[cs];

	_klen = _axl_jnc_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _axl_jnc_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _axl_jnc_indicies[_trans];
_eof_trans:
	cs = _axl_jnc_trans_targs[_trans];

	if ( _axl_jnc_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _axl_jnc_actions + _axl_jnc_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
/* #line 44 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{ NewLine (p + 1); }
	break;
	case 3:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 4:
/* #line 60 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 1;}
	break;
	case 5:
/* #line 61 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 2;}
	break;
	case 6:
/* #line 62 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 3;}
	break;
	case 7:
/* #line 63 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 4;}
	break;
	case 8:
/* #line 69 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 5;}
	break;
	case 9:
/* #line 70 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 6;}
	break;
	case 10:
/* #line 71 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 7;}
	break;
	case 11:
/* #line 72 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 8;}
	break;
	case 12:
/* #line 73 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 9;}
	break;
	case 13:
/* #line 74 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 10;}
	break;
	case 14:
/* #line 75 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 11;}
	break;
	case 15:
/* #line 76 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 12;}
	break;
	case 16:
/* #line 77 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 13;}
	break;
	case 17:
/* #line 78 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 14;}
	break;
	case 18:
/* #line 84 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 15;}
	break;
	case 19:
/* #line 85 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 16;}
	break;
	case 20:
/* #line 86 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 17;}
	break;
	case 21:
/* #line 92 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 18;}
	break;
	case 22:
/* #line 93 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 19;}
	break;
	case 23:
/* #line 94 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 20;}
	break;
	case 24:
/* #line 95 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 21;}
	break;
	case 25:
/* #line 97 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 23;}
	break;
	case 26:
/* #line 98 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 24;}
	break;
	case 27:
/* #line 99 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 25;}
	break;
	case 28:
/* #line 100 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 26;}
	break;
	case 29:
/* #line 101 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 27;}
	break;
	case 30:
/* #line 102 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 28;}
	break;
	case 31:
/* #line 103 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 29;}
	break;
	case 32:
/* #line 104 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 30;}
	break;
	case 33:
/* #line 105 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 31;}
	break;
	case 34:
/* #line 106 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 32;}
	break;
	case 35:
/* #line 107 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 33;}
	break;
	case 36:
/* #line 108 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 34;}
	break;
	case 37:
/* #line 109 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 35;}
	break;
	case 38:
/* #line 110 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 36;}
	break;
	case 39:
/* #line 111 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 37;}
	break;
	case 40:
/* #line 112 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 38;}
	break;
	case 41:
/* #line 119 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 40;}
	break;
	case 42:
/* #line 120 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 41;}
	break;
	case 43:
/* #line 121 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 42;}
	break;
	case 44:
/* #line 122 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 43;}
	break;
	case 45:
/* #line 123 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 44;}
	break;
	case 46:
/* #line 124 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 45;}
	break;
	case 47:
/* #line 125 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 46;}
	break;
	case 48:
/* #line 126 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 47;}
	break;
	case 49:
/* #line 127 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 48;}
	break;
	case 50:
/* #line 128 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 49;}
	break;
	case 51:
/* #line 130 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 51;}
	break;
	case 52:
/* #line 131 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 52;}
	break;
	case 53:
/* #line 138 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 54;}
	break;
	case 54:
/* #line 139 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 55;}
	break;
	case 55:
/* #line 140 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 56;}
	break;
	case 56:
/* #line 141 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 57;}
	break;
	case 57:
/* #line 147 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 58;}
	break;
	case 58:
/* #line 148 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 59;}
	break;
	case 59:
/* #line 149 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 60;}
	break;
	case 60:
/* #line 150 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 61;}
	break;
	case 61:
/* #line 151 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 62;}
	break;
	case 62:
/* #line 152 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 63;}
	break;
	case 63:
/* #line 153 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 64;}
	break;
	case 64:
/* #line 154 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 65;}
	break;
	case 65:
/* #line 155 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 66;}
	break;
	case 66:
/* #line 156 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 67;}
	break;
	case 67:
/* #line 162 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 68;}
	break;
	case 68:
/* #line 163 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 69;}
	break;
	case 69:
/* #line 164 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 70;}
	break;
	case 70:
/* #line 165 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 71;}
	break;
	case 71:
/* #line 171 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 72;}
	break;
	case 72:
/* #line 172 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 73;}
	break;
	case 73:
/* #line 173 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 74;}
	break;
	case 74:
/* #line 174 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 75;}
	break;
	case 75:
/* #line 176 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 77;}
	break;
	case 76:
/* #line 177 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 78;}
	break;
	case 77:
/* #line 178 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 79;}
	break;
	case 78:
/* #line 179 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 80;}
	break;
	case 79:
/* #line 180 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 81;}
	break;
	case 80:
/* #line 181 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 82;}
	break;
	case 81:
/* #line 182 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 83;}
	break;
	case 82:
/* #line 183 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 84;}
	break;
	case 83:
/* #line 189 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 85;}
	break;
	case 84:
/* #line 190 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 86;}
	break;
	case 85:
/* #line 226 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 112;}
	break;
	case 86:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 113;}
	break;
	case 87:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 114;}
	break;
	case 88:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 115;}
	break;
	case 89:
/* #line 231 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 117;}
	break;
	case 90:
/* #line 239 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 122;}
	break;
	case 91:
/* #line 197 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Inc); }}
	break;
	case 92:
/* #line 198 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Dec); }}
	break;
	case 93:
/* #line 199 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ptr); }}
	break;
	case 94:
/* #line 202 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogAnd); }}
	break;
	case 95:
/* #line 203 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogOr); }}
	break;
	case 96:
/* #line 204 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Eq); }}
	break;
	case 97:
/* #line 205 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ne); }}
	break;
	case 98:
/* #line 206 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Le); }}
	break;
	case 99:
/* #line 207 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ge); }}
	break;
	case 100:
/* #line 208 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_RefAssign); }}
	break;
	case 101:
/* #line 209 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AddAssign); }}
	break;
	case 102:
/* #line 210 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_SubAssign); }}
	break;
	case 103:
/* #line 211 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_MulAssign); }}
	break;
	case 104:
/* #line 212 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_DivAssign); }}
	break;
	case 105:
/* #line 213 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ModAssign); }}
	break;
	case 106:
/* #line 214 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShlAssign); }}
	break;
	case 107:
/* #line 215 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShrAssign); }}
	break;
	case 108:
/* #line 216 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AndAssign); }}
	break;
	case 109:
/* #line 217 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_XorAssign); }}
	break;
	case 110:
/* #line 218 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_OrAssign); }}
	break;
	case 111:
/* #line 219 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AtAssign); }}
	break;
	case 112:
/* #line 220 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ellipsis); }}
	break;
	case 113:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateCharToken (EToken_Integer); }}
	break;
	case 114:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 115:
/* #line 231 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateHexLiteralToken (); }}
	break;
	case 116:
/* #line 236 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 117:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 118:
/* #line 239 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (ts [0]); }}
	break;
	case 119:
/* #line 96 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Const); }}
	break;
	case 120:
/* #line 118 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Auto); }}
	break;
	case 121:
/* #line 129 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Int); }}
	break;
	case 122:
/* #line 137 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Enum); }}
	break;
	case 123:
/* #line 175 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Do); }}
	break;
	case 124:
/* #line 191 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Null); }}
	break;
	case 125:
/* #line 200 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shl); }}
	break;
	case 126:
/* #line 201 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shr); }}
	break;
	case 127:
/* #line 226 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Identifier); }}
	break;
	case 128:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateCharToken (EToken_Integer); }}
	break;
	case 129:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 130:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (10); }}
	break;
	case 131:
/* #line 230 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (16, 2); }}
	break;
	case 132:
/* #line 231 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateHexLiteralToken (); }}
	break;
	case 133:
/* #line 233 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateFpToken (); }}
	break;
	case 134:
/* #line 235 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 135:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 136:
/* #line 239 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (ts [0]); }}
	break;
	case 137:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateIntegerToken (10); }}
	break;
	case 138:
/* #line 239 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateToken (ts [0]); }}
	break;
	case 139:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} CreateToken (EToken_Namespace); }
	break;
	case 2:
	{{p = ((te))-1;} CreateToken (EToken_Using); }
	break;
	case 3:
	{{p = ((te))-1;} CreateToken (EToken_Extend); }
	break;
	case 4:
	{{p = ((te))-1;} CreateToken (EToken_Pack); }
	break;
	case 5:
	{{p = ((te))-1;} CreateToken (EToken_Typedef); }
	break;
	case 6:
	{{p = ((te))-1;} CreateToken (EToken_Alias); }
	break;
	case 7:
	{{p = ((te))-1;} CreateToken (EToken_Static); }
	break;
	case 8:
	{{p = ((te))-1;} CreateToken (EToken_Thread); }
	break;
	case 9:
	{{p = ((te))-1;} CreateToken (EToken_Stack); }
	break;
	case 10:
	{{p = ((te))-1;} CreateToken (EToken_Heap); }
	break;
	case 11:
	{{p = ((te))-1;} CreateToken (EToken_UHeap); }
	break;
	case 12:
	{{p = ((te))-1;} CreateToken (EToken_Abstract); }
	break;
	case 13:
	{{p = ((te))-1;} CreateToken (EToken_Virtual); }
	break;
	case 14:
	{{p = ((te))-1;} CreateToken (EToken_Override); }
	break;
	case 15:
	{{p = ((te))-1;} CreateToken (EToken_Public); }
	break;
	case 16:
	{{p = ((te))-1;} CreateToken (EToken_Protected); }
	break;
	case 17:
	{{p = ((te))-1;} CreateToken (EToken_Friend); }
	break;
	case 18:
	{{p = ((te))-1;} CreateToken (EToken_Signed); }
	break;
	case 19:
	{{p = ((te))-1;} CreateToken (EToken_Unsigned); }
	break;
	case 20:
	{{p = ((te))-1;} CreateToken (EToken_BigEndian); }
	break;
	case 21:
	{{p = ((te))-1;} CreateToken (EToken_Nullable); }
	break;
	case 23:
	{{p = ((te))-1;} CreateToken (EToken_ReadOnly); }
	break;
	case 24:
	{{p = ((te))-1;} CreateToken (EToken_Mutable); }
	break;
	case 25:
	{{p = ((te))-1;} CreateToken (EToken_Volatile); }
	break;
	case 26:
	{{p = ((te))-1;} CreateToken (EToken_Weak); }
	break;
	case 27:
	{{p = ((te))-1;} CreateToken (EToken_Thin); }
	break;
	case 28:
	{{p = ((te))-1;} CreateToken (EToken_Unsafe); }
	break;
	case 29:
	{{p = ((te))-1;} CreateToken (EToken_Cdecl); }
	break;
	case 30:
	{{p = ((te))-1;} CreateToken (EToken_Stdcall); }
	break;
	case 31:
	{{p = ((te))-1;} CreateToken (EToken_Function); }
	break;
	case 32:
	{{p = ((te))-1;} CreateToken (EToken_Property); }
	break;
	case 33:
	{{p = ((te))-1;} CreateToken (EToken_Multicast); }
	break;
	case 34:
	{{p = ((te))-1;} CreateToken (EToken_Event); }
	break;
	case 35:
	{{p = ((te))-1;} CreateToken (EToken_AutoEv); }
	break;
	case 36:
	{{p = ((te))-1;} CreateToken (EToken_Bindable); }
	break;
	case 37:
	{{p = ((te))-1;} CreateToken (EToken_AutoGet); }
	break;
	case 38:
	{{p = ((te))-1;} CreateToken (EToken_Indexed); }
	break;
	case 40:
	{{p = ((te))-1;} CreateToken (EToken_Void); }
	break;
	case 41:
	{{p = ((te))-1;} CreateToken (EToken_Object); }
	break;
	case 42:
	{{p = ((te))-1;} CreateToken (EToken_Variant); }
	break;
	case 43:
	{{p = ((te))-1;} CreateToken (EToken_Bool); }
	break;
	case 44:
	{{p = ((te))-1;} CreateToken (EToken_Int8); }
	break;
	case 45:
	{{p = ((te))-1;} CreateToken (EToken_Int16); }
	break;
	case 46:
	{{p = ((te))-1;} CreateToken (EToken_Int32); }
	break;
	case 47:
	{{p = ((te))-1;} CreateToken (EToken_Int64); }
	break;
	case 48:
	{{p = ((te))-1;} CreateToken (EToken_Float); }
	break;
	case 49:
	{{p = ((te))-1;} CreateToken (EToken_Double); }
	break;
	case 51:
	{{p = ((te))-1;} CreateToken (EToken_IntPtr); }
	break;
	case 52:
	{{p = ((te))-1;} CreateToken (EToken_Char); }
	break;
	case 54:
	{{p = ((te))-1;} CreateToken (EToken_EnumC); }
	break;
	case 55:
	{{p = ((te))-1;} CreateToken (EToken_Struct); }
	break;
	case 56:
	{{p = ((te))-1;} CreateToken (EToken_Union); }
	break;
	case 57:
	{{p = ((te))-1;} CreateToken (EToken_Class); }
	break;
	case 58:
	{{p = ((te))-1;} CreateToken (EToken_Get); }
	break;
	case 59:
	{{p = ((te))-1;} CreateToken (EToken_Set); }
	break;
	case 60:
	{{p = ((te))-1;} CreateToken (EToken_This); }
	break;
	case 61:
	{{p = ((te))-1;} CreateToken (EToken_PreConstruct); }
	break;
	case 62:
	{{p = ((te))-1;} CreateToken (EToken_Construct); }
	break;
	case 63:
	{{p = ((te))-1;} CreateToken (EToken_Destruct); }
	break;
	case 64:
	{{p = ((te))-1;} CreateToken (EToken_Operator); }
	break;
	case 65:
	{{p = ((te))-1;} CreateToken (EToken_Postfix); }
	break;
	case 66:
	{{p = ((te))-1;} CreateToken (EToken_PropValue); }
	break;
	case 67:
	{{p = ((te))-1;} CreateToken (EToken_OnChange); }
	break;
	case 68:
	{{p = ((te))-1;} CreateToken (EToken_New); }
	break;
	case 69:
	{{p = ((te))-1;} CreateToken (EToken_Delete); }
	break;
	case 70:
	{{p = ((te))-1;} CreateToken (EToken_SizeOf); }
	break;
	case 71:
	{{p = ((te))-1;} CreateToken (EToken_TypeOf); }
	break;
	case 72:
	{{p = ((te))-1;} CreateToken (EToken_If); }
	break;
	case 73:
	{{p = ((te))-1;} CreateToken (EToken_Else); }
	break;
	case 74:
	{{p = ((te))-1;} CreateToken (EToken_For); }
	break;
	case 75:
	{{p = ((te))-1;} CreateToken (EToken_While); }
	break;
	case 77:
	{{p = ((te))-1;} CreateToken (EToken_Break); }
	break;
	case 78:
	{{p = ((te))-1;} CreateToken (EToken_Continue); }
	break;
	case 79:
	{{p = ((te))-1;} CreateToken (EToken_Return); }
	break;
	case 80:
	{{p = ((te))-1;} CreateToken (EToken_Switch); }
	break;
	case 81:
	{{p = ((te))-1;} CreateToken (EToken_Case); }
	break;
	case 82:
	{{p = ((te))-1;} CreateToken (EToken_Default); }
	break;
	case 83:
	{{p = ((te))-1;} CreateToken (EToken_Once); }
	break;
	case 84:
	{{p = ((te))-1;} CreateToken (EToken_Silent); }
	break;
	case 85:
	{{p = ((te))-1;} CreateToken (EToken_True); }
	break;
	case 86:
	{{p = ((te))-1;} CreateToken (EToken_False); }
	break;
	case 112:
	{{p = ((te))-1;} CreateStringToken (EToken_Identifier); }
	break;
	case 113:
	{{p = ((te))-1;} CreateCharToken (EToken_Integer); }
	break;
	case 114:
	{{p = ((te))-1;} CreateStringToken (EToken_Literal, 1, 1); }
	break;
	case 115:
	{{p = ((te))-1;} CreateIntegerToken (10); }
	break;
	case 117:
	{{p = ((te))-1;} CreateHexLiteralToken (); }
	break;
	case 122:
	{{p = ((te))-1;} CreateToken (ts [0]); }
	break;
	}
	}
	break;
/* #line 1861 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

_again:
	_acts = _axl_jnc_actions + _axl_jnc_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 1872 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _axl_jnc_eof_trans[cs] > 0 ) {
		_trans = _axl_jnc_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 257 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */

	bool Result = cs != axl_jnc_error;
	if (!Result)
	{
		CToken* pToken = CreateToken (EToken_Error);
		pToken->m_Data.m_Error.CreateStringError ("lexer error");
	}

	return Result;
}

//.............................................................................

} // namespace jnc {
} // namespace axl {
