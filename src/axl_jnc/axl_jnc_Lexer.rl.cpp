
/* #line 1 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
#include "pch.h"
#include "axl_jnc_Lexer.h"

// warning C4065: switch statement contains 'default' but no 'case' labels

#pragma warning (disable: 4065)

namespace axl {
namespace jnc {

//.............................................................................


/* #line 2 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
static const unsigned char _axl_jnc_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 90, 1, 91, 1, 92, 1, 
	93, 1, 94, 1, 95, 1, 96, 1, 
	97, 1, 98, 1, 99, 1, 100, 1, 
	101, 1, 102, 1, 103, 1, 104, 1, 
	105, 1, 106, 1, 107, 1, 108, 1, 
	109, 1, 110, 1, 111, 1, 112, 1, 
	113, 1, 114, 1, 116, 1, 117, 1, 
	118, 1, 119, 1, 120, 1, 121, 1, 
	122, 1, 123, 1, 124, 1, 125, 1, 
	126, 1, 127, 1, 128, 1, 129, 1, 
	130, 1, 131, 1, 132, 1, 133, 1, 
	134, 1, 135, 1, 136, 2, 0, 112, 
	2, 0, 113, 2, 0, 115, 2, 3, 
	4, 2, 3, 5, 2, 3, 6, 2, 
	3, 7, 2, 3, 8, 2, 3, 9, 
	2, 3, 10, 2, 3, 11, 2, 3, 
	12, 2, 3, 13, 2, 3, 14, 2, 
	3, 15, 2, 3, 16, 2, 3, 17, 
	2, 3, 18, 2, 3, 19, 2, 3, 
	20, 2, 3, 21, 2, 3, 22, 2, 
	3, 23, 2, 3, 24, 2, 3, 25, 
	2, 3, 26, 2, 3, 27, 2, 3, 
	28, 2, 3, 29, 2, 3, 30, 2, 
	3, 31, 2, 3, 32, 2, 3, 33, 
	2, 3, 34, 2, 3, 35, 2, 3, 
	36, 2, 3, 37, 2, 3, 38, 2, 
	3, 39, 2, 3, 40, 2, 3, 41, 
	2, 3, 42, 2, 3, 43, 2, 3, 
	44, 2, 3, 45, 2, 3, 46, 2, 
	3, 47, 2, 3, 48, 2, 3, 49, 
	2, 3, 50, 2, 3, 51, 2, 3, 
	52, 2, 3, 53, 2, 3, 54, 2, 
	3, 55, 2, 3, 56, 2, 3, 57, 
	2, 3, 58, 2, 3, 59, 2, 3, 
	60, 2, 3, 61, 2, 3, 62, 2, 
	3, 63, 2, 3, 64, 2, 3, 65, 
	2, 3, 66, 2, 3, 67, 2, 3, 
	68, 2, 3, 69, 2, 3, 70, 2, 
	3, 71, 2, 3, 72, 2, 3, 73, 
	2, 3, 74, 2, 3, 75, 2, 3, 
	76, 2, 3, 77, 2, 3, 78, 2, 
	3, 79, 2, 3, 80, 2, 3, 81, 
	2, 3, 82, 2, 3, 83, 2, 3, 
	84, 2, 3, 85, 2, 3, 86, 2, 
	3, 87, 2, 3, 88, 2, 3, 89
	
};

static const short _axl_jnc_key_offsets[] = {
	0, 3, 6, 7, 9, 12, 14, 20, 
	69, 72, 73, 76, 77, 78, 80, 83, 
	84, 85, 87, 90, 91, 94, 95, 100, 
	102, 105, 111, 112, 114, 115, 116, 118, 
	119, 120, 127, 136, 143, 144, 154, 162, 
	170, 178, 186, 194, 202, 210, 218, 226, 
	234, 242, 251, 259, 267, 275, 285, 294, 
	302, 310, 318, 326, 334, 342, 350, 358, 
	366, 374, 382, 390, 398, 406, 414, 422, 
	434, 442, 450, 458, 466, 474, 482, 490, 
	498, 506, 514, 522, 531, 539, 547, 555, 
	563, 571, 579, 587, 595, 603, 612, 622, 
	630, 638, 646, 654, 662, 670, 678, 686, 
	694, 702, 710, 718, 726, 734, 742, 750, 
	763, 771, 779, 787, 795, 803, 811, 819, 
	827, 835, 843, 851, 859, 871, 879, 887, 
	895, 903, 911, 919, 927, 935, 943, 951, 
	959, 967, 975, 983, 991, 999, 1007, 1015, 
	1023, 1031, 1039, 1047, 1056, 1065, 1073, 1081, 
	1089, 1097, 1109, 1117, 1125, 1133, 1141, 1149, 
	1157, 1166, 1174, 1182, 1190, 1198, 1206, 1214, 
	1222, 1230, 1238, 1246, 1256, 1264, 1272, 1280, 
	1288, 1296, 1304, 1312, 1320, 1328, 1336, 1344, 
	1352, 1360, 1368, 1379, 1387, 1395, 1403, 1411, 
	1419, 1428, 1436, 1444, 1452, 1460, 1468, 1476, 
	1484, 1492, 1500, 1508, 1516, 1524, 1532, 1540, 
	1548, 1556, 1567, 1575, 1583, 1591, 1599, 1607, 
	1615, 1623, 1632, 1640, 1648, 1656, 1664, 1672, 
	1680, 1688, 1696, 1704, 1713, 1722, 1730, 1738, 
	1746, 1754, 1762, 1770, 1778, 1786, 1794, 1802, 
	1810, 1818, 1826, 1834, 1842, 1850, 1858, 1867, 
	1875, 1883, 1891, 1899, 1907, 1915, 1923, 1931, 
	1942, 1950, 1960, 1968, 1976, 1984, 1992, 2000, 
	2008, 2016, 2024, 2032, 2042, 2051, 2059, 2067, 
	2075, 2083, 2091, 2099, 2107, 2115, 2123, 2131, 
	2139, 2147, 2155, 2163, 2173, 2182, 2191, 2199, 
	2207, 2215, 2223, 2231, 2239, 2247, 2256, 2264, 
	2272, 2280, 2290, 2298, 2306, 2314, 2323, 2331, 
	2339, 2348, 2356, 2364, 2372, 2380, 2388, 2396, 
	2404, 2412, 2420, 2430, 2438, 2446, 2454, 2462, 
	2470, 2478, 2486, 2494, 2502, 2510, 2519, 2527, 
	2535, 2543, 2551, 2559, 2567, 2576, 2584, 2592, 
	2600, 2608, 2616
};

static const char _axl_jnc_trans_keys[] = {
	10, 34, 92, 10, 39, 92, 46, 10, 
	42, 10, 42, 47, 48, 57, 48, 57, 
	65, 70, 97, 102, 9, 10, 13, 32, 
	33, 34, 37, 38, 39, 42, 43, 45, 
	46, 47, 48, 58, 60, 61, 62, 64, 
	69, 94, 95, 97, 98, 99, 100, 101, 
	102, 103, 104, 105, 109, 110, 111, 112, 
	114, 115, 116, 117, 118, 119, 124, 49, 
	57, 65, 90, 106, 122, 9, 13, 32, 
	61, 10, 34, 92, 10, 61, 38, 61, 
	10, 39, 92, 10, 61, 43, 61, 45, 
	61, 62, 46, 42, 47, 61, 10, 46, 
	88, 120, 48, 57, 48, 57, 46, 48, 
	57, 48, 57, 65, 70, 97, 102, 61, 
	60, 61, 61, 61, 61, 62, 61, 61, 
	95, 48, 57, 65, 90, 97, 122, 43, 
	45, 95, 48, 57, 65, 90, 97, 122, 
	95, 48, 57, 65, 90, 97, 122, 61, 
	95, 98, 108, 117, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 111, 48, 57, 65, 90, 
	97, 122, 95, 101, 103, 48, 57, 65, 
	90, 97, 122, 95, 118, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 111, 114, 48, 
	57, 65, 90, 97, 122, 95, 103, 110, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 110, 
	48, 57, 65, 90, 97, 122, 95, 100, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 110, 
	48, 57, 65, 90, 97, 122, 95, 100, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 98, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 107, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	100, 104, 108, 111, 48, 57, 65, 90, 
	98, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 110, 48, 57, 65, 90, 
	97, 122, 95, 115, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 101, 111, 48, 57, 
	65, 90, 97, 122, 95, 102, 108, 115, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 98, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 43, 45, 
	95, 108, 110, 118, 120, 48, 57, 65, 
	90, 97, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 97, 108, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	102, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 120, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 49, 51, 54, 56, 95, 112, 48, 
	57, 65, 90, 97, 122, 54, 95, 48, 
	57, 65, 90, 97, 122, 50, 95, 48, 
	57, 65, 90, 97, 122, 52, 95, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 108, 116, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 115, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 98, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	101, 117, 48, 57, 65, 90, 98, 122, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 119, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 98, 110, 112, 118, 48, 57, 65, 
	90, 97, 122, 95, 106, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 104, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 103, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 97, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	107, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	102, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	120, 48, 57, 65, 90, 97, 122, 95, 
	101, 111, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 112, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 118, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 121, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 117, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 100, 48, 57, 65, 90, 
	97, 122, 95, 98, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 97, 116, 48, 57, 65, 
	90, 98, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 121, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 101, 105, 116, 119, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 103, 
	108, 122, 48, 57, 65, 90, 97, 121, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	95, 97, 100, 114, 48, 57, 65, 90, 
	98, 122, 95, 99, 116, 48, 57, 65, 
	90, 97, 122, 95, 107, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 104, 48, 57, 65, 
	90, 97, 122, 95, 104, 114, 121, 48, 
	57, 65, 90, 97, 122, 95, 105, 114, 
	48, 57, 65, 90, 97, 122, 95, 110, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	117, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	100, 111, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	95, 104, 110, 115, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 112, 48, 57, 65, 90, 
	97, 122, 95, 105, 115, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 97, 105, 48, 57, 
	65, 90, 98, 122, 95, 102, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 103, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 103, 48, 57, 
	65, 90, 97, 122, 95, 97, 105, 111, 
	48, 57, 65, 90, 98, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 110, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	101, 104, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	61, 124, 0
};

static const char _axl_jnc_single_lengths[] = {
	3, 3, 1, 2, 3, 0, 0, 43, 
	3, 1, 3, 1, 1, 2, 3, 1, 
	1, 2, 3, 1, 3, 1, 3, 0, 
	1, 0, 1, 2, 1, 1, 2, 1, 
	1, 1, 3, 1, 1, 4, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 4, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 6, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 7, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 6, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 3, 2, 2, 2, 
	2, 6, 2, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 5, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 5, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 3, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 5, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 3, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 3, 3, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 4, 2, 2, 2, 3, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 3, 2, 2, 2, 
	2, 2, 2
};

static const char _axl_jnc_range_lengths[] = {
	0, 0, 0, 0, 0, 1, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 3, 0, 0, 0, 0, 0, 0, 
	0, 3, 3, 3, 0, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 0
};

static const short _axl_jnc_index_offsets[] = {
	0, 4, 8, 10, 13, 17, 19, 23, 
	70, 74, 76, 80, 82, 84, 87, 91, 
	93, 95, 98, 102, 104, 108, 110, 115, 
	117, 120, 124, 126, 129, 131, 133, 136, 
	138, 140, 145, 152, 157, 159, 167, 173, 
	179, 185, 191, 197, 203, 209, 215, 221, 
	227, 233, 240, 246, 252, 258, 266, 273, 
	279, 285, 291, 297, 303, 309, 315, 321, 
	327, 333, 339, 345, 351, 357, 363, 369, 
	379, 385, 391, 397, 403, 409, 415, 421, 
	427, 433, 439, 445, 452, 458, 464, 470, 
	476, 482, 488, 494, 500, 506, 513, 521, 
	527, 533, 539, 545, 551, 557, 563, 569, 
	575, 581, 587, 593, 599, 605, 611, 617, 
	628, 634, 640, 646, 652, 658, 664, 670, 
	676, 682, 688, 694, 700, 710, 716, 722, 
	728, 734, 740, 746, 752, 758, 764, 770, 
	776, 782, 788, 794, 800, 806, 812, 818, 
	824, 830, 836, 842, 849, 856, 862, 868, 
	874, 880, 890, 896, 902, 908, 914, 920, 
	926, 933, 939, 945, 951, 957, 963, 969, 
	975, 981, 987, 993, 1001, 1007, 1013, 1019, 
	1025, 1031, 1037, 1043, 1049, 1055, 1061, 1067, 
	1073, 1079, 1085, 1094, 1100, 1106, 1112, 1118, 
	1124, 1131, 1137, 1143, 1149, 1155, 1161, 1167, 
	1173, 1179, 1185, 1191, 1197, 1203, 1209, 1215, 
	1221, 1227, 1236, 1242, 1248, 1254, 1260, 1266, 
	1272, 1278, 1285, 1291, 1297, 1303, 1309, 1315, 
	1321, 1327, 1333, 1339, 1346, 1353, 1359, 1365, 
	1371, 1377, 1383, 1389, 1395, 1401, 1407, 1413, 
	1419, 1425, 1431, 1437, 1443, 1449, 1455, 1462, 
	1468, 1474, 1480, 1486, 1492, 1498, 1504, 1510, 
	1519, 1525, 1533, 1539, 1545, 1551, 1557, 1563, 
	1569, 1575, 1581, 1587, 1595, 1602, 1608, 1614, 
	1620, 1626, 1632, 1638, 1644, 1650, 1656, 1662, 
	1668, 1674, 1680, 1686, 1694, 1701, 1708, 1714, 
	1720, 1726, 1732, 1738, 1744, 1750, 1757, 1763, 
	1769, 1775, 1783, 1789, 1795, 1801, 1808, 1814, 
	1820, 1827, 1833, 1839, 1845, 1851, 1857, 1863, 
	1869, 1875, 1881, 1889, 1895, 1901, 1907, 1913, 
	1919, 1925, 1931, 1937, 1943, 1949, 1956, 1962, 
	1968, 1974, 1980, 1986, 1992, 1999, 2005, 2011, 
	2017, 2023, 2029
};

static const short _axl_jnc_indicies[] = {
	2, 3, 4, 1, 6, 7, 8, 5, 
	10, 9, 12, 13, 11, 12, 13, 14, 
	11, 15, 0, 17, 17, 17, 16, 19, 
	20, 19, 19, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 30, 31, 33, 34, 
	35, 36, 37, 39, 40, 38, 41, 42, 
	43, 44, 45, 46, 47, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 58, 
	59, 60, 32, 38, 38, 18, 19, 19, 
	19, 61, 63, 62, 2, 3, 4, 1, 
	64, 1, 65, 62, 66, 67, 62, 6, 
	7, 8, 5, 68, 5, 69, 62, 70, 
	71, 62, 72, 73, 74, 62, 75, 62, 
	11, 76, 77, 62, 78, 76, 80, 81, 
	81, 32, 79, 15, 82, 80, 32, 79, 
	17, 17, 17, 83, 84, 62, 85, 86, 
	62, 88, 87, 89, 62, 90, 91, 62, 
	93, 92, 94, 62, 38, 38, 38, 38, 
	0, 80, 80, 38, 96, 38, 38, 95, 
	38, 96, 38, 38, 95, 97, 62, 38, 
	98, 99, 100, 38, 38, 38, 95, 38, 
	101, 38, 38, 38, 95, 38, 102, 38, 
	38, 38, 95, 38, 103, 38, 38, 38, 
	95, 38, 104, 38, 38, 38, 95, 38, 
	105, 38, 38, 38, 95, 38, 106, 38, 
	38, 38, 95, 38, 107, 38, 38, 38, 
	95, 38, 108, 38, 38, 38, 95, 38, 
	109, 38, 38, 38, 95, 38, 110, 38, 
	38, 38, 95, 38, 111, 38, 38, 38, 
	95, 38, 113, 114, 38, 38, 38, 112, 
	38, 115, 38, 38, 38, 95, 38, 116, 
	38, 38, 38, 95, 38, 117, 38, 38, 
	38, 95, 38, 118, 119, 120, 38, 38, 
	38, 95, 38, 121, 122, 38, 38, 38, 
	95, 38, 123, 38, 38, 38, 95, 38, 
	124, 38, 38, 38, 95, 38, 125, 38, 
	38, 38, 95, 38, 126, 38, 38, 38, 
	95, 38, 127, 38, 38, 38, 95, 38, 
	128, 38, 38, 38, 95, 38, 129, 38, 
	38, 38, 95, 38, 130, 38, 38, 38, 
	95, 38, 131, 38, 38, 38, 95, 38, 
	132, 38, 38, 38, 95, 38, 133, 38, 
	38, 38, 95, 38, 134, 38, 38, 38, 
	95, 38, 135, 38, 38, 38, 95, 38, 
	136, 38, 38, 38, 95, 38, 137, 38, 
	38, 38, 95, 38, 138, 38, 38, 38, 
	95, 38, 139, 140, 141, 142, 143, 38, 
	38, 38, 95, 38, 144, 38, 38, 38, 
	95, 38, 145, 38, 38, 38, 95, 38, 
	146, 38, 38, 38, 95, 38, 147, 38, 
	38, 38, 95, 38, 148, 38, 38, 38, 
	95, 38, 149, 38, 38, 38, 95, 38, 
	150, 38, 38, 38, 95, 38, 151, 38, 
	38, 38, 95, 38, 152, 38, 38, 38, 
	95, 38, 153, 38, 38, 38, 95, 38, 
	154, 38, 38, 38, 95, 38, 155, 156, 
	38, 38, 38, 95, 38, 157, 38, 38, 
	38, 95, 38, 159, 38, 38, 38, 158, 
	38, 160, 38, 38, 38, 95, 38, 161, 
	38, 38, 38, 95, 38, 162, 38, 38, 
	38, 95, 38, 163, 38, 38, 38, 95, 
	38, 164, 38, 38, 38, 95, 38, 165, 
	38, 38, 38, 95, 38, 166, 38, 38, 
	38, 95, 38, 167, 168, 38, 38, 38, 
	95, 38, 169, 170, 171, 38, 38, 38, 
	95, 38, 172, 38, 38, 38, 95, 38, 
	173, 38, 38, 38, 95, 38, 174, 38, 
	38, 38, 95, 38, 175, 38, 38, 38, 
	95, 38, 176, 38, 38, 38, 95, 38, 
	177, 38, 38, 38, 95, 38, 178, 38, 
	38, 38, 95, 38, 179, 38, 38, 38, 
	95, 38, 180, 38, 38, 38, 95, 38, 
	181, 38, 38, 38, 95, 38, 182, 38, 
	38, 38, 95, 38, 183, 38, 38, 38, 
	95, 38, 185, 38, 38, 38, 184, 38, 
	186, 38, 38, 38, 95, 38, 187, 38, 
	38, 38, 95, 38, 188, 38, 38, 38, 
	95, 80, 80, 38, 189, 190, 191, 192, 
	96, 38, 38, 95, 38, 193, 38, 38, 
	38, 95, 38, 194, 38, 38, 38, 95, 
	38, 195, 38, 38, 38, 95, 38, 196, 
	38, 38, 38, 95, 38, 198, 38, 38, 
	38, 197, 38, 199, 38, 38, 38, 95, 
	38, 200, 38, 38, 38, 95, 38, 201, 
	38, 38, 38, 95, 38, 202, 38, 38, 
	38, 95, 38, 203, 38, 38, 38, 95, 
	38, 204, 38, 38, 38, 95, 38, 205, 
	38, 38, 38, 95, 38, 206, 207, 208, 
	209, 210, 38, 38, 38, 95, 38, 211, 
	38, 38, 38, 95, 38, 212, 38, 38, 
	38, 95, 38, 213, 38, 38, 38, 95, 
	38, 214, 38, 38, 38, 95, 38, 215, 
	38, 38, 38, 95, 38, 216, 38, 38, 
	38, 95, 38, 217, 38, 38, 38, 95, 
	38, 218, 38, 38, 38, 95, 38, 219, 
	38, 38, 38, 95, 38, 220, 38, 38, 
	38, 95, 38, 221, 38, 38, 38, 95, 
	38, 222, 38, 38, 38, 95, 38, 223, 
	38, 38, 38, 95, 38, 224, 38, 38, 
	38, 95, 38, 225, 38, 38, 38, 95, 
	38, 226, 38, 38, 38, 95, 38, 227, 
	38, 38, 38, 95, 38, 228, 38, 38, 
	38, 95, 38, 229, 38, 38, 38, 95, 
	38, 230, 38, 38, 38, 95, 38, 231, 
	38, 38, 38, 95, 38, 232, 38, 38, 
	38, 95, 38, 233, 234, 38, 38, 38, 
	95, 38, 235, 236, 38, 38, 38, 95, 
	38, 237, 38, 38, 38, 95, 38, 238, 
	38, 38, 38, 95, 38, 239, 38, 38, 
	38, 95, 38, 240, 38, 38, 38, 95, 
	242, 243, 244, 245, 38, 246, 38, 38, 
	38, 241, 247, 38, 38, 38, 38, 95, 
	248, 38, 38, 38, 38, 95, 249, 38, 
	38, 38, 38, 95, 38, 250, 38, 38, 
	38, 95, 38, 251, 38, 38, 38, 95, 
	38, 252, 38, 38, 38, 95, 38, 253, 
	254, 38, 38, 38, 95, 38, 255, 38, 
	38, 38, 95, 38, 256, 38, 38, 38, 
	95, 38, 257, 38, 38, 38, 95, 38, 
	258, 38, 38, 38, 95, 38, 259, 38, 
	38, 38, 95, 38, 260, 38, 38, 38, 
	95, 38, 261, 38, 38, 38, 95, 38, 
	262, 38, 38, 38, 95, 38, 263, 38, 
	38, 38, 95, 38, 264, 38, 38, 38, 
	95, 38, 265, 266, 267, 38, 38, 38, 
	95, 38, 268, 38, 38, 38, 95, 38, 
	269, 38, 38, 38, 95, 38, 270, 38, 
	38, 38, 95, 38, 271, 38, 38, 38, 
	95, 38, 272, 38, 38, 38, 95, 38, 
	273, 38, 38, 38, 95, 38, 274, 38, 
	38, 38, 95, 38, 275, 38, 38, 38, 
	95, 38, 276, 38, 38, 38, 95, 38, 
	277, 38, 38, 38, 95, 38, 279, 38, 
	38, 38, 278, 38, 280, 38, 38, 38, 
	95, 38, 281, 38, 38, 38, 95, 38, 
	282, 38, 38, 38, 95, 38, 283, 284, 
	285, 286, 38, 38, 38, 95, 38, 287, 
	38, 38, 38, 95, 38, 288, 38, 38, 
	38, 95, 38, 289, 38, 38, 38, 95, 
	38, 290, 38, 38, 38, 95, 38, 291, 
	38, 38, 38, 95, 38, 292, 293, 38, 
	38, 38, 95, 38, 294, 38, 38, 38, 
	95, 38, 295, 38, 38, 38, 95, 38, 
	296, 38, 38, 38, 95, 38, 297, 38, 
	38, 38, 95, 38, 298, 38, 38, 38, 
	95, 38, 299, 38, 38, 38, 95, 38, 
	300, 38, 38, 38, 95, 38, 301, 38, 
	38, 38, 95, 38, 302, 38, 38, 38, 
	95, 38, 303, 38, 38, 38, 95, 38, 
	304, 38, 38, 38, 95, 38, 305, 38, 
	38, 38, 95, 38, 306, 38, 38, 38, 
	95, 38, 307, 38, 38, 38, 95, 38, 
	308, 38, 38, 38, 95, 38, 309, 38, 
	38, 38, 95, 38, 310, 311, 312, 313, 
	38, 38, 38, 95, 38, 314, 38, 38, 
	38, 95, 38, 315, 38, 38, 38, 95, 
	38, 316, 38, 38, 38, 95, 38, 317, 
	38, 38, 38, 95, 38, 318, 38, 38, 
	38, 95, 38, 319, 38, 38, 38, 95, 
	38, 320, 38, 38, 38, 95, 38, 321, 
	322, 38, 38, 38, 95, 38, 323, 38, 
	38, 38, 95, 38, 324, 38, 38, 38, 
	95, 38, 325, 38, 38, 38, 95, 38, 
	326, 38, 38, 38, 95, 38, 327, 38, 
	38, 38, 95, 38, 328, 38, 38, 38, 
	95, 38, 329, 38, 38, 38, 95, 38, 
	330, 38, 38, 38, 95, 38, 331, 38, 
	38, 38, 95, 38, 332, 333, 38, 38, 
	38, 95, 38, 334, 335, 38, 38, 38, 
	95, 38, 336, 38, 38, 38, 95, 38, 
	337, 38, 38, 38, 95, 38, 338, 38, 
	38, 38, 95, 38, 339, 38, 38, 38, 
	95, 38, 340, 38, 38, 38, 95, 38, 
	341, 38, 38, 38, 95, 38, 342, 38, 
	38, 38, 95, 38, 343, 38, 38, 38, 
	95, 38, 344, 38, 38, 38, 95, 38, 
	345, 38, 38, 38, 95, 38, 346, 38, 
	38, 38, 95, 38, 347, 38, 38, 38, 
	95, 38, 348, 38, 38, 38, 95, 38, 
	349, 38, 38, 38, 95, 38, 350, 38, 
	38, 38, 95, 38, 351, 38, 38, 38, 
	95, 38, 352, 38, 38, 38, 95, 38, 
	353, 354, 38, 38, 38, 95, 38, 355, 
	38, 38, 38, 95, 38, 356, 38, 38, 
	38, 95, 38, 357, 38, 38, 38, 95, 
	38, 358, 38, 38, 38, 95, 38, 359, 
	38, 38, 38, 95, 38, 360, 38, 38, 
	38, 95, 38, 361, 38, 38, 38, 95, 
	38, 362, 38, 38, 38, 95, 38, 363, 
	364, 365, 366, 38, 38, 38, 95, 38, 
	367, 38, 38, 38, 95, 38, 368, 369, 
	370, 38, 38, 38, 95, 38, 371, 38, 
	38, 38, 95, 38, 372, 38, 38, 38, 
	95, 38, 373, 38, 38, 38, 95, 38, 
	374, 38, 38, 38, 95, 38, 375, 38, 
	38, 38, 95, 38, 376, 38, 38, 38, 
	95, 38, 377, 38, 38, 38, 95, 38, 
	378, 38, 38, 38, 95, 38, 379, 38, 
	38, 38, 95, 38, 380, 381, 382, 38, 
	38, 38, 95, 38, 383, 384, 38, 38, 
	38, 95, 38, 385, 38, 38, 38, 95, 
	38, 386, 38, 38, 38, 95, 38, 387, 
	38, 38, 38, 95, 38, 388, 38, 38, 
	38, 95, 38, 389, 38, 38, 38, 95, 
	38, 390, 38, 38, 38, 95, 38, 391, 
	38, 38, 38, 95, 38, 392, 38, 38, 
	38, 95, 38, 393, 38, 38, 38, 95, 
	38, 394, 38, 38, 38, 95, 38, 395, 
	38, 38, 38, 95, 38, 396, 38, 38, 
	38, 95, 38, 397, 38, 38, 38, 95, 
	38, 398, 38, 38, 38, 95, 38, 399, 
	400, 401, 38, 38, 38, 95, 38, 402, 
	403, 38, 38, 38, 95, 38, 404, 405, 
	38, 38, 38, 95, 38, 406, 38, 38, 
	38, 95, 38, 407, 38, 38, 38, 95, 
	38, 408, 38, 38, 38, 95, 38, 409, 
	38, 38, 38, 95, 38, 410, 38, 38, 
	38, 95, 38, 411, 38, 38, 38, 95, 
	38, 412, 38, 38, 38, 95, 38, 413, 
	414, 38, 38, 38, 95, 38, 415, 38, 
	38, 38, 95, 38, 416, 38, 38, 38, 
	95, 38, 417, 38, 38, 38, 95, 38, 
	418, 419, 420, 38, 38, 38, 95, 38, 
	421, 38, 38, 38, 95, 38, 422, 38, 
	38, 38, 95, 38, 423, 38, 38, 38, 
	95, 38, 424, 425, 38, 38, 38, 95, 
	38, 426, 38, 38, 38, 95, 38, 427, 
	38, 38, 38, 95, 38, 428, 429, 38, 
	38, 38, 95, 38, 430, 38, 38, 38, 
	95, 38, 431, 38, 38, 38, 95, 38, 
	432, 38, 38, 38, 95, 38, 433, 38, 
	38, 38, 95, 38, 434, 38, 38, 38, 
	95, 38, 435, 38, 38, 38, 95, 38, 
	436, 38, 38, 38, 95, 38, 437, 38, 
	38, 38, 95, 38, 438, 38, 38, 38, 
	95, 38, 439, 440, 441, 38, 38, 38, 
	95, 38, 442, 38, 38, 38, 95, 38, 
	443, 38, 38, 38, 95, 38, 444, 38, 
	38, 38, 95, 38, 445, 38, 38, 38, 
	95, 38, 446, 38, 38, 38, 95, 38, 
	447, 38, 38, 38, 95, 38, 448, 38, 
	38, 38, 95, 38, 449, 38, 38, 38, 
	95, 38, 450, 38, 38, 38, 95, 38, 
	451, 38, 38, 38, 95, 38, 452, 453, 
	38, 38, 38, 95, 38, 454, 38, 38, 
	38, 95, 38, 455, 38, 38, 38, 95, 
	38, 456, 38, 38, 38, 95, 38, 457, 
	38, 38, 38, 95, 38, 458, 38, 38, 
	38, 95, 38, 459, 38, 38, 38, 95, 
	38, 460, 461, 38, 38, 38, 95, 38, 
	462, 38, 38, 38, 95, 38, 463, 38, 
	38, 38, 95, 38, 464, 38, 38, 38, 
	95, 38, 465, 38, 38, 38, 95, 38, 
	466, 38, 38, 38, 95, 467, 468, 62, 
	0
};

static const short _axl_jnc_trans_targs[] = {
	7, 0, 7, 7, 11, 1, 7, 7, 
	15, 7, 7, 3, 3, 4, 7, 23, 
	7, 25, 7, 8, 7, 9, 10, 12, 
	13, 14, 16, 17, 18, 19, 20, 22, 
	24, 26, 27, 29, 30, 32, 33, 34, 
	36, 37, 53, 71, 93, 111, 124, 142, 
	144, 147, 159, 171, 186, 209, 245, 255, 
	283, 297, 314, 332, 338, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 2, 21, 7, 7, 7, 
	5, 6, 7, 7, 7, 28, 7, 7, 
	7, 7, 7, 31, 7, 7, 7, 7, 
	35, 7, 38, 44, 47, 39, 40, 41, 
	42, 43, 33, 45, 46, 33, 48, 49, 
	7, 50, 51, 33, 52, 33, 54, 66, 
	68, 55, 61, 56, 57, 58, 59, 60, 
	33, 62, 63, 64, 65, 33, 67, 33, 
	69, 70, 33, 72, 74, 77, 79, 82, 
	73, 33, 75, 76, 33, 78, 33, 80, 
	81, 33, 83, 84, 89, 85, 7, 86, 
	87, 88, 33, 90, 91, 92, 33, 94, 
	107, 95, 99, 102, 96, 97, 98, 33, 
	100, 101, 33, 103, 104, 105, 106, 33, 
	7, 108, 109, 110, 33, 112, 114, 117, 
	120, 113, 33, 115, 116, 7, 33, 118, 
	119, 33, 121, 122, 123, 33, 125, 128, 
	131, 132, 136, 126, 127, 33, 129, 130, 
	33, 33, 133, 134, 135, 33, 137, 138, 
	139, 140, 141, 33, 143, 33, 145, 146, 
	33, 33, 148, 149, 153, 150, 151, 152, 
	33, 7, 154, 155, 156, 33, 157, 33, 
	33, 33, 158, 33, 160, 161, 167, 162, 
	163, 164, 165, 166, 33, 168, 169, 170, 
	33, 172, 179, 180, 173, 174, 175, 176, 
	177, 178, 33, 33, 181, 182, 7, 183, 
	184, 185, 33, 187, 191, 197, 203, 188, 
	189, 190, 33, 192, 33, 193, 194, 195, 
	196, 33, 198, 199, 200, 201, 202, 33, 
	204, 205, 206, 207, 208, 33, 210, 212, 
	217, 241, 211, 33, 213, 214, 215, 216, 
	33, 218, 227, 219, 220, 221, 222, 223, 
	224, 225, 226, 33, 228, 236, 229, 232, 
	230, 231, 33, 233, 234, 235, 33, 237, 
	238, 239, 240, 33, 242, 243, 244, 33, 
	246, 247, 252, 248, 249, 250, 251, 33, 
	253, 254, 33, 256, 257, 267, 279, 33, 
	258, 261, 264, 259, 260, 33, 262, 263, 
	33, 265, 266, 33, 268, 272, 276, 269, 
	270, 33, 271, 33, 273, 274, 275, 33, 
	277, 278, 33, 280, 281, 282, 33, 284, 
	289, 291, 285, 286, 33, 33, 287, 288, 
	33, 290, 33, 292, 293, 294, 296, 295, 
	33, 33, 298, 301, 311, 299, 300, 33, 
	302, 304, 303, 33, 305, 307, 306, 33, 
	308, 309, 310, 33, 312, 313, 33, 315, 
	320, 325, 316, 317, 318, 319, 33, 321, 
	322, 323, 324, 33, 326, 327, 33, 328, 
	329, 330, 331, 33, 333, 335, 334, 33, 
	336, 337, 33, 7, 7
};

static const short _axl_jnc_trans_actions[] = {
	99, 0, 104, 55, 359, 0, 101, 53, 
	356, 97, 51, 0, 1, 0, 57, 0, 
	95, 0, 59, 0, 107, 0, 365, 0, 
	0, 365, 0, 0, 0, 7, 7, 362, 
	362, 0, 0, 0, 0, 0, 353, 353, 
	0, 0, 0, 0, 0, 353, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 91, 93, 21, 
	81, 37, 15, 43, 79, 33, 9, 29, 
	11, 31, 13, 0, 0, 35, 89, 83, 
	0, 0, 87, 85, 27, 0, 23, 73, 
	39, 19, 25, 0, 75, 41, 49, 77, 
	0, 45, 0, 0, 0, 0, 0, 0, 
	0, 0, 143, 0, 0, 125, 0, 0, 
	63, 0, 0, 209, 0, 215, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	167, 0, 0, 0, 0, 212, 0, 230, 
	0, 0, 323, 0, 0, 0, 0, 0, 
	0, 335, 0, 0, 191, 0, 254, 0, 
	0, 266, 0, 0, 0, 0, 61, 0, 
	0, 0, 281, 0, 0, 0, 326, 0, 
	0, 0, 0, 0, 0, 0, 0, 338, 
	0, 0, 302, 0, 0, 0, 0, 284, 
	69, 0, 0, 0, 248, 0, 0, 0, 
	0, 0, 314, 0, 0, 67, 257, 0, 
	0, 206, 0, 0, 0, 116, 0, 0, 
	0, 0, 0, 0, 0, 350, 0, 0, 
	245, 317, 0, 0, 0, 158, 0, 0, 
	0, 0, 0, 197, 0, 269, 0, 0, 
	137, 311, 0, 0, 0, 0, 0, 0, 
	218, 65, 0, 0, 0, 233, 0, 236, 
	239, 242, 0, 251, 0, 0, 0, 0, 
	0, 0, 0, 0, 203, 0, 0, 0, 
	176, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 110, 299, 0, 0, 71, 0, 
	0, 0, 170, 0, 0, 0, 0, 0, 
	0, 0, 224, 0, 341, 0, 0, 0, 
	0, 296, 0, 0, 0, 0, 0, 287, 
	0, 0, 0, 0, 0, 149, 0, 0, 
	0, 0, 0, 119, 0, 0, 0, 0, 
	290, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 278, 0, 0, 0, 0, 
	0, 0, 200, 0, 0, 0, 293, 0, 
	0, 0, 0, 155, 0, 0, 0, 152, 
	0, 0, 0, 0, 0, 0, 0, 173, 
	0, 0, 329, 0, 0, 0, 0, 272, 
	0, 0, 0, 0, 0, 161, 0, 0, 
	344, 0, 0, 305, 0, 0, 0, 0, 
	0, 134, 0, 128, 0, 0, 0, 194, 
	0, 0, 260, 0, 0, 0, 332, 0, 
	0, 0, 0, 0, 185, 275, 0, 0, 
	131, 0, 347, 0, 0, 0, 0, 0, 
	122, 308, 0, 0, 0, 0, 0, 140, 
	0, 0, 0, 263, 0, 0, 0, 188, 
	0, 0, 0, 164, 0, 0, 113, 0, 
	0, 0, 0, 0, 0, 0, 227, 0, 
	0, 0, 0, 146, 0, 0, 221, 0, 
	0, 0, 0, 179, 0, 0, 0, 182, 
	0, 0, 320, 47, 17
};

static const short _axl_jnc_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const short _axl_jnc_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const short _axl_jnc_eof_trans[] = {
	1, 1, 10, 10, 10, 1, 17, 0, 
	62, 63, 63, 65, 63, 63, 63, 69, 
	63, 63, 63, 63, 63, 79, 80, 83, 
	80, 84, 63, 63, 88, 63, 63, 93, 
	63, 1, 96, 96, 63, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 113, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 159, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 185, 96, 96, 96, 96, 
	96, 96, 96, 96, 198, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 242, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 279, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 63
};

static const int axl_jnc_start = 7;
static const int axl_jnc_first_final = 7;
static const int axl_jnc_error = -1;

static const int axl_jnc_en_main = 7;


/* #line 242 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */


//.............................................................................

void 
CLexer::Init ()
{
	
/* #line 1093 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
	{
	cs = axl_jnc_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 250 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
}

bool
CLexer::Exec ()
{
	
/* #line 1099 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const unsigned char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _axl_jnc_actions + _axl_jnc_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 1116 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

	_keys = _axl_jnc_trans_keys + _axl_jnc_key_offsets[cs];
	_trans = _axl_jnc_index_offsets[cs];

	_klen = _axl_jnc_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _axl_jnc_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _axl_jnc_indicies[_trans];
_eof_trans:
	cs = _axl_jnc_trans_targs[_trans];

	if ( _axl_jnc_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _axl_jnc_actions + _axl_jnc_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
/* #line 44 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{ NewLine (p + 1); }
	break;
	case 3:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 4:
/* #line 60 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 1;}
	break;
	case 5:
/* #line 61 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 2;}
	break;
	case 6:
/* #line 62 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 3;}
	break;
	case 7:
/* #line 63 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 4;}
	break;
	case 8:
/* #line 69 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 5;}
	break;
	case 9:
/* #line 70 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 6;}
	break;
	case 10:
/* #line 71 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 7;}
	break;
	case 11:
/* #line 72 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 8;}
	break;
	case 12:
/* #line 73 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 9;}
	break;
	case 13:
/* #line 74 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 10;}
	break;
	case 14:
/* #line 75 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 11;}
	break;
	case 15:
/* #line 76 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 12;}
	break;
	case 16:
/* #line 77 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 13;}
	break;
	case 17:
/* #line 78 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 14;}
	break;
	case 18:
/* #line 84 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 15;}
	break;
	case 19:
/* #line 85 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 16;}
	break;
	case 20:
/* #line 86 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 17;}
	break;
	case 21:
/* #line 92 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 18;}
	break;
	case 22:
/* #line 93 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 19;}
	break;
	case 23:
/* #line 94 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 20;}
	break;
	case 24:
/* #line 95 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 21;}
	break;
	case 25:
/* #line 97 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 23;}
	break;
	case 26:
/* #line 98 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 24;}
	break;
	case 27:
/* #line 99 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 25;}
	break;
	case 28:
/* #line 100 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 26;}
	break;
	case 29:
/* #line 101 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 27;}
	break;
	case 30:
/* #line 102 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 28;}
	break;
	case 31:
/* #line 103 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 29;}
	break;
	case 32:
/* #line 104 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 30;}
	break;
	case 33:
/* #line 105 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 31;}
	break;
	case 34:
/* #line 106 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 32;}
	break;
	case 35:
/* #line 107 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 33;}
	break;
	case 36:
/* #line 108 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 34;}
	break;
	case 37:
/* #line 109 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 35;}
	break;
	case 38:
/* #line 110 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 36;}
	break;
	case 39:
/* #line 111 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 37;}
	break;
	case 40:
/* #line 112 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 38;}
	break;
	case 41:
/* #line 119 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 40;}
	break;
	case 42:
/* #line 120 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 41;}
	break;
	case 43:
/* #line 121 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 42;}
	break;
	case 44:
/* #line 122 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 43;}
	break;
	case 45:
/* #line 123 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 44;}
	break;
	case 46:
/* #line 124 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 45;}
	break;
	case 47:
/* #line 125 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 46;}
	break;
	case 48:
/* #line 126 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 47;}
	break;
	case 49:
/* #line 127 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 48;}
	break;
	case 50:
/* #line 128 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 49;}
	break;
	case 51:
/* #line 130 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 51;}
	break;
	case 52:
/* #line 131 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 52;}
	break;
	case 53:
/* #line 138 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 54;}
	break;
	case 54:
/* #line 139 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 55;}
	break;
	case 55:
/* #line 140 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 56;}
	break;
	case 56:
/* #line 141 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 57;}
	break;
	case 57:
/* #line 147 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 58;}
	break;
	case 58:
/* #line 148 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 59;}
	break;
	case 59:
/* #line 149 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 60;}
	break;
	case 60:
/* #line 150 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 61;}
	break;
	case 61:
/* #line 151 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 62;}
	break;
	case 62:
/* #line 152 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 63;}
	break;
	case 63:
/* #line 153 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 64;}
	break;
	case 64:
/* #line 154 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 65;}
	break;
	case 65:
/* #line 155 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 66;}
	break;
	case 66:
/* #line 156 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 67;}
	break;
	case 67:
/* #line 162 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 68;}
	break;
	case 68:
/* #line 163 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 69;}
	break;
	case 69:
/* #line 164 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 70;}
	break;
	case 70:
/* #line 165 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 71;}
	break;
	case 71:
/* #line 171 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 72;}
	break;
	case 72:
/* #line 172 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 73;}
	break;
	case 73:
/* #line 173 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 74;}
	break;
	case 74:
/* #line 174 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 75;}
	break;
	case 75:
/* #line 176 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 77;}
	break;
	case 76:
/* #line 177 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 78;}
	break;
	case 77:
/* #line 178 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 79;}
	break;
	case 78:
/* #line 179 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 80;}
	break;
	case 79:
/* #line 180 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 81;}
	break;
	case 80:
/* #line 181 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 82;}
	break;
	case 81:
/* #line 182 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 83;}
	break;
	case 82:
/* #line 183 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 84;}
	break;
	case 83:
/* #line 189 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 85;}
	break;
	case 84:
/* #line 190 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 86;}
	break;
	case 85:
/* #line 226 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 112;}
	break;
	case 86:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 113;}
	break;
	case 87:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 114;}
	break;
	case 88:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 115;}
	break;
	case 89:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 121;}
	break;
	case 90:
/* #line 197 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Inc); }}
	break;
	case 91:
/* #line 198 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Dec); }}
	break;
	case 92:
/* #line 199 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ptr); }}
	break;
	case 93:
/* #line 202 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogAnd); }}
	break;
	case 94:
/* #line 203 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogOr); }}
	break;
	case 95:
/* #line 204 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Eq); }}
	break;
	case 96:
/* #line 205 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ne); }}
	break;
	case 97:
/* #line 206 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Le); }}
	break;
	case 98:
/* #line 207 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ge); }}
	break;
	case 99:
/* #line 208 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_RefAssign); }}
	break;
	case 100:
/* #line 209 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AddAssign); }}
	break;
	case 101:
/* #line 210 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_SubAssign); }}
	break;
	case 102:
/* #line 211 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_MulAssign); }}
	break;
	case 103:
/* #line 212 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_DivAssign); }}
	break;
	case 104:
/* #line 213 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ModAssign); }}
	break;
	case 105:
/* #line 214 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShlAssign); }}
	break;
	case 106:
/* #line 215 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShrAssign); }}
	break;
	case 107:
/* #line 216 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AndAssign); }}
	break;
	case 108:
/* #line 217 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_XorAssign); }}
	break;
	case 109:
/* #line 218 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_OrAssign); }}
	break;
	case 110:
/* #line 219 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AtAssign); }}
	break;
	case 111:
/* #line 220 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ellipsis); }}
	break;
	case 112:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateCharToken (EToken_Integer); }}
	break;
	case 113:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 114:
/* #line 235 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 115:
/* #line 237 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 116:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (ts [0]); }}
	break;
	case 117:
/* #line 96 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Const); }}
	break;
	case 118:
/* #line 118 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Auto); }}
	break;
	case 119:
/* #line 129 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Int); }}
	break;
	case 120:
/* #line 137 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Enum); }}
	break;
	case 121:
/* #line 175 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Do); }}
	break;
	case 122:
/* #line 191 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Null); }}
	break;
	case 123:
/* #line 200 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shl); }}
	break;
	case 124:
/* #line 201 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shr); }}
	break;
	case 125:
/* #line 226 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Identifier); }}
	break;
	case 126:
/* #line 227 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateCharToken (EToken_Integer); }}
	break;
	case 127:
/* #line 228 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 128:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (10); }}
	break;
	case 129:
/* #line 230 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (16, 2); }}
	break;
	case 130:
/* #line 232 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateFpToken (); }}
	break;
	case 131:
/* #line 234 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 132:
/* #line 237 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 133:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (ts [0]); }}
	break;
	case 134:
/* #line 229 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateIntegerToken (10); }}
	break;
	case 135:
/* #line 238 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateToken (ts [0]); }}
	break;
	case 136:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} CreateToken (EToken_Namespace); }
	break;
	case 2:
	{{p = ((te))-1;} CreateToken (EToken_Using); }
	break;
	case 3:
	{{p = ((te))-1;} CreateToken (EToken_Extend); }
	break;
	case 4:
	{{p = ((te))-1;} CreateToken (EToken_Pack); }
	break;
	case 5:
	{{p = ((te))-1;} CreateToken (EToken_Typedef); }
	break;
	case 6:
	{{p = ((te))-1;} CreateToken (EToken_Alias); }
	break;
	case 7:
	{{p = ((te))-1;} CreateToken (EToken_Static); }
	break;
	case 8:
	{{p = ((te))-1;} CreateToken (EToken_Thread); }
	break;
	case 9:
	{{p = ((te))-1;} CreateToken (EToken_Stack); }
	break;
	case 10:
	{{p = ((te))-1;} CreateToken (EToken_Heap); }
	break;
	case 11:
	{{p = ((te))-1;} CreateToken (EToken_UHeap); }
	break;
	case 12:
	{{p = ((te))-1;} CreateToken (EToken_Abstract); }
	break;
	case 13:
	{{p = ((te))-1;} CreateToken (EToken_Virtual); }
	break;
	case 14:
	{{p = ((te))-1;} CreateToken (EToken_Override); }
	break;
	case 15:
	{{p = ((te))-1;} CreateToken (EToken_Public); }
	break;
	case 16:
	{{p = ((te))-1;} CreateToken (EToken_Protected); }
	break;
	case 17:
	{{p = ((te))-1;} CreateToken (EToken_Friend); }
	break;
	case 18:
	{{p = ((te))-1;} CreateToken (EToken_Signed); }
	break;
	case 19:
	{{p = ((te))-1;} CreateToken (EToken_Unsigned); }
	break;
	case 20:
	{{p = ((te))-1;} CreateToken (EToken_BigEndian); }
	break;
	case 21:
	{{p = ((te))-1;} CreateToken (EToken_Nullable); }
	break;
	case 23:
	{{p = ((te))-1;} CreateToken (EToken_ReadOnly); }
	break;
	case 24:
	{{p = ((te))-1;} CreateToken (EToken_Mutable); }
	break;
	case 25:
	{{p = ((te))-1;} CreateToken (EToken_Volatile); }
	break;
	case 26:
	{{p = ((te))-1;} CreateToken (EToken_Weak); }
	break;
	case 27:
	{{p = ((te))-1;} CreateToken (EToken_Thin); }
	break;
	case 28:
	{{p = ((te))-1;} CreateToken (EToken_Unsafe); }
	break;
	case 29:
	{{p = ((te))-1;} CreateToken (EToken_Cdecl); }
	break;
	case 30:
	{{p = ((te))-1;} CreateToken (EToken_Stdcall); }
	break;
	case 31:
	{{p = ((te))-1;} CreateToken (EToken_Function); }
	break;
	case 32:
	{{p = ((te))-1;} CreateToken (EToken_Property); }
	break;
	case 33:
	{{p = ((te))-1;} CreateToken (EToken_Multicast); }
	break;
	case 34:
	{{p = ((te))-1;} CreateToken (EToken_Event); }
	break;
	case 35:
	{{p = ((te))-1;} CreateToken (EToken_AutoEv); }
	break;
	case 36:
	{{p = ((te))-1;} CreateToken (EToken_Bindable); }
	break;
	case 37:
	{{p = ((te))-1;} CreateToken (EToken_AutoGet); }
	break;
	case 38:
	{{p = ((te))-1;} CreateToken (EToken_Indexed); }
	break;
	case 40:
	{{p = ((te))-1;} CreateToken (EToken_Void); }
	break;
	case 41:
	{{p = ((te))-1;} CreateToken (EToken_Object); }
	break;
	case 42:
	{{p = ((te))-1;} CreateToken (EToken_Variant); }
	break;
	case 43:
	{{p = ((te))-1;} CreateToken (EToken_Bool); }
	break;
	case 44:
	{{p = ((te))-1;} CreateToken (EToken_Int8); }
	break;
	case 45:
	{{p = ((te))-1;} CreateToken (EToken_Int16); }
	break;
	case 46:
	{{p = ((te))-1;} CreateToken (EToken_Int32); }
	break;
	case 47:
	{{p = ((te))-1;} CreateToken (EToken_Int64); }
	break;
	case 48:
	{{p = ((te))-1;} CreateToken (EToken_Float); }
	break;
	case 49:
	{{p = ((te))-1;} CreateToken (EToken_Double); }
	break;
	case 51:
	{{p = ((te))-1;} CreateToken (EToken_IntPtr); }
	break;
	case 52:
	{{p = ((te))-1;} CreateToken (EToken_Char); }
	break;
	case 54:
	{{p = ((te))-1;} CreateToken (EToken_EnumC); }
	break;
	case 55:
	{{p = ((te))-1;} CreateToken (EToken_Struct); }
	break;
	case 56:
	{{p = ((te))-1;} CreateToken (EToken_Union); }
	break;
	case 57:
	{{p = ((te))-1;} CreateToken (EToken_Class); }
	break;
	case 58:
	{{p = ((te))-1;} CreateToken (EToken_Get); }
	break;
	case 59:
	{{p = ((te))-1;} CreateToken (EToken_Set); }
	break;
	case 60:
	{{p = ((te))-1;} CreateToken (EToken_This); }
	break;
	case 61:
	{{p = ((te))-1;} CreateToken (EToken_PreConstruct); }
	break;
	case 62:
	{{p = ((te))-1;} CreateToken (EToken_Construct); }
	break;
	case 63:
	{{p = ((te))-1;} CreateToken (EToken_Destruct); }
	break;
	case 64:
	{{p = ((te))-1;} CreateToken (EToken_Operator); }
	break;
	case 65:
	{{p = ((te))-1;} CreateToken (EToken_Postfix); }
	break;
	case 66:
	{{p = ((te))-1;} CreateToken (EToken_PropValue); }
	break;
	case 67:
	{{p = ((te))-1;} CreateToken (EToken_OnChange); }
	break;
	case 68:
	{{p = ((te))-1;} CreateToken (EToken_New); }
	break;
	case 69:
	{{p = ((te))-1;} CreateToken (EToken_Delete); }
	break;
	case 70:
	{{p = ((te))-1;} CreateToken (EToken_SizeOf); }
	break;
	case 71:
	{{p = ((te))-1;} CreateToken (EToken_TypeOf); }
	break;
	case 72:
	{{p = ((te))-1;} CreateToken (EToken_If); }
	break;
	case 73:
	{{p = ((te))-1;} CreateToken (EToken_Else); }
	break;
	case 74:
	{{p = ((te))-1;} CreateToken (EToken_For); }
	break;
	case 75:
	{{p = ((te))-1;} CreateToken (EToken_While); }
	break;
	case 77:
	{{p = ((te))-1;} CreateToken (EToken_Break); }
	break;
	case 78:
	{{p = ((te))-1;} CreateToken (EToken_Continue); }
	break;
	case 79:
	{{p = ((te))-1;} CreateToken (EToken_Return); }
	break;
	case 80:
	{{p = ((te))-1;} CreateToken (EToken_Switch); }
	break;
	case 81:
	{{p = ((te))-1;} CreateToken (EToken_Case); }
	break;
	case 82:
	{{p = ((te))-1;} CreateToken (EToken_Default); }
	break;
	case 83:
	{{p = ((te))-1;} CreateToken (EToken_Once); }
	break;
	case 84:
	{{p = ((te))-1;} CreateToken (EToken_Silent); }
	break;
	case 85:
	{{p = ((te))-1;} CreateToken (EToken_True); }
	break;
	case 86:
	{{p = ((te))-1;} CreateToken (EToken_False); }
	break;
	case 112:
	{{p = ((te))-1;} CreateStringToken (EToken_Identifier); }
	break;
	case 113:
	{{p = ((te))-1;} CreateCharToken (EToken_Integer); }
	break;
	case 114:
	{{p = ((te))-1;} CreateStringToken (EToken_Literal, 1, 1); }
	break;
	case 115:
	{{p = ((te))-1;} CreateIntegerToken (10); }
	break;
	case 121:
	{{p = ((te))-1;} CreateToken (ts [0]); }
	break;
	}
	}
	break;
/* #line 1846 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

_again:
	_acts = _axl_jnc_actions + _axl_jnc_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 1857 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _axl_jnc_eof_trans[cs] > 0 ) {
		_trans = _axl_jnc_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 256 "D:/Prj/Ninja/axl/src/axl_jnc/axl_jnc_Lexer.rl" */

	bool Result = cs != axl_jnc_error;
	if (!Result)
	{
		CToken* pToken = CreateToken (EToken_Error);
		pToken->m_Data.m_Error.CreateStringError ("lexer error");
	}

	return Result;
}

//.............................................................................

} // namespace jnc {
} // namespace axl {
