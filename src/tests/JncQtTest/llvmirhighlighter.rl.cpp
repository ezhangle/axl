
/* #line 1 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
#include "pch.h"
#include "llvmirhighlighter.h"
#include "moc_llvmirhighlighter.cpp"

//.............................................................................


/* #line 2 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
static const char _llvmir_lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 2, 
	2, 3, 2, 2, 4, 2, 2, 5, 
	2, 2, 6
};

static const short _llvmir_lexer_key_offsets[] = {
	0, 3, 6, 12, 45, 48, 51, 52, 
	55, 56, 60, 62, 68, 69, 76, 88, 
	96, 104, 112, 120, 128, 136, 144, 152, 
	160, 168, 176, 184, 192, 200, 209, 217, 
	225, 233, 241, 249, 258, 266, 274, 282, 
	290, 298, 306, 314, 322, 330, 338, 346, 
	354, 362, 371, 379, 387, 395, 403, 411, 
	419, 427, 435, 443, 458, 466, 474, 482, 
	490, 498, 506, 514, 522, 531, 539, 548, 
	557, 565, 573, 581, 589, 597, 605, 613, 
	621, 629, 637, 645, 653, 661, 669, 677, 
	685, 693, 701, 709, 718, 729, 737, 745, 
	753, 761, 769, 777, 785, 793, 801, 809, 
	817, 825, 835, 843, 851, 859, 867, 875, 
	883, 891, 900, 908, 916, 924, 932, 940, 
	949, 957, 965, 980, 989, 997, 1005, 1014, 
	1022, 1030, 1038, 1046, 1054, 1062, 1070, 1078, 
	1086, 1094, 1102, 1110, 1118, 1126, 1134, 1142, 
	1150, 1158, 1166, 1177, 1185, 1193, 1201, 1209, 
	1217, 1225, 1233, 1241, 1249, 1256, 1264, 1272, 
	1280
};

static const char _llvmir_lexer_trans_keys[] = {
	10, 34, 92, 10, 39, 92, 48, 57, 
	65, 70, 97, 102, 9, 10, 13, 32, 
	34, 39, 48, 59, 95, 97, 98, 99, 
	101, 102, 103, 105, 108, 109, 111, 112, 
	114, 115, 116, 117, 118, 120, 122, 49, 
	57, 65, 90, 100, 121, 9, 13, 32, 
	10, 34, 92, 10, 10, 39, 92, 10, 
	88, 120, 48, 57, 48, 57, 48, 57, 
	65, 70, 97, 102, 10, 95, 48, 57, 
	65, 90, 97, 122, 95, 100, 108, 110, 
	115, 116, 48, 57, 65, 90, 97, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 104, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	95, 119, 48, 57, 65, 90, 97, 122, 
	95, 105, 114, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 115, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 97, 109, 48, 57, 65, 90, 
	98, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 112, 48, 57, 65, 90, 
	97, 122, 95, 120, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 104, 48, 57, 65, 90, 
	97, 122, 95, 113, 48, 57, 65, 90, 
	97, 122, 95, 120, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 101, 118, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 97, 99, 100, 101, 
	109, 112, 114, 115, 48, 57, 65, 90, 
	98, 122, 95, 100, 48, 57, 65, 90, 
	97, 122, 95, 109, 48, 57, 65, 90, 
	97, 122, 95, 112, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 118, 48, 57, 65, 90, 
	97, 122, 95, 110, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 117, 48, 57, 65, 90, 
	97, 122, 95, 101, 116, 48, 57, 65, 
	90, 97, 122, 95, 120, 48, 57, 65, 
	90, 97, 122, 95, 111, 114, 48, 57, 
	65, 90, 97, 122, 95, 115, 117, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 109, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 98, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 109, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 112, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 99, 110, 
	48, 57, 65, 90, 97, 122, 95, 100, 
	115, 116, 118, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 98, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 107, 48, 57, 65, 90, 97, 
	122, 95, 97, 111, 115, 48, 57, 65, 
	90, 98, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 103, 48, 57, 65, 
	90, 97, 122, 95, 112, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 104, 116, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 115, 116, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 109, 48, 
	57, 65, 90, 97, 122, 95, 100, 101, 
	104, 105, 114, 116, 117, 119, 48, 57, 
	65, 90, 97, 122, 95, 108, 120, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 95, 108, 117, 
	48, 57, 65, 90, 97, 122, 95, 102, 
	48, 57, 65, 90, 97, 122, 95, 102, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 118, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 102, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 104, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 100, 
	105, 110, 114, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 104, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 98, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 103, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	0
};

static const char _llvmir_lexer_single_lengths[] = {
	3, 3, 0, 27, 3, 3, 1, 3, 
	1, 2, 0, 0, 1, 1, 6, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 9, 2, 2, 2, 2, 
	2, 2, 2, 2, 3, 2, 3, 3, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 5, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 2, 3, 
	2, 2, 9, 3, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 5, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 1, 2, 2, 2, 
	2
};

static const char _llvmir_lexer_range_lengths[] = {
	0, 0, 3, 3, 0, 0, 0, 0, 
	0, 1, 1, 3, 0, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3
};

static const short _llvmir_lexer_index_offsets[] = {
	0, 4, 8, 12, 43, 47, 51, 53, 
	57, 59, 63, 65, 69, 71, 76, 86, 
	92, 98, 104, 110, 116, 122, 128, 134, 
	140, 146, 152, 158, 164, 170, 177, 183, 
	189, 195, 201, 207, 214, 220, 226, 232, 
	238, 244, 250, 256, 262, 268, 274, 280, 
	286, 292, 299, 305, 311, 317, 323, 329, 
	335, 341, 347, 353, 366, 372, 378, 384, 
	390, 396, 402, 408, 414, 421, 427, 434, 
	441, 447, 453, 459, 465, 471, 477, 483, 
	489, 495, 501, 507, 513, 519, 525, 531, 
	537, 543, 549, 555, 562, 571, 577, 583, 
	589, 595, 601, 607, 613, 619, 625, 631, 
	637, 643, 651, 657, 663, 669, 675, 681, 
	687, 693, 700, 706, 712, 718, 724, 730, 
	737, 743, 749, 762, 769, 775, 781, 788, 
	794, 800, 806, 812, 818, 824, 830, 836, 
	842, 848, 854, 860, 866, 872, 878, 884, 
	890, 896, 902, 911, 917, 923, 929, 935, 
	941, 947, 953, 959, 965, 970, 976, 982, 
	988
};

static const unsigned char _llvmir_lexer_indicies[] = {
	2, 2, 3, 1, 2, 2, 5, 4, 
	7, 7, 7, 6, 9, 10, 9, 9, 
	11, 12, 13, 15, 16, 17, 18, 19, 
	20, 21, 22, 23, 24, 25, 26, 27, 
	28, 29, 30, 31, 32, 33, 34, 14, 
	16, 16, 8, 9, 9, 9, 35, 2, 
	2, 3, 1, 37, 1, 2, 2, 5, 
	4, 37, 4, 39, 39, 14, 38, 14, 
	38, 7, 7, 7, 40, 41, 15, 16, 
	16, 16, 16, 0, 16, 43, 44, 43, 
	45, 46, 16, 16, 16, 42, 16, 47, 
	16, 16, 16, 42, 16, 48, 16, 16, 
	16, 42, 16, 49, 16, 16, 16, 42, 
	16, 50, 16, 16, 16, 42, 16, 47, 
	16, 16, 16, 42, 16, 26, 16, 16, 
	16, 42, 16, 47, 16, 16, 16, 42, 
	16, 51, 16, 16, 16, 42, 16, 52, 
	16, 16, 16, 42, 16, 53, 16, 16, 
	16, 42, 16, 54, 16, 16, 16, 42, 
	16, 55, 16, 16, 16, 42, 16, 56, 
	16, 16, 16, 42, 16, 47, 16, 16, 
	16, 42, 16, 57, 47, 16, 16, 16, 
	42, 16, 58, 16, 16, 16, 42, 16, 
	59, 16, 16, 16, 42, 16, 60, 16, 
	16, 16, 42, 16, 61, 16, 16, 16, 
	42, 16, 47, 16, 16, 16, 42, 16, 
	62, 63, 16, 16, 16, 42, 16, 64, 
	16, 16, 16, 42, 16, 47, 16, 16, 
	16, 42, 16, 65, 16, 16, 16, 42, 
	16, 66, 16, 16, 16, 42, 16, 67, 
	16, 16, 16, 42, 16, 68, 16, 16, 
	16, 42, 16, 47, 16, 16, 16, 42, 
	16, 69, 16, 16, 16, 42, 16, 70, 
	16, 16, 16, 42, 16, 71, 16, 16, 
	16, 42, 16, 72, 16, 16, 16, 42, 
	16, 73, 16, 16, 16, 42, 16, 74, 
	16, 16, 16, 42, 16, 75, 76, 16, 
	16, 16, 42, 16, 77, 16, 16, 16, 
	42, 16, 78, 16, 16, 16, 42, 16, 
	79, 16, 16, 16, 42, 16, 80, 16, 
	16, 16, 42, 16, 61, 16, 16, 16, 
	42, 16, 81, 16, 16, 16, 42, 16, 
	82, 16, 16, 16, 42, 16, 83, 16, 
	16, 16, 42, 16, 47, 16, 16, 16, 
	42, 16, 84, 85, 86, 87, 25, 88, 
	89, 90, 16, 16, 16, 42, 16, 43, 
	16, 16, 16, 42, 16, 91, 16, 16, 
	16, 42, 16, 47, 16, 16, 16, 42, 
	16, 92, 16, 16, 16, 42, 16, 47, 
	16, 16, 16, 42, 16, 93, 16, 16, 
	16, 42, 16, 83, 16, 16, 16, 42, 
	16, 64, 16, 16, 16, 42, 16, 94, 
	95, 16, 16, 16, 42, 16, 61, 16, 
	16, 16, 42, 16, 96, 97, 16, 16, 
	16, 42, 16, 98, 98, 16, 16, 16, 
	42, 16, 47, 16, 16, 16, 42, 16, 
	99, 16, 16, 16, 42, 16, 100, 16, 
	16, 16, 42, 16, 47, 16, 16, 16, 
	42, 16, 101, 16, 16, 16, 42, 16, 
	47, 16, 16, 16, 42, 16, 102, 16, 
	16, 16, 42, 16, 47, 16, 16, 16, 
	42, 16, 103, 16, 16, 16, 42, 16, 
	104, 16, 16, 16, 42, 16, 105, 16, 
	16, 16, 42, 16, 106, 16, 16, 16, 
	42, 16, 107, 16, 16, 16, 42, 16, 
	108, 16, 16, 16, 42, 16, 109, 16, 
	16, 16, 42, 16, 110, 16, 16, 16, 
	42, 16, 111, 16, 16, 16, 42, 16, 
	112, 16, 16, 16, 42, 16, 26, 16, 
	16, 16, 42, 16, 85, 113, 16, 16, 
	16, 42, 16, 114, 115, 116, 117, 16, 
	16, 16, 42, 16, 118, 16, 16, 16, 
	42, 16, 119, 16, 16, 16, 42, 16, 
	120, 16, 16, 16, 42, 16, 121, 16, 
	16, 16, 42, 16, 122, 16, 16, 16, 
	42, 16, 26, 16, 16, 16, 42, 16, 
	123, 16, 16, 16, 42, 16, 73, 16, 
	16, 16, 42, 16, 124, 16, 16, 16, 
	42, 16, 111, 16, 16, 16, 42, 16, 
	125, 16, 16, 16, 42, 16, 83, 16, 
	16, 16, 42, 16, 126, 127, 45, 16, 
	16, 16, 42, 16, 128, 16, 16, 16, 
	42, 16, 129, 16, 16, 16, 42, 16, 
	130, 16, 16, 16, 42, 16, 131, 16, 
	16, 16, 42, 16, 132, 16, 16, 16, 
	42, 16, 127, 16, 16, 16, 42, 16, 
	43, 16, 16, 16, 42, 16, 98, 133, 
	16, 16, 16, 42, 16, 134, 16, 16, 
	16, 42, 16, 135, 16, 16, 16, 42, 
	16, 136, 16, 16, 16, 42, 16, 80, 
	16, 16, 16, 42, 16, 137, 16, 16, 
	16, 42, 16, 138, 47, 16, 16, 16, 
	42, 16, 139, 16, 16, 16, 42, 16, 
	83, 16, 16, 16, 42, 16, 86, 140, 
	141, 142, 89, 143, 102, 144, 16, 16, 
	16, 42, 16, 145, 61, 16, 16, 16, 
	42, 16, 146, 16, 16, 16, 42, 16, 
	61, 16, 16, 16, 42, 16, 47, 147, 
	16, 16, 16, 42, 16, 148, 16, 16, 
	16, 42, 16, 149, 16, 16, 16, 42, 
	16, 150, 16, 16, 16, 42, 16, 151, 
	16, 16, 16, 42, 16, 152, 16, 16, 
	16, 42, 16, 153, 16, 16, 16, 42, 
	16, 154, 16, 16, 16, 42, 16, 33, 
	16, 16, 16, 42, 16, 26, 16, 16, 
	16, 42, 16, 155, 16, 16, 16, 42, 
	16, 156, 16, 16, 16, 42, 16, 91, 
	16, 16, 16, 42, 16, 157, 16, 16, 
	16, 42, 16, 83, 16, 16, 16, 42, 
	16, 158, 16, 16, 16, 42, 16, 159, 
	16, 16, 16, 42, 16, 160, 16, 16, 
	16, 42, 16, 47, 16, 16, 16, 42, 
	16, 97, 16, 16, 16, 42, 16, 86, 
	142, 161, 89, 16, 16, 16, 42, 16, 
	162, 16, 16, 16, 42, 16, 163, 16, 
	16, 16, 42, 16, 164, 16, 16, 16, 
	42, 16, 165, 16, 16, 16, 42, 16, 
	166, 16, 16, 16, 42, 16, 167, 16, 
	16, 16, 42, 16, 168, 16, 16, 16, 
	42, 16, 83, 16, 16, 16, 42, 16, 
	169, 16, 16, 16, 42, 170, 16, 16, 
	16, 42, 16, 171, 16, 16, 16, 42, 
	16, 172, 16, 16, 16, 42, 16, 47, 
	16, 16, 16, 42, 16, 94, 16, 16, 
	16, 42, 0
};

static const unsigned char _llvmir_lexer_trans_targs[] = {
	3, 0, 3, 6, 1, 8, 3, 11, 
	3, 4, 3, 5, 7, 9, 10, 12, 
	13, 14, 29, 35, 43, 59, 80, 91, 
	105, 67, 21, 113, 118, 122, 145, 146, 
	155, 135, 160, 3, 3, 3, 3, 2, 
	3, 3, 3, 15, 16, 20, 22, 13, 
	17, 18, 19, 23, 24, 25, 26, 27, 
	28, 30, 31, 32, 33, 34, 36, 38, 
	37, 39, 40, 41, 42, 44, 45, 46, 
	47, 48, 49, 50, 55, 51, 52, 53, 
	54, 56, 57, 58, 60, 61, 63, 65, 
	68, 76, 78, 62, 64, 66, 69, 70, 
	71, 73, 72, 74, 75, 77, 79, 81, 
	82, 83, 84, 85, 86, 87, 88, 89, 
	90, 92, 93, 99, 101, 103, 94, 95, 
	96, 97, 98, 100, 102, 104, 106, 112, 
	107, 108, 109, 110, 111, 114, 115, 116, 
	117, 119, 120, 121, 123, 126, 136, 139, 
	141, 124, 125, 127, 128, 129, 130, 131, 
	132, 133, 134, 137, 138, 140, 142, 143, 
	144, 147, 148, 149, 150, 151, 152, 153, 
	154, 156, 157, 158, 159
};

static const char _llvmir_lexer_trans_actions[] = {
	29, 0, 7, 37, 0, 37, 27, 0, 
	11, 0, 9, 40, 40, 5, 0, 0, 
	34, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 23, 25, 15, 17, 0, 
	19, 21, 13, 0, 0, 0, 0, 31, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const char _llvmir_lexer_to_state_actions[] = {
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
};

static const char _llvmir_lexer_from_state_actions[] = {
	0, 0, 0, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
};

static const short _llvmir_lexer_eof_trans[] = {
	1, 1, 7, 0, 36, 37, 38, 37, 
	38, 39, 39, 41, 42, 1, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43, 43, 43, 43, 43, 43, 43, 43, 
	43
};

static const int llvmir_lexer_start = 3;
static const int llvmir_lexer_first_final = 3;
static const int llvmir_lexer_error = -1;

static const int llvmir_lexer_en_main = 3;


/* #line 112 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */


//.............................................................................

void LlvmIrHighlighter::ragelInit()
{
	
/* #line 528 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
	{
	cs = llvmir_lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 119 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
}

void LlvmIrHighlighter::ragelExec()
{
	
/* #line 534 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _llvmir_lexer_actions + _llvmir_lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 551 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
		}
	}

	_keys = _llvmir_lexer_trans_keys + _llvmir_lexer_key_offsets[cs];
	_trans = _llvmir_lexer_index_offsets[cs];

	_klen = _llvmir_lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _llvmir_lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _llvmir_lexer_indicies[_trans];
_eof_trans:
	cs = _llvmir_lexer_trans_targs[_trans];

	if ( _llvmir_lexer_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _llvmir_lexer_actions + _llvmir_lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 3:
/* #line 95 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{act = 1;}
	break;
	case 4:
/* #line 99 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{act = 2;}
	break;
	case 5:
/* #line 100 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{act = 3;}
	break;
	case 6:
/* #line 108 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{act = 8;}
	break;
	case 7:
/* #line 100 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 8:
/* #line 106 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p+1;}
	break;
	case 9:
/* #line 108 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p+1;{  }}
	break;
	case 10:
/* #line 99 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{  }}
	break;
	case 11:
/* #line 100 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 12:
/* #line 101 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 13:
/* #line 102 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 14:
/* #line 104 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkGreen); }}
	break;
	case 15:
/* #line 106 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;}
	break;
	case 16:
/* #line 108 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{te = p;p--;{  }}
	break;
	case 17:
/* #line 101 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
	{{p = ((te))-1;}{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 18:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} colorize(ts, te, Qt::blue); }
	break;
	case 2:
	{{p = ((te))-1;}  }
	break;
	case 3:
	{{p = ((te))-1;} colorize(ts, te, Qt::darkRed); }
	break;
	case 8:
	{{p = ((te))-1;}  }
	break;
	}
	}
	break;
/* #line 681 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
		}
	}

_again:
	_acts = _llvmir_lexer_actions + _llvmir_lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 692 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _llvmir_lexer_eof_trans[cs] > 0 ) {
		_trans = _llvmir_lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 124 "D:/Prj/Ninja/axl/src/tests/JncQtTest/llvmirhighlighter.rl" */
}

int LlvmIrHighlighter::getRagelState(int blockState)
{
	switch (blockState)
	{
		case 1:
			return llvmir_lexer_en_main;
	}

	return llvmir_lexer_en_main;
}

//.............................................................................
