
/* #line 1 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
#include "pch.h"
#include "jancyhighlighter.h"
#include "moc_jancyhighlighter.cpp"

//.............................................................................


/* #line 2 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
static const char _jancy_lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 1, 21, 1, 22, 1, 
	23, 1, 24, 1, 25, 1, 26, 1, 
	27, 1, 28, 1, 29, 1, 30, 1, 
	31, 2, 2, 3, 2, 2, 4, 2, 
	2, 5, 2, 2, 6, 2, 2, 7, 
	2, 2, 8, 2, 2, 9
};

static const short _jancy_lexer_key_offsets[] = {
	0, 3, 6, 9, 16, 19, 54, 57, 
	60, 61, 62, 63, 66, 67, 69, 70, 
	74, 76, 77, 83, 90, 100, 108, 116, 
	124, 132, 140, 148, 156, 164, 172, 180, 
	188, 197, 205, 213, 223, 232, 240, 248, 
	256, 264, 272, 280, 288, 296, 304, 312, 
	320, 328, 336, 344, 352, 360, 372, 380, 
	388, 396, 404, 412, 420, 428, 436, 445, 
	453, 461, 469, 477, 485, 493, 502, 512, 
	520, 528, 536, 544, 552, 560, 568, 579, 
	587, 595, 603, 611, 619, 627, 635, 643, 
	651, 663, 671, 679, 687, 695, 703, 711, 
	719, 727, 735, 743, 751, 759, 768, 777, 
	785, 793, 801, 813, 821, 829, 837, 845, 
	853, 862, 870, 878, 886, 894, 902, 912, 
	920, 928, 936, 944, 952, 960, 968, 976, 
	984, 995, 1003, 1011, 1019, 1028, 1036, 1044, 
	1052, 1060, 1068, 1076, 1084, 1092, 1100, 1108, 
	1116, 1124, 1132, 1143, 1151, 1159, 1167, 1175, 
	1183, 1191, 1200, 1208, 1216, 1224, 1232, 1241, 
	1250, 1258, 1266, 1274, 1282, 1290, 1298, 1306, 
	1314, 1322, 1332, 1340, 1348, 1356, 1364, 1372, 
	1380, 1388, 1396, 1407, 1417, 1425, 1433, 1441, 
	1449, 1459, 1468, 1476, 1484, 1492, 1500, 1508, 
	1516, 1524, 1534, 1543, 1552, 1560, 1568, 1576, 
	1584, 1593, 1601, 1611, 1620, 1629, 1637, 1645, 
	1653, 1661, 1669, 1679, 1687, 1695, 1703, 1711, 
	1719, 1727, 1735, 1744, 1752, 1760, 1768, 1777, 
	1779
};

static const char _jancy_lexer_trans_keys[] = {
	10, 34, 92, 10, 34, 92, 10, 39, 
	92, 34, 48, 57, 65, 70, 97, 102, 
	10, 34, 92, 9, 10, 13, 32, 34, 
	36, 39, 47, 48, 95, 97, 98, 99, 
	100, 101, 102, 103, 104, 105, 109, 110, 
	111, 112, 114, 115, 116, 117, 118, 119, 
	49, 57, 65, 90, 106, 122, 9, 13, 
	32, 10, 34, 92, 10, 34, 10, 10, 
	39, 92, 10, 42, 47, 10, 88, 120, 
	48, 57, 48, 57, 10, 48, 57, 65, 
	70, 97, 102, 95, 48, 57, 65, 90, 
	97, 122, 95, 98, 108, 117, 48, 57, 
	65, 90, 97, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 101, 103, 48, 
	57, 65, 90, 97, 122, 95, 118, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 105, 111, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	103, 110, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	95, 97, 100, 104, 108, 111, 48, 57, 
	65, 90, 98, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 115, 116, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 101, 111, 
	48, 57, 65, 90, 97, 122, 95, 102, 
	108, 115, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 108, 110, 118, 120, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 97, 108, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	102, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 120, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 49, 51, 54, 56, 95, 112, 48, 
	57, 65, 90, 97, 122, 54, 95, 48, 
	57, 65, 90, 97, 122, 50, 95, 48, 
	57, 65, 90, 97, 122, 52, 95, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 108, 116, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 115, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	101, 117, 48, 57, 65, 90, 98, 122, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 119, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 98, 110, 112, 118, 48, 57, 65, 
	90, 97, 122, 95, 106, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 104, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 103, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 97, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	102, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	120, 48, 57, 65, 90, 97, 122, 95, 
	101, 111, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 112, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 118, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 121, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 98, 48, 57, 65, 90, 
	97, 122, 95, 99, 101, 108, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 118, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 101, 105, 116, 
	119, 48, 57, 65, 90, 97, 122, 95, 
	103, 108, 122, 48, 57, 65, 90, 97, 
	121, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 97, 100, 114, 48, 57, 65, 
	90, 98, 122, 95, 99, 116, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 104, 48, 57, 
	65, 90, 97, 122, 95, 104, 114, 121, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	110, 115, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 100, 111, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 104, 110, 115, 48, 57, 65, 
	90, 97, 122, 95, 105, 115, 48, 57, 
	65, 90, 97, 122, 95, 97, 105, 48, 
	57, 65, 90, 98, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 97, 105, 
	111, 48, 57, 65, 90, 98, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	117, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	105, 108, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 101, 104, 48, 57, 65, 90, 97, 
	122, 10, 42, 47, 0
};

static const char _jancy_lexer_single_lengths[] = {
	3, 3, 3, 1, 3, 29, 3, 3, 
	1, 1, 1, 3, 1, 2, 1, 2, 
	0, 1, 0, 1, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	3, 2, 2, 4, 3, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 6, 2, 2, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 3, 4, 2, 
	2, 2, 2, 2, 2, 2, 5, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	6, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 3, 2, 
	2, 2, 6, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	5, 2, 2, 2, 3, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 5, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 3, 3, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 5, 4, 2, 2, 2, 2, 
	4, 3, 2, 2, 2, 2, 2, 2, 
	2, 4, 3, 3, 2, 2, 2, 2, 
	3, 2, 4, 3, 3, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 3, 2, 
	1
};

static const char _jancy_lexer_range_lengths[] = {
	0, 0, 0, 3, 0, 3, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 0, 
	0
};

static const short _jancy_lexer_index_offsets[] = {
	0, 4, 8, 12, 17, 21, 54, 58, 
	62, 64, 66, 68, 72, 74, 77, 79, 
	83, 85, 87, 91, 96, 104, 110, 116, 
	122, 128, 134, 140, 146, 152, 158, 164, 
	170, 177, 183, 189, 197, 204, 210, 216, 
	222, 228, 234, 240, 246, 252, 258, 264, 
	270, 276, 282, 288, 294, 300, 310, 316, 
	322, 328, 334, 340, 346, 352, 358, 365, 
	371, 377, 383, 389, 395, 401, 408, 416, 
	422, 428, 434, 440, 446, 452, 458, 467, 
	473, 479, 485, 491, 497, 503, 509, 515, 
	521, 531, 537, 543, 549, 555, 561, 567, 
	573, 579, 585, 591, 597, 603, 610, 617, 
	623, 629, 635, 645, 651, 657, 663, 669, 
	675, 682, 688, 694, 700, 706, 712, 720, 
	726, 732, 738, 744, 750, 756, 762, 768, 
	774, 783, 789, 795, 801, 808, 814, 820, 
	826, 832, 838, 844, 850, 856, 862, 868, 
	874, 880, 886, 895, 901, 907, 913, 919, 
	925, 931, 938, 944, 950, 956, 962, 969, 
	976, 982, 988, 994, 1000, 1006, 1012, 1018, 
	1024, 1030, 1038, 1044, 1050, 1056, 1062, 1068, 
	1074, 1080, 1086, 1095, 1103, 1109, 1115, 1121, 
	1127, 1135, 1142, 1148, 1154, 1160, 1166, 1172, 
	1178, 1184, 1192, 1199, 1206, 1212, 1218, 1224, 
	1230, 1237, 1243, 1251, 1258, 1265, 1271, 1277, 
	1283, 1289, 1295, 1303, 1309, 1315, 1321, 1327, 
	1333, 1339, 1345, 1352, 1358, 1364, 1370, 1377, 
	1380
};

static const unsigned char _jancy_lexer_indicies[] = {
	2, 2, 3, 1, 5, 5, 6, 4, 
	2, 2, 8, 7, 10, 11, 11, 11, 
	9, 12, 12, 13, 10, 15, 16, 15, 
	15, 17, 18, 19, 20, 21, 23, 24, 
	25, 26, 27, 28, 29, 30, 31, 32, 
	33, 34, 35, 36, 37, 38, 39, 40, 
	41, 42, 22, 23, 23, 14, 15, 15, 
	15, 43, 2, 2, 3, 1, 45, 1, 
	4, 44, 46, 4, 2, 2, 8, 7, 
	45, 7, 47, 48, 44, 49, 48, 51, 
	51, 22, 50, 22, 50, 52, 10, 11, 
	11, 11, 53, 23, 23, 23, 23, 0, 
	23, 55, 56, 57, 23, 23, 23, 54, 
	23, 58, 23, 23, 23, 54, 23, 59, 
	23, 23, 23, 54, 23, 60, 23, 23, 
	23, 54, 23, 61, 23, 23, 23, 54, 
	23, 62, 23, 23, 23, 54, 23, 63, 
	23, 23, 23, 54, 23, 64, 23, 23, 
	23, 54, 23, 65, 23, 23, 23, 54, 
	23, 63, 23, 23, 23, 54, 23, 66, 
	23, 23, 23, 54, 23, 67, 23, 23, 
	23, 54, 23, 69, 30, 23, 23, 23, 
	68, 23, 63, 23, 23, 23, 54, 23, 
	62, 23, 23, 23, 54, 23, 70, 71, 
	72, 23, 23, 23, 54, 23, 73, 74, 
	23, 23, 23, 54, 23, 75, 23, 23, 
	23, 54, 23, 76, 23, 23, 23, 54, 
	23, 77, 23, 23, 23, 54, 23, 78, 
	23, 23, 23, 54, 23, 79, 23, 23, 
	23, 54, 23, 63, 23, 23, 23, 54, 
	23, 80, 23, 23, 23, 54, 23, 81, 
	23, 23, 23, 0, 23, 82, 23, 23, 
	23, 54, 23, 83, 23, 23, 23, 54, 
	23, 63, 23, 23, 23, 54, 23, 84, 
	23, 23, 23, 54, 23, 63, 23, 23, 
	23, 54, 23, 85, 23, 23, 23, 54, 
	23, 86, 23, 23, 23, 54, 23, 63, 
	23, 23, 23, 54, 23, 87, 88, 89, 
	90, 91, 23, 23, 23, 54, 23, 83, 
	23, 23, 23, 54, 23, 92, 23, 23, 
	23, 54, 23, 84, 23, 23, 23, 54, 
	23, 93, 23, 23, 23, 54, 23, 63, 
	23, 23, 23, 54, 23, 94, 23, 23, 
	23, 54, 23, 65, 23, 23, 23, 54, 
	23, 95, 23, 23, 23, 54, 23, 96, 
	97, 23, 23, 23, 54, 23, 98, 23, 
	23, 23, 54, 23, 99, 23, 23, 23, 
	0, 23, 61, 23, 23, 23, 54, 23, 
	100, 23, 23, 23, 54, 23, 101, 23, 
	23, 23, 54, 23, 83, 23, 23, 23, 
	54, 23, 102, 103, 23, 23, 23, 54, 
	23, 104, 105, 106, 23, 23, 23, 54, 
	23, 107, 23, 23, 23, 54, 23, 108, 
	23, 23, 23, 54, 23, 62, 23, 23, 
	23, 54, 23, 109, 23, 23, 23, 54, 
	23, 83, 23, 23, 23, 54, 23, 110, 
	23, 23, 23, 54, 23, 81, 23, 23, 
	23, 68, 23, 87, 111, 112, 113, 23, 
	23, 23, 54, 23, 114, 23, 23, 23, 
	54, 23, 115, 23, 23, 23, 54, 23, 
	63, 23, 23, 23, 0, 23, 116, 23, 
	23, 23, 54, 23, 62, 23, 23, 23, 
	54, 23, 117, 23, 23, 23, 54, 23, 
	118, 23, 23, 23, 54, 23, 119, 23, 
	23, 23, 54, 23, 63, 23, 23, 23, 
	54, 23, 120, 121, 93, 122, 123, 23, 
	23, 23, 54, 23, 87, 23, 23, 23, 
	54, 23, 124, 23, 23, 23, 54, 23, 
	62, 23, 23, 23, 54, 23, 117, 23, 
	23, 23, 54, 23, 125, 23, 23, 23, 
	54, 23, 126, 23, 23, 23, 54, 23, 
	127, 23, 23, 23, 54, 23, 128, 23, 
	23, 23, 54, 23, 79, 23, 23, 23, 
	54, 23, 129, 23, 23, 23, 54, 23, 
	130, 23, 23, 23, 54, 23, 63, 23, 
	23, 23, 54, 23, 63, 131, 23, 23, 
	23, 54, 23, 132, 133, 23, 23, 23, 
	54, 23, 134, 23, 23, 23, 54, 23, 
	135, 23, 23, 23, 54, 23, 119, 23, 
	23, 23, 54, 136, 137, 138, 63, 23, 
	139, 23, 23, 23, 68, 63, 23, 23, 
	23, 23, 54, 63, 23, 23, 23, 23, 
	54, 63, 23, 23, 23, 23, 54, 23, 
	93, 23, 23, 23, 54, 23, 140, 23, 
	23, 23, 54, 23, 141, 80, 23, 23, 
	23, 54, 23, 142, 23, 23, 23, 54, 
	23, 143, 23, 23, 23, 54, 23, 144, 
	23, 23, 23, 54, 23, 145, 23, 23, 
	23, 54, 23, 62, 23, 23, 23, 54, 
	23, 146, 147, 148, 23, 23, 23, 54, 
	23, 149, 23, 23, 23, 54, 23, 150, 
	23, 23, 23, 54, 23, 151, 23, 23, 
	23, 54, 23, 152, 23, 23, 23, 54, 
	23, 153, 23, 23, 23, 54, 23, 83, 
	23, 23, 23, 54, 23, 63, 23, 23, 
	23, 54, 23, 154, 23, 23, 23, 54, 
	23, 155, 23, 23, 23, 54, 23, 156, 
	157, 158, 159, 23, 23, 23, 54, 23, 
	160, 23, 23, 23, 54, 23, 61, 23, 
	23, 23, 54, 23, 161, 23, 23, 23, 
	54, 23, 63, 162, 23, 23, 23, 54, 
	23, 163, 23, 23, 23, 54, 23, 164, 
	23, 23, 23, 54, 23, 83, 23, 23, 
	23, 54, 23, 165, 23, 23, 23, 54, 
	23, 166, 23, 23, 23, 54, 23, 167, 
	23, 23, 23, 54, 23, 168, 23, 23, 
	23, 54, 23, 93, 23, 23, 23, 54, 
	23, 169, 23, 23, 23, 54, 23, 170, 
	23, 23, 23, 54, 23, 171, 23, 23, 
	23, 54, 23, 172, 23, 23, 23, 54, 
	23, 83, 23, 23, 23, 54, 23, 173, 
	174, 175, 176, 23, 23, 23, 54, 23, 
	86, 23, 23, 23, 54, 23, 177, 23, 
	23, 23, 54, 23, 178, 23, 23, 23, 
	54, 23, 179, 23, 23, 23, 54, 23, 
	180, 23, 23, 23, 54, 23, 63, 23, 
	23, 23, 54, 23, 181, 182, 23, 23, 
	23, 54, 23, 183, 23, 23, 23, 54, 
	23, 184, 23, 23, 23, 54, 23, 185, 
	23, 23, 23, 54, 23, 106, 23, 23, 
	23, 54, 23, 186, 187, 23, 23, 23, 
	54, 23, 188, 189, 23, 23, 23, 54, 
	23, 190, 23, 23, 23, 54, 23, 191, 
	23, 23, 23, 54, 23, 63, 23, 23, 
	23, 54, 23, 192, 23, 23, 23, 54, 
	23, 101, 23, 23, 23, 54, 23, 193, 
	23, 23, 23, 54, 23, 194, 23, 23, 
	23, 54, 23, 135, 23, 23, 23, 54, 
	23, 195, 23, 23, 23, 54, 23, 196, 
	197, 198, 23, 23, 23, 54, 23, 199, 
	23, 23, 23, 54, 23, 145, 23, 23, 
	23, 54, 23, 112, 23, 23, 23, 54, 
	23, 200, 23, 23, 23, 54, 23, 201, 
	23, 23, 23, 54, 23, 202, 23, 23, 
	23, 54, 23, 203, 23, 23, 23, 54, 
	23, 79, 23, 23, 23, 54, 23, 62, 
	204, 205, 206, 23, 23, 23, 54, 23, 
	207, 112, 208, 23, 23, 23, 54, 23, 
	135, 23, 23, 23, 54, 23, 209, 23, 
	23, 23, 54, 23, 210, 23, 23, 23, 
	54, 23, 63, 23, 23, 23, 54, 23, 
	211, 212, 99, 23, 23, 23, 54, 23, 
	86, 198, 23, 23, 23, 54, 23, 213, 
	23, 23, 23, 54, 23, 214, 23, 23, 
	23, 54, 23, 84, 23, 23, 23, 54, 
	23, 215, 23, 23, 23, 54, 23, 216, 
	23, 23, 23, 54, 23, 217, 23, 23, 
	23, 54, 23, 63, 23, 23, 23, 54, 
	23, 218, 101, 219, 23, 23, 23, 54, 
	23, 220, 221, 23, 23, 23, 54, 23, 
	63, 63, 23, 23, 23, 54, 23, 222, 
	23, 23, 23, 54, 23, 119, 23, 23, 
	23, 54, 23, 223, 23, 23, 23, 54, 
	23, 224, 23, 23, 23, 54, 23, 225, 
	210, 23, 23, 23, 54, 23, 210, 23, 
	23, 23, 54, 23, 31, 226, 227, 23, 
	23, 23, 54, 23, 128, 228, 23, 23, 
	23, 54, 23, 229, 230, 23, 23, 23, 
	54, 23, 83, 23, 23, 23, 54, 23, 
	207, 23, 23, 23, 54, 23, 231, 23, 
	23, 23, 54, 23, 232, 23, 23, 23, 
	54, 23, 63, 23, 23, 23, 54, 23, 
	233, 234, 235, 23, 23, 23, 54, 23, 
	236, 23, 23, 23, 54, 23, 237, 23, 
	23, 23, 54, 23, 116, 23, 23, 23, 
	54, 23, 238, 23, 23, 23, 54, 23, 
	239, 23, 23, 23, 54, 23, 240, 23, 
	23, 23, 54, 23, 84, 23, 23, 23, 
	54, 23, 119, 241, 23, 23, 23, 54, 
	23, 242, 23, 23, 23, 54, 23, 243, 
	23, 23, 23, 54, 23, 82, 23, 23, 
	23, 54, 23, 85, 243, 23, 23, 23, 
	54, 245, 246, 244, 248, 247, 0
};

static const unsigned char _jancy_lexer_trans_targs[] = {
	5, 0, 5, 8, 1, 5, 10, 2, 
	12, 5, 4, 18, 5, 17, 5, 6, 
	5, 7, 9, 11, 13, 15, 16, 19, 
	20, 35, 53, 69, 78, 88, 34, 98, 
	101, 111, 118, 128, 146, 174, 178, 193, 
	202, 210, 222, 5, 5, 5, 5, 5, 
	14, 5, 5, 3, 5, 5, 5, 21, 
	27, 30, 22, 23, 24, 25, 26, 19, 
	28, 29, 31, 32, 5, 33, 36, 48, 
	50, 37, 43, 38, 39, 40, 41, 42, 
	44, 45, 46, 47, 49, 51, 52, 54, 
	55, 57, 59, 61, 56, 58, 60, 62, 
	63, 66, 64, 65, 67, 68, 70, 77, 
	71, 74, 76, 72, 73, 75, 64, 79, 
	82, 84, 80, 81, 83, 85, 86, 87, 
	89, 90, 92, 93, 91, 94, 95, 96, 
	97, 99, 100, 102, 103, 106, 104, 105, 
	107, 108, 109, 110, 112, 113, 114, 115, 
	116, 117, 119, 125, 126, 120, 121, 122, 
	123, 124, 127, 44, 129, 131, 136, 141, 
	130, 132, 133, 134, 135, 137, 138, 139, 
	140, 142, 143, 144, 145, 147, 148, 153, 
	168, 149, 150, 151, 152, 154, 158, 155, 
	156, 157, 159, 165, 160, 163, 161, 162, 
	164, 166, 167, 169, 170, 172, 173, 171, 
	81, 175, 176, 177, 179, 184, 189, 180, 
	181, 182, 183, 185, 186, 187, 188, 190, 
	191, 192, 194, 198, 195, 196, 197, 199, 
	200, 201, 203, 207, 204, 205, 206, 208, 
	209, 211, 214, 218, 212, 213, 215, 216, 
	217, 219, 220, 221, 223, 223, 224, 223, 
	223
};

static const char _jancy_lexer_trans_actions[] = {
	39, 0, 5, 55, 0, 9, 64, 0, 
	55, 37, 0, 0, 7, 61, 15, 0, 
	13, 67, 67, 67, 0, 58, 0, 52, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 33, 35, 21, 29, 11, 
	0, 31, 23, 0, 27, 25, 19, 0, 
	0, 0, 0, 0, 0, 0, 0, 49, 
	0, 0, 0, 0, 17, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	52, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 49, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 52, 0, 
	0, 0, 0, 49, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 49, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	52, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 43, 41, 0, 47, 
	45
};

static const char _jancy_lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0
};

static const char _jancy_lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 3, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 3, 
	0
};

static const short _jancy_lexer_eof_trans[] = {
	1, 1, 1, 10, 1, 0, 44, 45, 
	46, 45, 47, 45, 46, 45, 50, 51, 
	51, 53, 54, 1, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	69, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 1, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	1, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 69, 55, 55, 
	55, 1, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 69, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 0, 
	248
};

static const int jancy_lexer_start = 5;
static const int jancy_lexer_first_final = 5;
static const int jancy_lexer_error = -1;

static const int jancy_lexer_en_main = 5;
static const int jancy_lexer_en_comment = 223;


/* #line 170 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */


//.............................................................................

#define BLOCK_STATE_NONE	0
#define BLOCK_STATE_COMMENT 1

void JancyHighlighter::ragelInit()
{
	
/* #line 717 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
	{
	cs = jancy_lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 180 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
}

void JancyHighlighter::ragelExec()
{
	
/* #line 723 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _jancy_lexer_actions + _jancy_lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 740 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
		}
	}

	_keys = _jancy_lexer_trans_keys + _jancy_lexer_key_offsets[cs];
	_trans = _jancy_lexer_index_offsets[cs];

	_klen = _jancy_lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _jancy_lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _jancy_lexer_indicies[_trans];
_eof_trans:
	cs = _jancy_lexer_trans_targs[_trans];

	if ( _jancy_lexer_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _jancy_lexer_actions + _jancy_lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 3:
/* #line 136 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 1;}
	break;
	case 4:
/* #line 140 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 2;}
	break;
	case 5:
/* #line 141 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 3;}
	break;
	case 6:
/* #line 142 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 4;}
	break;
	case 7:
/* #line 144 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 6;}
	break;
	case 8:
/* #line 145 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 7;}
	break;
	case 9:
/* #line 153 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{act = 11;}
	break;
	case 10:
/* #line 141 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 11:
/* #line 144 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 12:
/* #line 145 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 13:
/* #line 149 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkGreen); {cs = 223; goto _again;} }}
	break;
	case 14:
/* #line 151 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;}
	break;
	case 15:
/* #line 153 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{  }}
	break;
	case 16:
/* #line 136 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::blue); }}
	break;
	case 17:
/* #line 140 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{  }}
	break;
	case 18:
/* #line 141 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 19:
/* #line 142 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 20:
/* #line 143 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 21:
/* #line 144 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 22:
/* #line 145 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 23:
/* #line 147 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkGreen); }}
	break;
	case 24:
/* #line 151 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;}
	break;
	case 25:
/* #line 153 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{  }}
	break;
	case 26:
/* #line 142 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{{p = ((te))-1;}{ colorize(ts, te, Qt::darkRed); }}
	break;
	case 27:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} colorize(ts, te, Qt::blue); }
	break;
	case 2:
	{{p = ((te))-1;}  }
	break;
	case 3:
	{{p = ((te))-1;} colorize(ts, te, Qt::darkRed); }
	break;
	case 4:
	{{p = ((te))-1;} colorize(ts, te, Qt::darkRed); }
	break;
	case 6:
	{{p = ((te))-1;} colorize(ts, te, Qt::darkRed); }
	break;
	case 7:
	{{p = ((te))-1;} colorize(ts, te, Qt::darkRed); }
	break;
	case 11:
	{{p = ((te))-1;}  }
	break;
	}
	}
	break;
	case 28:
/* #line 164 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkGreen); }}
	break;
	case 29:
/* #line 165 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkGreen); }}
	break;
	case 30:
/* #line 166 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p+1;{ colorize(ts, te, Qt::darkGreen); {cs = 5; goto _again;} }}
	break;
	case 31:
/* #line 165 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
	{te = p;p--;{ colorize(ts, te, Qt::darkGreen); }}
	break;
/* #line 918 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
		}
	}

_again:
	_acts = _jancy_lexer_actions + _jancy_lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 929 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _jancy_lexer_eof_trans[cs] > 0 ) {
		_trans = _jancy_lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 185 "D:/Prj/Ninja/axl/src/tests/JncQtTest/jancyhighlighter.rl" */
}

int JancyHighlighter::getRagelState(int blockState)
{
	switch (blockState)
	{
		case 1:
			return jancy_lexer_en_comment;
	}

	return jancy_lexer_en_main;
}

void JancyHighlighter::ragelExecPreEvent(int &ragelState)
{
	setCurrentBlockState(BLOCK_STATE_NONE);

	if (previousBlockState() == BLOCK_STATE_COMMENT)
		ragelState = jancy_lexer_en_comment;
}

void JancyHighlighter::ragelExecPostEvent(int ragelState)
{
	if (ragelState == jancy_lexer_en_comment)
		setCurrentBlockState(BLOCK_STATE_COMMENT);
}

//.............................................................................
