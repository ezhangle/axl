//.............................................................................

global_declaration
	: namespace_declaration
	| using_declaration 
	| common_declaration
	| compound_statement_1st_pass
	| ';'
	;

local_declaration
	: using_declaration 
	| common_declaration
	| statement
	;

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

pragma
pragma_pack
	: '#' EToken_Pack pack_value
	;

pack_value
	: EToken_Integer
	| EToken_Default
	;

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

class
{
	CQualifiedIdentifier m_Identifier;
}
qualified_identifier
	: EToken_Identifier             
		{  
			$.m_Identifier.m_First = $1.m_Data.m_String; 
		}
	  ('.' EToken_Identifier $id2
		{ 
			$.m_Identifier.m_List.InsertTail ($id2.m_Data.m_String);
		}
	  )*
	; 

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

class
{
	CType* m_pType;
}
type_name
	local
	{	
		CDeclarator $Declarator;
	}
	: type_specifier_modifier_list
	  pointer <&$Declarator>* 
	  declarator_suffix <&$Declarator>*
	;

//.............................................................................

