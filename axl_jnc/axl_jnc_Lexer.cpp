
/* #line 1 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
#include "stdafx.h"
#include "axl_jnc_Lexer.h"

// warning C4065: switch statement contains 'default' but no 'case' labels

#pragma warning (disable: 4065)

namespace axl {
namespace jnc {

//.............................................................................


/* #line 2 "axl_jnc_Lexer.cpp" */
static const unsigned char _axl_jnc_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 94, 1, 95, 1, 96, 1, 
	97, 1, 98, 1, 99, 1, 100, 1, 
	101, 1, 102, 1, 103, 1, 104, 1, 
	105, 1, 106, 1, 107, 1, 108, 1, 
	109, 1, 110, 1, 111, 1, 112, 1, 
	113, 1, 114, 1, 115, 1, 116, 1, 
	117, 1, 118, 1, 120, 1, 121, 1, 
	122, 1, 123, 1, 124, 1, 125, 1, 
	126, 1, 127, 1, 128, 1, 129, 1, 
	130, 1, 131, 1, 132, 1, 133, 1, 
	134, 1, 135, 1, 136, 1, 137, 1, 
	138, 2, 0, 116, 2, 0, 117, 2, 
	0, 119, 2, 3, 4, 2, 3, 5, 
	2, 3, 6, 2, 3, 7, 2, 3, 
	8, 2, 3, 9, 2, 3, 10, 2, 
	3, 11, 2, 3, 12, 2, 3, 13, 
	2, 3, 14, 2, 3, 15, 2, 3, 
	16, 2, 3, 17, 2, 3, 18, 2, 
	3, 19, 2, 3, 20, 2, 3, 21, 
	2, 3, 22, 2, 3, 23, 2, 3, 
	24, 2, 3, 25, 2, 3, 26, 2, 
	3, 27, 2, 3, 28, 2, 3, 29, 
	2, 3, 30, 2, 3, 31, 2, 3, 
	32, 2, 3, 33, 2, 3, 34, 2, 
	3, 35, 2, 3, 36, 2, 3, 37, 
	2, 3, 38, 2, 3, 39, 2, 3, 
	40, 2, 3, 41, 2, 3, 42, 2, 
	3, 43, 2, 3, 44, 2, 3, 45, 
	2, 3, 46, 2, 3, 47, 2, 3, 
	48, 2, 3, 49, 2, 3, 50, 2, 
	3, 51, 2, 3, 52, 2, 3, 53, 
	2, 3, 54, 2, 3, 55, 2, 3, 
	56, 2, 3, 57, 2, 3, 58, 2, 
	3, 59, 2, 3, 60, 2, 3, 61, 
	2, 3, 62, 2, 3, 63, 2, 3, 
	64, 2, 3, 65, 2, 3, 66, 2, 
	3, 67, 2, 3, 68, 2, 3, 69, 
	2, 3, 70, 2, 3, 71, 2, 3, 
	72, 2, 3, 73, 2, 3, 74, 2, 
	3, 75, 2, 3, 76, 2, 3, 77, 
	2, 3, 78, 2, 3, 79, 2, 3, 
	80, 2, 3, 81, 2, 3, 82, 2, 
	3, 83, 2, 3, 84, 2, 3, 85, 
	2, 3, 86, 2, 3, 87, 2, 3, 
	88, 2, 3, 89, 2, 3, 90, 2, 
	3, 91, 2, 3, 92, 2, 3, 93
	
};

static const short _axl_jnc_key_offsets[] = {
	0, 3, 6, 7, 9, 12, 14, 20, 
	70, 73, 74, 77, 78, 79, 81, 84, 
	85, 86, 88, 91, 92, 95, 96, 101, 
	103, 106, 112, 113, 115, 116, 117, 119, 
	120, 121, 128, 137, 144, 145, 153, 161, 
	169, 178, 186, 194, 202, 212, 221, 229, 
	237, 245, 253, 261, 269, 277, 285, 293, 
	301, 309, 317, 325, 333, 341, 349, 361, 
	369, 377, 385, 393, 401, 409, 417, 426, 
	434, 442, 450, 458, 466, 474, 482, 491, 
	499, 507, 515, 523, 531, 541, 549, 557, 
	565, 573, 581, 589, 597, 605, 613, 621, 
	629, 637, 645, 653, 666, 674, 682, 691, 
	699, 707, 715, 723, 731, 739, 747, 755, 
	763, 771, 779, 787, 799, 807, 815, 823, 
	831, 839, 847, 855, 863, 871, 879, 887, 
	895, 903, 911, 919, 927, 935, 943, 951, 
	959, 967, 975, 984, 993, 1001, 1009, 1017, 
	1025, 1038, 1046, 1054, 1062, 1070, 1078, 1086, 
	1094, 1102, 1110, 1118, 1127, 1135, 1143, 1151, 
	1159, 1167, 1175, 1183, 1191, 1199, 1207, 1215, 
	1223, 1231, 1240, 1248, 1256, 1264, 1272, 1280, 
	1288, 1296, 1304, 1312, 1320, 1331, 1339, 1347, 
	1355, 1363, 1371, 1379, 1387, 1395, 1404, 1412, 
	1420, 1428, 1436, 1444, 1452, 1460, 1468, 1476, 
	1484, 1492, 1502, 1510, 1518, 1526, 1534, 1542, 
	1550, 1558, 1566, 1574, 1582, 1590, 1598, 1606, 
	1614, 1622, 1630, 1641, 1649, 1657, 1665, 1673, 
	1681, 1689, 1697, 1706, 1714, 1722, 1730, 1738, 
	1746, 1754, 1762, 1770, 1778, 1787, 1796, 1804, 
	1812, 1820, 1828, 1836, 1844, 1852, 1860, 1868, 
	1876, 1884, 1892, 1900, 1908, 1916, 1924, 1932, 
	1941, 1949, 1957, 1965, 1973, 1981, 1989, 1997, 
	2005, 2019, 2027, 2035, 2043, 2051, 2059, 2067, 
	2076, 2084, 2092, 2100, 2108, 2116, 2124, 2132, 
	2140, 2148, 2156, 2164, 2172, 2182, 2191, 2199, 
	2207, 2215, 2223, 2231, 2239, 2247, 2256, 2264, 
	2272, 2280, 2288, 2296, 2304, 2312, 2320, 2330, 
	2338, 2347, 2355, 2363, 2371, 2379, 2388, 2396, 
	2404, 2412, 2421, 2430, 2438, 2446, 2455, 2463, 
	2471, 2479, 2487, 2495, 2503, 2511, 2519, 2527, 
	2537, 2545, 2553, 2561, 2569, 2577, 2585, 2593, 
	2601, 2609, 2617, 2626, 2634, 2642, 2650, 2658, 
	2666, 2674, 2684, 2692, 2700, 2708, 2715, 2723, 
	2731, 2739, 2747, 2755, 2763
};

static const char _axl_jnc_trans_keys[] = {
	10, 34, 92, 10, 39, 92, 46, 10, 
	42, 10, 42, 47, 48, 57, 48, 57, 
	65, 70, 97, 102, 9, 10, 13, 32, 
	33, 34, 37, 38, 39, 42, 43, 45, 
	46, 47, 48, 58, 60, 61, 62, 64, 
	69, 94, 95, 97, 98, 99, 100, 101, 
	102, 103, 104, 105, 108, 109, 110, 111, 
	112, 114, 115, 116, 117, 118, 119, 124, 
	49, 57, 65, 90, 106, 122, 9, 13, 
	32, 61, 10, 34, 92, 10, 61, 38, 
	61, 10, 39, 92, 10, 61, 43, 61, 
	45, 61, 62, 46, 42, 47, 61, 10, 
	46, 88, 120, 48, 57, 48, 57, 46, 
	48, 57, 48, 57, 65, 70, 97, 102, 
	61, 60, 61, 61, 61, 61, 62, 61, 
	61, 95, 48, 57, 65, 90, 97, 122, 
	43, 45, 95, 48, 57, 65, 90, 97, 
	122, 95, 48, 57, 65, 90, 97, 122, 
	61, 95, 117, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 101, 103, 48, 57, 65, 90, 
	97, 122, 95, 118, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 105, 111, 114, 48, 57, 
	65, 90, 97, 122, 95, 103, 110, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 98, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 107, 48, 
	57, 65, 90, 97, 122, 95, 97, 100, 
	104, 108, 111, 48, 57, 65, 90, 98, 
	122, 95, 115, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 97, 111, 48, 57, 65, 90, 
	98, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 117, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 110, 48, 57, 65, 90, 
	97, 122, 95, 115, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 101, 111, 121, 48, 
	57, 65, 90, 97, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 98, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 109, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 99, 48, 
	57, 65, 90, 97, 122, 43, 45, 95, 
	108, 110, 118, 120, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 100, 117, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 97, 108, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	102, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 120, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 49, 51, 54, 56, 95, 101, 112, 
	48, 57, 65, 90, 97, 122, 54, 95, 
	48, 57, 65, 90, 97, 122, 50, 95, 
	48, 57, 65, 90, 97, 122, 52, 95, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 102, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	103, 48, 57, 65, 90, 97, 122, 95, 
	117, 48, 57, 65, 90, 97, 122, 95, 
	108, 116, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 97, 101, 111, 117, 48, 57, 65, 
	90, 98, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 112, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 119, 48, 57, 65, 
	90, 97, 122, 95, 110, 118, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 98, 110, 112, 
	48, 57, 65, 90, 97, 122, 95, 106, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 99, 
	48, 57, 65, 90, 97, 122, 95, 104, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 110, 
	48, 57, 65, 90, 97, 122, 95, 103, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	111, 114, 117, 48, 57, 65, 90, 98, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 107, 48, 57, 65, 90, 97, 
	122, 95, 115, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 120, 48, 57, 65, 90, 97, 
	122, 95, 101, 111, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 111, 48, 57, 65, 90, 
	97, 122, 95, 110, 48, 57, 65, 90, 
	97, 122, 95, 115, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 117, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 112, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 118, 48, 57, 
	65, 90, 97, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 121, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 98, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 97, 116, 48, 
	57, 65, 90, 98, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 108, 48, 
	57, 65, 90, 97, 122, 95, 121, 48, 
	57, 65, 90, 97, 122, 95, 117, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 97, 101, 
	104, 105, 110, 116, 119, 48, 57, 65, 
	90, 98, 122, 95, 102, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 103, 122, 48, 57, 
	65, 90, 97, 121, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 100, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 102, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 112, 48, 57, 
	65, 90, 97, 122, 95, 115, 48, 57, 
	65, 90, 97, 122, 95, 104, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 97, 100, 114, 
	48, 57, 65, 90, 98, 122, 95, 99, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	107, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	111, 117, 48, 57, 65, 90, 97, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 103, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 104, 48, 57, 65, 90, 97, 122, 
	95, 104, 114, 121, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 110, 115, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 112, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 100, 111, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 102, 48, 57, 
	65, 90, 97, 122, 95, 102, 48, 57, 
	65, 90, 97, 122, 95, 110, 115, 48, 
	57, 65, 90, 97, 122, 95, 105, 115, 
	48, 57, 65, 90, 97, 122, 95, 111, 
	48, 57, 65, 90, 97, 122, 95, 110, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	105, 48, 57, 65, 90, 98, 122, 95, 
	102, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	103, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	103, 48, 57, 65, 90, 97, 122, 95, 
	97, 105, 111, 48, 57, 65, 90, 98, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 117, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 105, 108, 48, 57, 65, 90, 
	97, 122, 95, 100, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 99, 101, 104, 48, 57, 
	65, 90, 97, 122, 95, 104, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 114, 48, 57, 
	65, 90, 97, 122, 95, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 107, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 61, 124, 0
};

static const char _axl_jnc_single_lengths[] = {
	3, 3, 1, 2, 3, 0, 0, 44, 
	3, 1, 3, 1, 1, 2, 3, 1, 
	1, 2, 3, 1, 3, 1, 3, 0, 
	1, 0, 1, 2, 1, 1, 2, 1, 
	1, 1, 3, 1, 1, 2, 2, 2, 
	3, 2, 2, 2, 4, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 6, 2, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 7, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 6, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 3, 2, 2, 2, 2, 
	7, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 5, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 5, 2, 2, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 3, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 3, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	8, 2, 2, 2, 2, 2, 2, 3, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 4, 3, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	3, 2, 2, 2, 2, 3, 2, 2, 
	2, 3, 3, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 1, 2, 2, 
	2, 2, 2, 2, 2
};

static const char _axl_jnc_range_lengths[] = {
	0, 0, 0, 0, 0, 1, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 3, 0, 0, 0, 0, 0, 0, 
	0, 3, 3, 3, 0, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 0
};

static const short _axl_jnc_index_offsets[] = {
	0, 4, 8, 10, 13, 17, 19, 23, 
	71, 75, 77, 81, 83, 85, 88, 92, 
	94, 96, 99, 103, 105, 109, 111, 116, 
	118, 121, 125, 127, 130, 132, 134, 137, 
	139, 141, 146, 153, 158, 160, 166, 172, 
	178, 185, 191, 197, 203, 211, 218, 224, 
	230, 236, 242, 248, 254, 260, 266, 272, 
	278, 284, 290, 296, 302, 308, 314, 324, 
	330, 336, 342, 348, 354, 360, 366, 373, 
	379, 385, 391, 397, 403, 409, 415, 422, 
	428, 434, 440, 446, 452, 460, 466, 472, 
	478, 484, 490, 496, 502, 508, 514, 520, 
	526, 532, 538, 544, 555, 561, 567, 574, 
	580, 586, 592, 598, 604, 610, 616, 622, 
	628, 634, 640, 646, 656, 662, 668, 674, 
	680, 686, 692, 698, 704, 710, 716, 722, 
	728, 734, 740, 746, 752, 758, 764, 770, 
	776, 782, 788, 795, 802, 808, 814, 820, 
	826, 837, 843, 849, 855, 861, 867, 873, 
	879, 885, 891, 897, 904, 910, 916, 922, 
	928, 934, 940, 946, 952, 958, 964, 970, 
	976, 982, 989, 995, 1001, 1007, 1013, 1019, 
	1025, 1031, 1037, 1043, 1049, 1058, 1064, 1070, 
	1076, 1082, 1088, 1094, 1100, 1106, 1113, 1119, 
	1125, 1131, 1137, 1143, 1149, 1155, 1161, 1167, 
	1173, 1179, 1187, 1193, 1199, 1205, 1211, 1217, 
	1223, 1229, 1235, 1241, 1247, 1253, 1259, 1265, 
	1271, 1277, 1283, 1292, 1298, 1304, 1310, 1316, 
	1322, 1328, 1334, 1341, 1347, 1353, 1359, 1365, 
	1371, 1377, 1383, 1389, 1395, 1402, 1409, 1415, 
	1421, 1427, 1433, 1439, 1445, 1451, 1457, 1463, 
	1469, 1475, 1481, 1487, 1493, 1499, 1505, 1511, 
	1518, 1524, 1530, 1536, 1542, 1548, 1554, 1560, 
	1566, 1578, 1584, 1590, 1596, 1602, 1608, 1614, 
	1621, 1627, 1633, 1639, 1645, 1651, 1657, 1663, 
	1669, 1675, 1681, 1687, 1693, 1701, 1708, 1714, 
	1720, 1726, 1732, 1738, 1744, 1750, 1757, 1763, 
	1769, 1775, 1781, 1787, 1793, 1799, 1805, 1813, 
	1819, 1826, 1832, 1838, 1844, 1850, 1857, 1863, 
	1869, 1875, 1882, 1889, 1895, 1901, 1908, 1914, 
	1920, 1926, 1932, 1938, 1944, 1950, 1956, 1962, 
	1970, 1976, 1982, 1988, 1994, 2000, 2006, 2012, 
	2018, 2024, 2030, 2037, 2043, 2049, 2055, 2061, 
	2067, 2073, 2081, 2087, 2093, 2099, 2104, 2110, 
	2116, 2122, 2128, 2134, 2140
};

static const short _axl_jnc_indicies[] = {
	2, 3, 4, 1, 6, 7, 8, 5, 
	10, 9, 12, 13, 11, 12, 13, 14, 
	11, 15, 0, 17, 17, 17, 16, 19, 
	20, 19, 19, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 30, 31, 33, 34, 
	35, 36, 37, 39, 40, 38, 41, 42, 
	43, 44, 45, 46, 47, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 58, 
	59, 60, 61, 32, 38, 38, 18, 19, 
	19, 19, 62, 64, 63, 2, 3, 4, 
	1, 65, 1, 66, 63, 67, 68, 63, 
	6, 7, 8, 5, 69, 5, 70, 63, 
	71, 72, 63, 73, 74, 75, 63, 76, 
	63, 11, 77, 78, 63, 79, 77, 81, 
	82, 82, 32, 80, 15, 83, 81, 32, 
	80, 17, 17, 17, 84, 85, 63, 86, 
	87, 63, 89, 88, 90, 63, 91, 92, 
	63, 94, 93, 95, 63, 38, 38, 38, 
	38, 0, 81, 81, 38, 97, 38, 38, 
	96, 38, 97, 38, 38, 96, 98, 63, 
	38, 99, 38, 38, 38, 96, 38, 100, 
	38, 38, 38, 96, 38, 101, 38, 38, 
	38, 96, 38, 103, 104, 38, 38, 38, 
	102, 38, 105, 38, 38, 38, 96, 38, 
	106, 38, 38, 38, 96, 38, 107, 38, 
	38, 38, 96, 38, 108, 109, 110, 38, 
	38, 38, 96, 38, 111, 112, 38, 38, 
	38, 96, 38, 113, 38, 38, 38, 96, 
	38, 114, 38, 38, 38, 96, 38, 115, 
	38, 38, 38, 96, 38, 116, 38, 38, 
	38, 96, 38, 117, 38, 38, 38, 96, 
	38, 118, 38, 38, 38, 96, 38, 119, 
	38, 38, 38, 96, 38, 120, 38, 38, 
	38, 96, 38, 121, 38, 38, 38, 96, 
	38, 122, 38, 38, 38, 96, 38, 123, 
	38, 38, 38, 96, 38, 124, 38, 38, 
	38, 96, 38, 125, 38, 38, 38, 96, 
	38, 126, 38, 38, 38, 96, 38, 127, 
	38, 38, 38, 96, 38, 128, 38, 38, 
	38, 96, 38, 129, 130, 131, 132, 133, 
	38, 38, 38, 96, 38, 134, 38, 38, 
	38, 96, 38, 135, 38, 38, 38, 96, 
	38, 136, 38, 38, 38, 96, 38, 137, 
	38, 38, 38, 96, 38, 138, 38, 38, 
	38, 96, 38, 139, 38, 38, 38, 96, 
	38, 140, 38, 38, 38, 96, 38, 141, 
	142, 38, 38, 38, 96, 38, 143, 38, 
	38, 38, 96, 38, 144, 38, 38, 38, 
	96, 38, 145, 38, 38, 38, 96, 38, 
	146, 38, 38, 38, 96, 38, 147, 38, 
	38, 38, 96, 38, 148, 38, 38, 38, 
	96, 38, 149, 38, 38, 38, 96, 38, 
	150, 151, 38, 38, 38, 96, 38, 152, 
	38, 38, 38, 96, 38, 153, 38, 38, 
	38, 96, 38, 154, 38, 38, 38, 96, 
	38, 155, 38, 38, 38, 96, 38, 156, 
	38, 38, 38, 96, 38, 157, 158, 159, 
	38, 38, 38, 96, 38, 160, 38, 38, 
	38, 96, 38, 161, 38, 38, 38, 96, 
	38, 162, 38, 38, 38, 96, 38, 163, 
	38, 38, 38, 96, 38, 164, 38, 38, 
	38, 96, 38, 166, 38, 38, 38, 165, 
	38, 167, 38, 38, 38, 96, 38, 168, 
	38, 38, 38, 96, 38, 169, 38, 38, 
	38, 96, 38, 170, 38, 38, 38, 96, 
	38, 171, 38, 38, 38, 96, 38, 172, 
	38, 38, 38, 96, 38, 173, 38, 38, 
	38, 96, 38, 174, 38, 38, 38, 96, 
	81, 81, 38, 175, 176, 177, 178, 97, 
	38, 38, 96, 38, 179, 38, 38, 38, 
	96, 38, 180, 38, 38, 38, 96, 38, 
	181, 182, 38, 38, 38, 96, 38, 183, 
	38, 38, 38, 96, 38, 184, 38, 38, 
	38, 96, 38, 185, 38, 38, 38, 96, 
	38, 186, 38, 38, 38, 96, 38, 188, 
	38, 38, 38, 187, 38, 189, 38, 38, 
	38, 96, 38, 190, 38, 38, 38, 96, 
	38, 191, 38, 38, 38, 96, 38, 192, 
	38, 38, 38, 96, 38, 193, 38, 38, 
	38, 96, 38, 194, 38, 38, 38, 96, 
	38, 195, 38, 38, 38, 96, 38, 196, 
	197, 198, 199, 200, 38, 38, 38, 96, 
	38, 201, 38, 38, 38, 96, 38, 202, 
	38, 38, 38, 96, 38, 203, 38, 38, 
	38, 96, 38, 204, 38, 38, 38, 96, 
	38, 205, 38, 38, 38, 96, 38, 206, 
	38, 38, 38, 96, 38, 207, 38, 38, 
	38, 96, 38, 208, 38, 38, 38, 96, 
	38, 209, 38, 38, 38, 96, 38, 210, 
	38, 38, 38, 96, 38, 211, 38, 38, 
	38, 96, 38, 212, 38, 38, 38, 96, 
	38, 213, 38, 38, 38, 96, 38, 214, 
	38, 38, 38, 96, 38, 215, 38, 38, 
	38, 96, 38, 216, 38, 38, 38, 96, 
	38, 217, 38, 38, 38, 96, 38, 218, 
	38, 38, 38, 96, 38, 219, 38, 38, 
	38, 96, 38, 220, 38, 38, 38, 96, 
	38, 221, 38, 38, 38, 96, 38, 222, 
	38, 38, 38, 96, 38, 223, 224, 38, 
	38, 38, 96, 38, 225, 226, 38, 38, 
	38, 96, 38, 227, 38, 38, 38, 96, 
	38, 228, 38, 38, 38, 96, 38, 229, 
	38, 38, 38, 96, 38, 230, 38, 38, 
	38, 96, 232, 233, 234, 235, 38, 236, 
	237, 38, 38, 38, 231, 238, 38, 38, 
	38, 38, 96, 239, 38, 38, 38, 38, 
	96, 240, 38, 38, 38, 38, 96, 38, 
	241, 38, 38, 38, 96, 38, 242, 38, 
	38, 38, 96, 38, 243, 38, 38, 38, 
	96, 38, 244, 38, 38, 38, 96, 38, 
	245, 38, 38, 38, 96, 38, 246, 38, 
	38, 38, 96, 38, 247, 38, 38, 38, 
	96, 38, 248, 249, 38, 38, 38, 96, 
	38, 250, 38, 38, 38, 96, 38, 251, 
	38, 38, 38, 96, 38, 252, 38, 38, 
	38, 96, 38, 253, 38, 38, 38, 96, 
	38, 254, 38, 38, 38, 96, 38, 255, 
	38, 38, 38, 96, 38, 256, 38, 38, 
	38, 96, 38, 257, 38, 38, 38, 96, 
	38, 258, 38, 38, 38, 96, 38, 259, 
	38, 38, 38, 96, 38, 260, 38, 38, 
	38, 96, 38, 261, 38, 38, 38, 96, 
	38, 262, 38, 38, 38, 96, 38, 263, 
	264, 38, 38, 38, 96, 38, 265, 38, 
	38, 38, 96, 38, 266, 38, 38, 38, 
	96, 38, 267, 38, 38, 38, 96, 38, 
	268, 38, 38, 38, 96, 38, 269, 38, 
	38, 38, 96, 38, 270, 38, 38, 38, 
	96, 38, 271, 38, 38, 38, 96, 38, 
	272, 38, 38, 38, 96, 38, 273, 38, 
	38, 38, 96, 38, 274, 38, 38, 38, 
	96, 38, 275, 276, 277, 278, 38, 38, 
	38, 96, 38, 279, 38, 38, 38, 96, 
	38, 280, 38, 38, 38, 96, 38, 281, 
	38, 38, 38, 96, 38, 282, 38, 38, 
	38, 96, 38, 283, 38, 38, 38, 96, 
	38, 284, 38, 38, 38, 96, 38, 285, 
	38, 38, 38, 96, 38, 286, 38, 38, 
	38, 96, 38, 287, 288, 38, 38, 38, 
	96, 38, 289, 38, 38, 38, 96, 38, 
	290, 38, 38, 38, 96, 38, 291, 38, 
	38, 38, 96, 38, 292, 38, 38, 38, 
	96, 38, 293, 38, 38, 38, 96, 38, 
	294, 38, 38, 38, 96, 38, 295, 38, 
	38, 38, 96, 38, 296, 38, 38, 38, 
	96, 38, 297, 38, 38, 38, 96, 38, 
	298, 38, 38, 38, 96, 38, 299, 38, 
	38, 38, 96, 38, 300, 301, 302, 38, 
	38, 38, 96, 38, 303, 38, 38, 38, 
	96, 38, 304, 38, 38, 38, 96, 38, 
	305, 38, 38, 38, 96, 38, 306, 38, 
	38, 38, 96, 38, 307, 38, 38, 38, 
	96, 38, 308, 38, 38, 38, 96, 38, 
	309, 38, 38, 38, 96, 38, 310, 38, 
	38, 38, 96, 38, 311, 38, 38, 38, 
	96, 38, 312, 38, 38, 38, 96, 38, 
	313, 38, 38, 38, 96, 38, 314, 38, 
	38, 38, 96, 38, 315, 38, 38, 38, 
	96, 38, 316, 38, 38, 38, 96, 38, 
	317, 38, 38, 38, 96, 38, 318, 38, 
	38, 38, 96, 38, 319, 320, 321, 322, 
	38, 38, 38, 96, 38, 323, 38, 38, 
	38, 96, 38, 324, 38, 38, 38, 96, 
	38, 325, 38, 38, 38, 96, 38, 326, 
	38, 38, 38, 96, 38, 327, 38, 38, 
	38, 96, 38, 328, 38, 38, 38, 96, 
	38, 329, 38, 38, 38, 96, 38, 330, 
	331, 38, 38, 38, 96, 38, 332, 38, 
	38, 38, 96, 38, 333, 38, 38, 38, 
	96, 38, 334, 38, 38, 38, 96, 38, 
	335, 38, 38, 38, 96, 38, 336, 38, 
	38, 38, 96, 38, 337, 38, 38, 38, 
	96, 38, 338, 38, 38, 38, 96, 38, 
	339, 38, 38, 38, 96, 38, 340, 38, 
	38, 38, 96, 38, 341, 342, 38, 38, 
	38, 96, 38, 343, 344, 38, 38, 38, 
	96, 38, 345, 38, 38, 38, 96, 38, 
	346, 38, 38, 38, 96, 38, 347, 38, 
	38, 38, 96, 38, 348, 38, 38, 38, 
	96, 38, 349, 38, 38, 38, 96, 38, 
	350, 38, 38, 38, 96, 38, 351, 38, 
	38, 38, 96, 38, 352, 38, 38, 38, 
	96, 38, 353, 38, 38, 38, 96, 38, 
	354, 38, 38, 38, 96, 38, 355, 38, 
	38, 38, 96, 38, 356, 38, 38, 38, 
	96, 38, 357, 38, 38, 38, 96, 38, 
	358, 38, 38, 38, 96, 38, 359, 38, 
	38, 38, 96, 38, 360, 38, 38, 38, 
	96, 38, 361, 38, 38, 38, 96, 38, 
	362, 363, 38, 38, 38, 96, 38, 364, 
	38, 38, 38, 96, 38, 365, 38, 38, 
	38, 96, 38, 366, 38, 38, 38, 96, 
	38, 367, 38, 38, 38, 96, 38, 368, 
	38, 38, 38, 96, 38, 369, 38, 38, 
	38, 96, 38, 370, 38, 38, 38, 96, 
	38, 371, 38, 38, 38, 96, 38, 372, 
	373, 374, 375, 376, 377, 378, 38, 38, 
	38, 96, 38, 379, 38, 38, 38, 96, 
	38, 380, 38, 38, 38, 96, 38, 381, 
	38, 38, 38, 96, 38, 382, 38, 38, 
	38, 96, 38, 383, 38, 38, 38, 96, 
	38, 384, 38, 38, 38, 96, 38, 385, 
	386, 38, 38, 38, 96, 38, 387, 38, 
	38, 38, 96, 38, 388, 38, 38, 38, 
	96, 38, 389, 38, 38, 38, 96, 38, 
	390, 38, 38, 38, 96, 38, 391, 38, 
	38, 38, 96, 38, 392, 38, 38, 38, 
	96, 38, 393, 38, 38, 38, 96, 38, 
	394, 38, 38, 38, 96, 38, 395, 38, 
	38, 38, 96, 38, 396, 38, 38, 38, 
	96, 38, 397, 38, 38, 38, 96, 38, 
	398, 38, 38, 38, 96, 38, 399, 400, 
	401, 38, 38, 38, 96, 38, 402, 403, 
	38, 38, 38, 96, 38, 404, 38, 38, 
	38, 96, 38, 405, 38, 38, 38, 96, 
	38, 406, 38, 38, 38, 96, 38, 407, 
	38, 38, 38, 96, 38, 408, 38, 38, 
	38, 96, 38, 409, 38, 38, 38, 96, 
	38, 410, 38, 38, 38, 96, 38, 411, 
	412, 38, 38, 38, 96, 38, 413, 38, 
	38, 38, 96, 38, 414, 38, 38, 38, 
	96, 38, 415, 38, 38, 38, 96, 38, 
	416, 38, 38, 38, 96, 38, 417, 38, 
	38, 38, 96, 38, 418, 38, 38, 38, 
	96, 38, 419, 38, 38, 38, 96, 38, 
	420, 38, 38, 38, 96, 38, 421, 422, 
	423, 38, 38, 38, 96, 38, 424, 38, 
	38, 38, 96, 38, 425, 426, 38, 38, 
	38, 96, 38, 427, 38, 38, 38, 96, 
	38, 428, 38, 38, 38, 96, 38, 429, 
	38, 38, 38, 96, 38, 430, 38, 38, 
	38, 96, 38, 431, 432, 38, 38, 38, 
	96, 38, 433, 38, 38, 38, 96, 38, 
	434, 38, 38, 38, 96, 38, 435, 38, 
	38, 38, 96, 38, 436, 437, 38, 38, 
	38, 96, 38, 438, 439, 38, 38, 38, 
	96, 38, 440, 38, 38, 38, 96, 38, 
	441, 38, 38, 38, 96, 38, 442, 443, 
	38, 38, 38, 96, 38, 444, 38, 38, 
	38, 96, 38, 445, 38, 38, 38, 96, 
	38, 446, 38, 38, 38, 96, 38, 447, 
	38, 38, 38, 96, 38, 448, 38, 38, 
	38, 96, 38, 449, 38, 38, 38, 96, 
	38, 450, 38, 38, 38, 96, 38, 451, 
	38, 38, 38, 96, 38, 452, 38, 38, 
	38, 96, 38, 453, 454, 455, 38, 38, 
	38, 96, 38, 456, 38, 38, 38, 96, 
	38, 457, 38, 38, 38, 96, 38, 458, 
	38, 38, 38, 96, 38, 459, 38, 38, 
	38, 96, 38, 460, 38, 38, 38, 96, 
	38, 461, 38, 38, 38, 96, 38, 462, 
	38, 38, 38, 96, 38, 463, 38, 38, 
	38, 96, 38, 464, 38, 38, 38, 96, 
	38, 465, 38, 38, 38, 96, 38, 466, 
	467, 38, 38, 38, 96, 38, 468, 38, 
	38, 38, 96, 38, 469, 38, 38, 38, 
	96, 38, 470, 38, 38, 38, 96, 38, 
	471, 38, 38, 38, 96, 38, 472, 38, 
	38, 38, 96, 38, 473, 38, 38, 38, 
	96, 38, 474, 475, 476, 38, 38, 38, 
	96, 38, 477, 38, 38, 38, 96, 38, 
	478, 38, 38, 38, 96, 38, 479, 38, 
	38, 38, 96, 480, 38, 38, 38, 96, 
	38, 481, 38, 38, 38, 96, 38, 482, 
	38, 38, 38, 96, 38, 483, 38, 38, 
	38, 96, 38, 484, 38, 38, 38, 96, 
	38, 485, 38, 38, 38, 96, 38, 486, 
	38, 38, 38, 96, 487, 488, 63, 0
};

static const short _axl_jnc_trans_targs[] = {
	7, 0, 7, 7, 11, 1, 7, 7, 
	15, 7, 7, 3, 3, 4, 7, 23, 
	7, 25, 7, 8, 7, 9, 10, 12, 
	13, 14, 16, 17, 18, 19, 20, 22, 
	24, 26, 27, 29, 30, 32, 33, 34, 
	36, 37, 44, 62, 84, 99, 115, 133, 
	135, 138, 155, 168, 180, 201, 218, 254, 
	264, 302, 313, 327, 345, 356, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 2, 21, 7, 7, 
	7, 5, 6, 7, 7, 7, 28, 7, 
	7, 7, 7, 7, 31, 7, 7, 7, 
	7, 35, 7, 38, 39, 40, 7, 41, 
	42, 33, 43, 33, 45, 57, 59, 46, 
	52, 47, 48, 49, 50, 51, 33, 53, 
	54, 55, 56, 33, 58, 33, 60, 61, 
	33, 63, 65, 68, 70, 77, 64, 33, 
	66, 67, 33, 69, 33, 71, 73, 72, 
	33, 74, 75, 76, 33, 78, 79, 80, 
	33, 81, 82, 83, 33, 85, 90, 94, 
	86, 87, 88, 89, 33, 7, 91, 92, 
	93, 33, 95, 96, 97, 98, 33, 100, 
	102, 108, 111, 101, 33, 103, 106, 104, 
	105, 33, 107, 7, 33, 109, 110, 33, 
	112, 113, 114, 33, 116, 119, 122, 123, 
	127, 117, 118, 33, 120, 121, 33, 33, 
	124, 125, 126, 33, 128, 129, 130, 131, 
	132, 33, 134, 33, 136, 137, 33, 33, 
	139, 140, 144, 141, 142, 143, 33, 7, 
	145, 146, 147, 33, 148, 153, 33, 33, 
	33, 149, 150, 151, 152, 33, 154, 33, 
	156, 166, 157, 158, 159, 160, 161, 162, 
	163, 164, 165, 33, 167, 33, 169, 170, 
	176, 171, 172, 173, 174, 175, 33, 177, 
	178, 179, 33, 181, 188, 189, 199, 182, 
	183, 184, 185, 186, 187, 33, 33, 190, 
	193, 191, 192, 33, 194, 195, 196, 197, 
	198, 33, 200, 33, 202, 206, 212, 203, 
	204, 205, 33, 207, 208, 209, 210, 211, 
	33, 213, 214, 215, 216, 217, 33, 219, 
	221, 226, 250, 220, 33, 222, 223, 224, 
	225, 33, 227, 236, 228, 229, 230, 231, 
	232, 233, 234, 235, 33, 237, 245, 238, 
	241, 239, 240, 33, 242, 243, 244, 33, 
	246, 247, 248, 249, 33, 251, 252, 253, 
	33, 255, 256, 261, 257, 258, 259, 260, 
	33, 262, 263, 33, 265, 267, 268, 271, 
	278, 284, 298, 266, 33, 33, 269, 270, 
	33, 272, 275, 273, 274, 33, 276, 277, 
	33, 279, 280, 281, 282, 283, 33, 285, 
	289, 293, 286, 287, 33, 288, 33, 290, 
	291, 292, 33, 294, 296, 295, 33, 297, 
	33, 299, 300, 301, 33, 303, 305, 307, 
	304, 33, 33, 306, 33, 308, 309, 310, 
	312, 311, 33, 33, 314, 324, 315, 317, 
	316, 33, 318, 320, 319, 33, 321, 322, 
	323, 33, 325, 326, 33, 328, 333, 338, 
	329, 330, 331, 332, 33, 334, 335, 336, 
	337, 33, 339, 340, 33, 341, 342, 343, 
	344, 33, 346, 351, 353, 347, 348, 349, 
	350, 33, 352, 33, 354, 355, 33, 7, 
	7
};

static const short _axl_jnc_trans_actions[] = {
	95, 0, 100, 55, 367, 0, 97, 53, 
	364, 93, 51, 0, 1, 0, 57, 0, 
	91, 0, 59, 0, 103, 0, 373, 0, 
	0, 373, 0, 0, 0, 7, 7, 370, 
	370, 0, 0, 0, 0, 0, 361, 361, 
	0, 0, 0, 0, 0, 361, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 87, 89, 
	21, 77, 37, 15, 43, 75, 33, 9, 
	29, 11, 31, 13, 0, 0, 35, 85, 
	79, 0, 0, 83, 81, 27, 0, 23, 
	69, 39, 19, 25, 0, 71, 41, 49, 
	73, 0, 45, 0, 0, 0, 61, 0, 
	0, 274, 0, 202, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 163, 0, 
	0, 0, 0, 199, 0, 223, 0, 0, 
	334, 0, 0, 0, 0, 0, 0, 346, 
	0, 0, 181, 0, 247, 0, 0, 0, 
	268, 0, 0, 0, 208, 0, 0, 0, 
	145, 0, 0, 0, 337, 0, 0, 0, 
	0, 0, 0, 0, 349, 67, 0, 0, 
	0, 241, 0, 0, 0, 0, 319, 0, 
	0, 0, 0, 0, 325, 0, 0, 0, 
	0, 118, 0, 65, 259, 0, 0, 196, 
	0, 0, 0, 109, 0, 0, 0, 0, 
	0, 0, 0, 355, 0, 0, 238, 328, 
	0, 0, 0, 142, 0, 0, 0, 0, 
	0, 187, 0, 277, 0, 0, 307, 322, 
	0, 0, 0, 0, 0, 0, 205, 63, 
	0, 0, 0, 226, 0, 0, 229, 232, 
	235, 0, 0, 0, 0, 271, 0, 244, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 160, 0, 253, 0, 0, 
	0, 0, 0, 0, 0, 0, 193, 0, 
	0, 0, 133, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 106, 301, 0, 
	0, 0, 0, 172, 0, 0, 0, 0, 
	0, 130, 0, 358, 0, 0, 0, 0, 
	0, 0, 217, 0, 0, 0, 0, 0, 
	298, 0, 0, 0, 0, 0, 289, 0, 
	0, 0, 0, 0, 115, 0, 0, 0, 
	0, 292, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 286, 0, 0, 0, 
	0, 0, 0, 190, 0, 0, 0, 295, 
	0, 0, 0, 0, 139, 0, 0, 0, 
	136, 0, 0, 0, 0, 0, 0, 0, 
	148, 0, 0, 340, 0, 0, 0, 0, 
	0, 0, 0, 0, 166, 280, 0, 0, 
	250, 0, 0, 0, 0, 154, 0, 0, 
	310, 0, 0, 0, 0, 0, 316, 0, 
	0, 0, 0, 0, 304, 0, 124, 0, 
	0, 0, 184, 0, 0, 0, 175, 0, 
	262, 0, 0, 0, 343, 0, 0, 0, 
	0, 211, 283, 0, 352, 0, 0, 0, 
	0, 0, 121, 313, 0, 0, 0, 0, 
	0, 265, 0, 0, 0, 169, 0, 0, 
	0, 157, 0, 0, 112, 0, 0, 0, 
	0, 0, 0, 0, 220, 0, 0, 0, 
	0, 127, 0, 0, 214, 0, 0, 0, 
	0, 151, 0, 0, 0, 0, 0, 0, 
	0, 256, 0, 178, 0, 0, 331, 47, 
	17
};

static const short _axl_jnc_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const short _axl_jnc_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const short _axl_jnc_eof_trans[] = {
	1, 1, 10, 10, 10, 1, 17, 0, 
	63, 64, 64, 66, 64, 64, 64, 70, 
	64, 64, 64, 64, 64, 80, 81, 84, 
	81, 85, 64, 64, 89, 64, 64, 94, 
	64, 1, 97, 97, 64, 97, 97, 97, 
	103, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 166, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 188, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	232, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 64
};

static const int axl_jnc_start = 7;
static const int axl_jnc_first_final = 7;
static const int axl_jnc_error = -1;

static const int axl_jnc_en_main = 7;


/* #line 241 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */


//.............................................................................

void 
CLexer::Init ()
{
	
/* #line 1145 "axl_jnc_Lexer.cpp" */
	{
	cs = axl_jnc_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 249 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
}

bool
CLexer::Exec ()
{
	
/* #line 1151 "axl_jnc_Lexer.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const unsigned char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _axl_jnc_actions + _axl_jnc_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 1168 "axl_jnc_Lexer.cpp" */
		}
	}

	_keys = _axl_jnc_trans_keys + _axl_jnc_key_offsets[cs];
	_trans = _axl_jnc_index_offsets[cs];

	_klen = _axl_jnc_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _axl_jnc_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _axl_jnc_indicies[_trans];
_eof_trans:
	cs = _axl_jnc_trans_targs[_trans];

	if ( _axl_jnc_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _axl_jnc_actions + _axl_jnc_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
/* #line 44 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{ NewLine (p + 1); }
	break;
	case 3:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 4:
/* #line 60 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 1;}
	break;
	case 5:
/* #line 61 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 2;}
	break;
	case 6:
/* #line 62 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 3;}
	break;
	case 7:
/* #line 63 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 4;}
	break;
	case 8:
/* #line 64 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 5;}
	break;
	case 9:
/* #line 70 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 6;}
	break;
	case 10:
/* #line 71 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 7;}
	break;
	case 11:
/* #line 72 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 8;}
	break;
	case 12:
/* #line 73 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 9;}
	break;
	case 13:
/* #line 74 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 10;}
	break;
	case 14:
/* #line 76 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 11;}
	break;
	case 15:
/* #line 77 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 12;}
	break;
	case 16:
/* #line 78 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 13;}
	break;
	case 17:
/* #line 84 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 14;}
	break;
	case 18:
/* #line 85 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 15;}
	break;
	case 19:
/* #line 86 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 16;}
	break;
	case 20:
/* #line 87 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 17;}
	break;
	case 21:
/* #line 88 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 18;}
	break;
	case 22:
/* #line 89 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 19;}
	break;
	case 23:
/* #line 90 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 20;}
	break;
	case 24:
/* #line 91 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 21;}
	break;
	case 25:
/* #line 92 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 22;}
	break;
	case 26:
/* #line 93 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 23;}
	break;
	case 27:
/* #line 94 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 24;}
	break;
	case 28:
/* #line 95 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 25;}
	break;
	case 29:
/* #line 96 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 26;}
	break;
	case 30:
/* #line 97 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 27;}
	break;
	case 31:
/* #line 98 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 28;}
	break;
	case 32:
/* #line 99 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 29;}
	break;
	case 33:
/* #line 100 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 30;}
	break;
	case 34:
/* #line 101 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 31;}
	break;
	case 35:
/* #line 102 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 32;}
	break;
	case 36:
/* #line 103 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 33;}
	break;
	case 37:
/* #line 104 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 34;}
	break;
	case 38:
/* #line 105 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 35;}
	break;
	case 39:
/* #line 106 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 36;}
	break;
	case 40:
/* #line 113 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 38;}
	break;
	case 41:
/* #line 114 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 39;}
	break;
	case 42:
/* #line 115 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 40;}
	break;
	case 43:
/* #line 116 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 41;}
	break;
	case 44:
/* #line 117 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 42;}
	break;
	case 45:
/* #line 118 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 43;}
	break;
	case 46:
/* #line 119 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 44;}
	break;
	case 47:
/* #line 120 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 45;}
	break;
	case 48:
/* #line 121 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 46;}
	break;
	case 49:
/* #line 122 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 47;}
	break;
	case 50:
/* #line 124 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 49;}
	break;
	case 51:
/* #line 125 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 50;}
	break;
	case 52:
/* #line 126 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 51;}
	break;
	case 53:
/* #line 127 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 52;}
	break;
	case 54:
/* #line 128 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 53;}
	break;
	case 55:
/* #line 135 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 55;}
	break;
	case 56:
/* #line 136 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 56;}
	break;
	case 57:
/* #line 137 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 57;}
	break;
	case 58:
/* #line 138 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 58;}
	break;
	case 59:
/* #line 139 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 59;}
	break;
	case 60:
/* #line 140 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 60;}
	break;
	case 61:
/* #line 146 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 61;}
	break;
	case 62:
/* #line 147 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 62;}
	break;
	case 63:
/* #line 148 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 63;}
	break;
	case 64:
/* #line 149 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 64;}
	break;
	case 65:
/* #line 150 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 65;}
	break;
	case 66:
/* #line 151 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 66;}
	break;
	case 67:
/* #line 152 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 67;}
	break;
	case 68:
/* #line 153 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 68;}
	break;
	case 69:
/* #line 159 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 69;}
	break;
	case 70:
/* #line 160 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 70;}
	break;
	case 71:
/* #line 161 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 71;}
	break;
	case 72:
/* #line 162 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 72;}
	break;
	case 73:
/* #line 163 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 73;}
	break;
	case 74:
/* #line 164 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 74;}
	break;
	case 75:
/* #line 165 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 75;}
	break;
	case 76:
/* #line 171 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 76;}
	break;
	case 77:
/* #line 172 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 77;}
	break;
	case 78:
/* #line 173 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 78;}
	break;
	case 79:
/* #line 174 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 79;}
	break;
	case 80:
/* #line 176 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 81;}
	break;
	case 81:
/* #line 177 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 82;}
	break;
	case 82:
/* #line 178 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 83;}
	break;
	case 83:
/* #line 179 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 84;}
	break;
	case 84:
/* #line 180 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 85;}
	break;
	case 85:
/* #line 181 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 86;}
	break;
	case 86:
/* #line 187 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 87;}
	break;
	case 87:
/* #line 188 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 88;}
	break;
	case 88:
/* #line 189 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 89;}
	break;
	case 89:
/* #line 224 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 114;}
	break;
	case 90:
/* #line 225 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 115;}
	break;
	case 91:
/* #line 226 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 116;}
	break;
	case 92:
/* #line 227 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 117;}
	break;
	case 93:
/* #line 237 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 123;}
	break;
	case 94:
/* #line 195 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Inc); }}
	break;
	case 95:
/* #line 196 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Dec); }}
	break;
	case 96:
/* #line 197 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ptr); }}
	break;
	case 97:
/* #line 200 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogAnd); }}
	break;
	case 98:
/* #line 201 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogOr); }}
	break;
	case 99:
/* #line 202 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Eq); }}
	break;
	case 100:
/* #line 203 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ne); }}
	break;
	case 101:
/* #line 204 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Le); }}
	break;
	case 102:
/* #line 205 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ge); }}
	break;
	case 103:
/* #line 206 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ClassAssign); }}
	break;
	case 104:
/* #line 207 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AddAssign); }}
	break;
	case 105:
/* #line 208 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_SubAssign); }}
	break;
	case 106:
/* #line 209 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_MulAssign); }}
	break;
	case 107:
/* #line 210 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_DivAssign); }}
	break;
	case 108:
/* #line 211 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ModAssign); }}
	break;
	case 109:
/* #line 212 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShlAssign); }}
	break;
	case 110:
/* #line 213 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShrAssign); }}
	break;
	case 111:
/* #line 214 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AndAssign); }}
	break;
	case 112:
/* #line 215 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_XorAssign); }}
	break;
	case 113:
/* #line 216 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_OrAssign); }}
	break;
	case 114:
/* #line 217 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AtAssign); }}
	break;
	case 115:
/* #line 218 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ellipsis); }}
	break;
	case 116:
/* #line 225 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateCharToken (EToken_Integer); }}
	break;
	case 117:
/* #line 226 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 118:
/* #line 233 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 119:
/* #line 235 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 120:
/* #line 237 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (ts [0]); }}
	break;
	case 121:
/* #line 112 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Auto); }}
	break;
	case 122:
/* #line 123 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Int); }}
	break;
	case 123:
/* #line 134 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Enum); }}
	break;
	case 124:
/* #line 175 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Do); }}
	break;
	case 125:
/* #line 198 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shl); }}
	break;
	case 126:
/* #line 199 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shr); }}
	break;
	case 127:
/* #line 224 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Identifier); }}
	break;
	case 128:
/* #line 225 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateCharToken (EToken_Integer); }}
	break;
	case 129:
/* #line 226 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 130:
/* #line 227 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (10); }}
	break;
	case 131:
/* #line 228 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (16, 2); }}
	break;
	case 132:
/* #line 230 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateFpToken (); }}
	break;
	case 133:
/* #line 232 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 134:
/* #line 235 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 135:
/* #line 237 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (ts [0]); }}
	break;
	case 136:
/* #line 227 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateIntegerToken (10); }}
	break;
	case 137:
/* #line 237 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateToken (ts [0]); }}
	break;
	case 138:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} CreateToken (EToken_Namespace); }
	break;
	case 2:
	{{p = ((te))-1;} CreateToken (EToken_Extend); }
	break;
	case 3:
	{{p = ((te))-1;} CreateToken (EToken_Using); }
	break;
	case 4:
	{{p = ((te))-1;} CreateToken (EToken_Pack); }
	break;
	case 5:
	{{p = ((te))-1;} CreateToken (EToken_Endian); }
	break;
	case 6:
	{{p = ((te))-1;} CreateToken (EToken_Typedef); }
	break;
	case 7:
	{{p = ((te))-1;} CreateToken (EToken_Static); }
	break;
	case 8:
	{{p = ((te))-1;} CreateToken (EToken_Virtual); }
	break;
	case 9:
	{{p = ((te))-1;} CreateToken (EToken_NoVirtual); }
	break;
	case 10:
	{{p = ((te))-1;} CreateToken (EToken_Mutable); }
	break;
	case 11:
	{{p = ((te))-1;} CreateToken (EToken_Public); }
	break;
	case 12:
	{{p = ((te))-1;} CreateToken (EToken_Protected); }
	break;
	case 13:
	{{p = ((te))-1;} CreateToken (EToken_Friend); }
	break;
	case 14:
	{{p = ((te))-1;} CreateToken (EToken_Const); }
	break;
	case 15:
	{{p = ((te))-1;} CreateToken (EToken_ReadOnly); }
	break;
	case 16:
	{{p = ((te))-1;} CreateToken (EToken_Volatile); }
	break;
	case 17:
	{{p = ((te))-1;} CreateToken (EToken_Signed); }
	break;
	case 18:
	{{p = ((te))-1;} CreateToken (EToken_Unsigned); }
	break;
	case 19:
	{{p = ((te))-1;} CreateToken (EToken_LittleEndian); }
	break;
	case 20:
	{{p = ((te))-1;} CreateToken (EToken_BigEndian); }
	break;
	case 21:
	{{p = ((te))-1;} CreateToken (EToken_Safe); }
	break;
	case 22:
	{{p = ((te))-1;} CreateToken (EToken_Unsafe); }
	break;
	case 23:
	{{p = ((te))-1;} CreateToken (EToken_NoNull); }
	break;
	case 24:
	{{p = ((te))-1;} CreateToken (EToken_Strong); }
	break;
	case 25:
	{{p = ((te))-1;} CreateToken (EToken_Weak); }
	break;
	case 26:
	{{p = ((te))-1;} CreateToken (EToken_Cdecl); }
	break;
	case 27:
	{{p = ((te))-1;} CreateToken (EToken_Stdcall); }
	break;
	case 28:
	{{p = ((te))-1;} CreateToken (EToken_Function); }
	break;
	case 29:
	{{p = ((te))-1;} CreateToken (EToken_Property); }
	break;
	case 30:
	{{p = ((te))-1;} CreateToken (EToken_Multicast); }
	break;
	case 31:
	{{p = ((te))-1;} CreateToken (EToken_Event); }
	break;
	case 32:
	{{p = ((te))-1;} CreateToken (EToken_Bindable); }
	break;
	case 33:
	{{p = ((te))-1;} CreateToken (EToken_AutoGet); }
	break;
	case 34:
	{{p = ((te))-1;} CreateToken (EToken_Indexed); }
	break;
	case 35:
	{{p = ((te))-1;} CreateToken (EToken_Closure); }
	break;
	case 36:
	{{p = ((te))-1;} CreateToken (EToken_Thin); }
	break;
	case 38:
	{{p = ((te))-1;} CreateToken (EToken_Void); }
	break;
	case 39:
	{{p = ((te))-1;} CreateToken (EToken_Object); }
	break;
	case 40:
	{{p = ((te))-1;} CreateToken (EToken_Variant); }
	break;
	case 41:
	{{p = ((te))-1;} CreateToken (EToken_Bool); }
	break;
	case 42:
	{{p = ((te))-1;} CreateToken (EToken_Int8); }
	break;
	case 43:
	{{p = ((te))-1;} CreateToken (EToken_Int16); }
	break;
	case 44:
	{{p = ((te))-1;} CreateToken (EToken_Int32); }
	break;
	case 45:
	{{p = ((te))-1;} CreateToken (EToken_Int64); }
	break;
	case 46:
	{{p = ((te))-1;} CreateToken (EToken_Float); }
	break;
	case 47:
	{{p = ((te))-1;} CreateToken (EToken_Double); }
	break;
	case 49:
	{{p = ((te))-1;} CreateToken (EToken_IntPtr); }
	break;
	case 50:
	{{p = ((te))-1;} CreateToken (EToken_Char); }
	break;
	case 51:
	{{p = ((te))-1;} CreateToken (EToken_Short); }
	break;
	case 52:
	{{p = ((te))-1;} CreateToken (EToken_Long); }
	break;
	case 53:
	{{p = ((te))-1;} CreateToken (EToken_WChar); }
	break;
	case 55:
	{{p = ((te))-1;} CreateToken (EToken_EnumC); }
	break;
	case 56:
	{{p = ((te))-1;} CreateToken (EToken_Struct); }
	break;
	case 57:
	{{p = ((te))-1;} CreateToken (EToken_Union); }
	break;
	case 58:
	{{p = ((te))-1;} CreateToken (EToken_Class); }
	break;
	case 59:
	{{p = ((te))-1;} CreateToken (EToken_Interface); }
	break;
	case 60:
	{{p = ((te))-1;} CreateToken (EToken_AutoEv); }
	break;
	case 61:
	{{p = ((te))-1;} CreateToken (EToken_Get); }
	break;
	case 62:
	{{p = ((te))-1;} CreateToken (EToken_Set); }
	break;
	case 63:
	{{p = ((te))-1;} CreateToken (EToken_This); }
	break;
	case 64:
	{{p = ((te))-1;} CreateToken (EToken_PreConstruct); }
	break;
	case 65:
	{{p = ((te))-1;} CreateToken (EToken_Operator); }
	break;
	case 66:
	{{p = ((te))-1;} CreateToken (EToken_Postfix); }
	break;
	case 67:
	{{p = ((te))-1;} CreateToken (EToken_PropValue); }
	break;
	case 68:
	{{p = ((te))-1;} CreateToken (EToken_OnChange); }
	break;
	case 69:
	{{p = ((te))-1;} CreateToken (EToken_New); }
	break;
	case 70:
	{{p = ((te))-1;} CreateToken (EToken_Stack); }
	break;
	case 71:
	{{p = ((te))-1;} CreateToken (EToken_Heap); }
	break;
	case 72:
	{{p = ((te))-1;} CreateToken (EToken_SizeOf); }
	break;
	case 73:
	{{p = ((te))-1;} CreateToken (EToken_TypeOf); }
	break;
	case 74:
	{{p = ((te))-1;} CreateToken (EToken_Snapshot); }
	break;
	case 75:
	{{p = ((te))-1;} CreateToken (EToken_Dynamic); }
	break;
	case 76:
	{{p = ((te))-1;} CreateToken (EToken_If); }
	break;
	case 77:
	{{p = ((te))-1;} CreateToken (EToken_Else); }
	break;
	case 78:
	{{p = ((te))-1;} CreateToken (EToken_For); }
	break;
	case 79:
	{{p = ((te))-1;} CreateToken (EToken_While); }
	break;
	case 81:
	{{p = ((te))-1;} CreateToken (EToken_Break); }
	break;
	case 82:
	{{p = ((te))-1;} CreateToken (EToken_Continue); }
	break;
	case 83:
	{{p = ((te))-1;} CreateToken (EToken_Return); }
	break;
	case 84:
	{{p = ((te))-1;} CreateToken (EToken_Switch); }
	break;
	case 85:
	{{p = ((te))-1;} CreateToken (EToken_Case); }
	break;
	case 86:
	{{p = ((te))-1;} CreateToken (EToken_Default); }
	break;
	case 87:
	{{p = ((te))-1;} CreateToken (EToken_True); }
	break;
	case 88:
	{{p = ((te))-1;} CreateToken (EToken_False); }
	break;
	case 89:
	{{p = ((te))-1;} CreateToken (EToken_Null); }
	break;
	case 114:
	{{p = ((te))-1;} CreateStringToken (EToken_Identifier); }
	break;
	case 115:
	{{p = ((te))-1;} CreateCharToken (EToken_Integer); }
	break;
	case 116:
	{{p = ((te))-1;} CreateStringToken (EToken_Literal, 1, 1); }
	break;
	case 117:
	{{p = ((te))-1;} CreateIntegerToken (10); }
	break;
	case 123:
	{{p = ((te))-1;} CreateToken (ts [0]); }
	break;
	}
	}
	break;
/* #line 1916 "axl_jnc_Lexer.cpp" */
		}
	}

_again:
	_acts = _axl_jnc_actions + _axl_jnc_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 1927 "axl_jnc_Lexer.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _axl_jnc_eof_trans[cs] > 0 ) {
		_trans = _axl_jnc_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 255 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */

	bool Result = cs != axl_jnc_error;
	if (!Result)
	{
		CToken* pToken = CreateToken (EToken_Error);
		pToken->m_Data.m_Error = err::CError ("lexer error");
	}

	return Result;
}

//.............................................................................

} // namespace jnc {
} // namespace axl {
