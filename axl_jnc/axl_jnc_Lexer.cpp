
/* #line 1 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
#include "stdafx.h"
#include "axl_jnc_Lexer.h"

// warning C4065: switch statement contains 'default' but no 'case' labels

#pragma warning (disable: 4065)

namespace axl {
namespace jnc {

//.............................................................................


/* #line 2 "axl_jnc_Lexer.cpp" */
static const unsigned char _axl_jnc_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 92, 1, 93, 1, 94, 1, 
	95, 1, 96, 1, 97, 1, 98, 1, 
	99, 1, 100, 1, 101, 1, 102, 1, 
	103, 1, 104, 1, 105, 1, 106, 1, 
	107, 1, 108, 1, 109, 1, 110, 1, 
	111, 1, 112, 1, 113, 1, 114, 1, 
	115, 1, 116, 1, 118, 1, 119, 1, 
	120, 1, 121, 1, 122, 1, 123, 1, 
	124, 1, 125, 1, 126, 1, 127, 1, 
	128, 1, 129, 1, 130, 1, 131, 1, 
	132, 1, 133, 1, 134, 1, 135, 1, 
	136, 1, 137, 2, 0, 114, 2, 0, 
	115, 2, 0, 117, 2, 3, 4, 2, 
	3, 5, 2, 3, 6, 2, 3, 7, 
	2, 3, 8, 2, 3, 9, 2, 3, 
	10, 2, 3, 11, 2, 3, 12, 2, 
	3, 13, 2, 3, 14, 2, 3, 15, 
	2, 3, 16, 2, 3, 17, 2, 3, 
	18, 2, 3, 19, 2, 3, 20, 2, 
	3, 21, 2, 3, 22, 2, 3, 23, 
	2, 3, 24, 2, 3, 25, 2, 3, 
	26, 2, 3, 27, 2, 3, 28, 2, 
	3, 29, 2, 3, 30, 2, 3, 31, 
	2, 3, 32, 2, 3, 33, 2, 3, 
	34, 2, 3, 35, 2, 3, 36, 2, 
	3, 37, 2, 3, 38, 2, 3, 39, 
	2, 3, 40, 2, 3, 41, 2, 3, 
	42, 2, 3, 43, 2, 3, 44, 2, 
	3, 45, 2, 3, 46, 2, 3, 47, 
	2, 3, 48, 2, 3, 49, 2, 3, 
	50, 2, 3, 51, 2, 3, 52, 2, 
	3, 53, 2, 3, 54, 2, 3, 55, 
	2, 3, 56, 2, 3, 57, 2, 3, 
	58, 2, 3, 59, 2, 3, 60, 2, 
	3, 61, 2, 3, 62, 2, 3, 63, 
	2, 3, 64, 2, 3, 65, 2, 3, 
	66, 2, 3, 67, 2, 3, 68, 2, 
	3, 69, 2, 3, 70, 2, 3, 71, 
	2, 3, 72, 2, 3, 73, 2, 3, 
	74, 2, 3, 75, 2, 3, 76, 2, 
	3, 77, 2, 3, 78, 2, 3, 79, 
	2, 3, 80, 2, 3, 81, 2, 3, 
	82, 2, 3, 83, 2, 3, 84, 2, 
	3, 85, 2, 3, 86, 2, 3, 87, 
	2, 3, 88, 2, 3, 89, 2, 3, 
	90, 2, 3, 91
};

static const short _axl_jnc_key_offsets[] = {
	0, 3, 6, 7, 9, 12, 14, 20, 
	70, 73, 74, 77, 78, 79, 81, 84, 
	85, 86, 88, 91, 92, 95, 96, 101, 
	103, 106, 112, 113, 115, 116, 117, 119, 
	120, 121, 128, 137, 144, 145, 155, 163, 
	171, 179, 187, 195, 203, 211, 219, 227, 
	235, 243, 252, 260, 268, 276, 286, 295, 
	303, 311, 319, 327, 335, 343, 351, 359, 
	367, 375, 383, 391, 399, 407, 415, 423, 
	435, 443, 451, 459, 467, 475, 483, 491, 
	499, 507, 515, 523, 532, 540, 548, 556, 
	564, 572, 581, 590, 598, 606, 614, 622, 
	630, 638, 646, 654, 662, 670, 678, 691, 
	699, 707, 715, 723, 731, 739, 747, 755, 
	763, 771, 779, 787, 799, 807, 815, 823, 
	831, 839, 847, 855, 863, 871, 879, 887, 
	895, 903, 911, 919, 927, 935, 943, 951, 
	959, 967, 975, 984, 993, 1001, 1009, 1017, 
	1025, 1037, 1045, 1053, 1061, 1069, 1077, 1085, 
	1093, 1101, 1110, 1118, 1126, 1134, 1142, 1151, 
	1159, 1167, 1175, 1183, 1191, 1199, 1207, 1215, 
	1223, 1231, 1241, 1249, 1257, 1265, 1273, 1281, 
	1289, 1297, 1305, 1313, 1321, 1329, 1337, 1345, 
	1353, 1364, 1372, 1380, 1388, 1396, 1404, 1413, 
	1421, 1429, 1437, 1445, 1453, 1461, 1469, 1477, 
	1485, 1493, 1501, 1509, 1517, 1525, 1533, 1541, 
	1552, 1560, 1568, 1576, 1584, 1592, 1600, 1608, 
	1617, 1625, 1633, 1641, 1649, 1657, 1665, 1673, 
	1681, 1689, 1698, 1706, 1714, 1722, 1730, 1738, 
	1746, 1754, 1762, 1770, 1778, 1786, 1794, 1802, 
	1810, 1819, 1827, 1835, 1843, 1851, 1859, 1867, 
	1875, 1883, 1895, 1903, 1911, 1919, 1927, 1937, 
	1945, 1953, 1961, 1969, 1977, 1985, 1993, 2001, 
	2009, 2019, 2028, 2036, 2044, 2052, 2060, 2068, 
	2076, 2084, 2092, 2100, 2108, 2116, 2124, 2132, 
	2140, 2150, 2159, 2168, 2176, 2184, 2192, 2200, 
	2208, 2216, 2224, 2233, 2241, 2249, 2257, 2267, 
	2275, 2283, 2291, 2300, 2308, 2316, 2325, 2333, 
	2341, 2349, 2357, 2365, 2373, 2381, 2389, 2397, 
	2407, 2416, 2424, 2432, 2440, 2448, 2456, 2464, 
	2472, 2480, 2488, 2496, 2504, 2513, 2521, 2529, 
	2537, 2545, 2553, 2561, 2570, 2578, 2586, 2594, 
	2602, 2610
};

static const char _axl_jnc_trans_keys[] = {
	10, 34, 92, 10, 39, 92, 46, 10, 
	42, 10, 42, 47, 48, 57, 48, 57, 
	65, 70, 97, 102, 9, 10, 13, 32, 
	33, 34, 37, 38, 39, 42, 43, 45, 
	46, 47, 48, 58, 60, 61, 62, 64, 
	69, 94, 95, 97, 98, 99, 100, 101, 
	102, 103, 104, 105, 108, 109, 110, 111, 
	112, 114, 115, 116, 117, 118, 119, 124, 
	49, 57, 65, 90, 106, 122, 9, 13, 
	32, 61, 10, 34, 92, 10, 61, 38, 
	61, 10, 39, 92, 10, 61, 43, 61, 
	45, 61, 62, 46, 42, 47, 61, 10, 
	46, 88, 120, 48, 57, 48, 57, 46, 
	48, 57, 48, 57, 65, 70, 97, 102, 
	61, 60, 61, 61, 61, 61, 62, 61, 
	61, 95, 48, 57, 65, 90, 97, 122, 
	43, 45, 95, 48, 57, 65, 90, 97, 
	122, 95, 48, 57, 65, 90, 97, 122, 
	61, 95, 98, 108, 117, 48, 57, 65, 
	90, 97, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 105, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 101, 103, 48, 57, 
	65, 90, 97, 122, 95, 118, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 111, 114, 
	48, 57, 65, 90, 97, 122, 95, 103, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	98, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	107, 48, 57, 65, 90, 97, 122, 95, 
	97, 100, 104, 108, 111, 48, 57, 65, 
	90, 98, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 115, 116, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 101, 111, 48, 
	57, 65, 90, 97, 122, 95, 102, 108, 
	48, 57, 65, 90, 97, 122, 95, 97, 
	48, 57, 65, 90, 98, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 116, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 117, 
	48, 57, 65, 90, 97, 122, 95, 98, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 43, 45, 
	95, 108, 110, 118, 120, 48, 57, 65, 
	90, 97, 122, 95, 115, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 109, 48, 57, 65, 
	90, 97, 122, 95, 99, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 116, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 97, 108, 111, 114, 
	117, 48, 57, 65, 90, 98, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	100, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	110, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	112, 48, 57, 65, 90, 97, 122, 95, 
	102, 110, 48, 57, 65, 90, 97, 122, 
	95, 100, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 120, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 49, 51, 54, 56, 95, 112, 48, 
	57, 65, 90, 97, 122, 54, 95, 48, 
	57, 65, 90, 97, 122, 50, 95, 48, 
	57, 65, 90, 97, 122, 52, 95, 48, 
	57, 65, 90, 97, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 101, 117, 
	48, 57, 65, 90, 97, 122, 95, 109, 
	48, 57, 65, 90, 97, 122, 95, 98, 
	48, 57, 65, 90, 97, 122, 95, 101, 
	48, 57, 65, 90, 97, 122, 95, 114, 
	48, 57, 65, 90, 97, 122, 95, 108, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	105, 48, 57, 65, 90, 97, 122, 95, 
	99, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	115, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	97, 48, 57, 65, 90, 98, 122, 95, 
	98, 48, 57, 65, 90, 97, 122, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	101, 48, 57, 65, 90, 97, 122, 95, 
	97, 101, 117, 48, 57, 65, 90, 98, 
	122, 95, 109, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 115, 48, 57, 65, 90, 97, 
	122, 95, 112, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 119, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 98, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 98, 110, 112, 118, 48, 57, 
	65, 90, 97, 122, 95, 106, 48, 57, 
	65, 90, 97, 122, 95, 101, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 101, 104, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 97, 48, 
	57, 65, 90, 98, 122, 95, 116, 48, 
	57, 65, 90, 97, 122, 95, 111, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 114, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 97, 111, 
	114, 117, 48, 57, 65, 90, 98, 122, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 120, 48, 57, 65, 90, 97, 122, 
	95, 101, 111, 48, 57, 65, 90, 97, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 115, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 114, 48, 57, 65, 90, 97, 
	122, 95, 117, 48, 57, 65, 90, 97, 
	122, 95, 99, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 112, 116, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 114, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 121, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 116, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 100, 48, 57, 65, 90, 
	97, 122, 95, 98, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 99, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 95, 97, 116, 48, 57, 65, 
	90, 98, 122, 95, 100, 48, 57, 65, 
	90, 97, 122, 95, 111, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 108, 48, 57, 65, 
	90, 97, 122, 95, 121, 48, 57, 65, 
	90, 97, 122, 95, 117, 48, 57, 65, 
	90, 97, 122, 95, 114, 48, 57, 65, 
	90, 97, 122, 95, 110, 48, 57, 65, 
	90, 97, 122, 95, 101, 104, 105, 116, 
	119, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	111, 48, 57, 65, 90, 97, 122, 95, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	116, 48, 57, 65, 90, 97, 122, 95, 
	103, 108, 122, 48, 57, 65, 90, 97, 
	121, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 110, 48, 57, 65, 90, 97, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 111, 48, 57, 65, 90, 97, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 97, 100, 114, 48, 57, 65, 
	90, 98, 122, 95, 99, 116, 48, 57, 
	65, 90, 97, 122, 95, 107, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 97, 48, 57, 
	65, 90, 98, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 108, 48, 57, 
	65, 90, 97, 122, 95, 117, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 105, 48, 57, 
	65, 90, 97, 122, 95, 116, 48, 57, 
	65, 90, 97, 122, 95, 99, 48, 57, 
	65, 90, 97, 122, 95, 104, 48, 57, 
	65, 90, 97, 122, 95, 104, 114, 121, 
	48, 57, 65, 90, 97, 122, 95, 105, 
	114, 48, 57, 65, 90, 97, 122, 95, 
	110, 115, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 100, 111, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 102, 48, 57, 65, 90, 97, 
	122, 95, 104, 110, 115, 48, 57, 65, 
	90, 97, 122, 95, 101, 48, 57, 65, 
	90, 97, 122, 95, 97, 48, 57, 65, 
	90, 98, 122, 95, 112, 48, 57, 65, 
	90, 97, 122, 95, 105, 115, 48, 57, 
	65, 90, 97, 122, 95, 111, 48, 57, 
	65, 90, 97, 122, 95, 110, 48, 57, 
	65, 90, 97, 122, 95, 97, 105, 48, 
	57, 65, 90, 98, 122, 95, 102, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 101, 48, 
	57, 65, 90, 97, 122, 95, 100, 48, 
	57, 65, 90, 97, 122, 95, 105, 48, 
	57, 65, 90, 97, 122, 95, 110, 48, 
	57, 65, 90, 97, 122, 95, 103, 48, 
	57, 65, 90, 97, 122, 95, 97, 105, 
	111, 48, 57, 65, 90, 98, 122, 95, 
	108, 114, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	95, 97, 48, 57, 65, 90, 98, 122, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 105, 108, 48, 57, 65, 90, 97, 
	122, 95, 100, 48, 57, 65, 90, 97, 
	122, 95, 97, 48, 57, 65, 90, 98, 
	122, 95, 116, 48, 57, 65, 90, 97, 
	122, 95, 105, 48, 57, 65, 90, 97, 
	122, 95, 108, 48, 57, 65, 90, 97, 
	122, 95, 101, 48, 57, 65, 90, 97, 
	122, 95, 101, 104, 48, 57, 65, 90, 
	97, 122, 95, 97, 48, 57, 65, 90, 
	98, 122, 95, 107, 48, 57, 65, 90, 
	97, 122, 95, 105, 48, 57, 65, 90, 
	97, 122, 95, 108, 48, 57, 65, 90, 
	97, 122, 95, 101, 48, 57, 65, 90, 
	97, 122, 61, 124, 0
};

static const char _axl_jnc_single_lengths[] = {
	3, 3, 1, 2, 3, 0, 0, 44, 
	3, 1, 3, 1, 1, 2, 3, 1, 
	1, 2, 3, 1, 3, 1, 3, 0, 
	1, 0, 1, 2, 1, 1, 2, 1, 
	1, 1, 3, 1, 1, 4, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 4, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 6, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 3, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 7, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 6, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 3, 2, 2, 2, 2, 
	6, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	5, 2, 2, 2, 2, 2, 3, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 5, 
	2, 2, 2, 2, 2, 2, 2, 3, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 6, 2, 2, 2, 2, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	4, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	4, 3, 3, 2, 2, 2, 2, 2, 
	2, 2, 3, 2, 2, 2, 4, 2, 
	2, 2, 3, 2, 2, 3, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 3, 2, 2, 2, 
	2, 2, 2, 3, 2, 2, 2, 2, 
	2, 2
};

static const char _axl_jnc_range_lengths[] = {
	0, 0, 0, 0, 0, 1, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 3, 0, 0, 0, 0, 0, 0, 
	0, 3, 3, 3, 0, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 0
};

static const short _axl_jnc_index_offsets[] = {
	0, 4, 8, 10, 13, 17, 19, 23, 
	71, 75, 77, 81, 83, 85, 88, 92, 
	94, 96, 99, 103, 105, 109, 111, 116, 
	118, 121, 125, 127, 130, 132, 134, 137, 
	139, 141, 146, 153, 158, 160, 168, 174, 
	180, 186, 192, 198, 204, 210, 216, 222, 
	228, 234, 241, 247, 253, 259, 267, 274, 
	280, 286, 292, 298, 304, 310, 316, 322, 
	328, 334, 340, 346, 352, 358, 364, 370, 
	380, 386, 392, 398, 404, 410, 416, 422, 
	428, 434, 440, 446, 453, 459, 465, 471, 
	477, 483, 490, 497, 503, 509, 515, 521, 
	527, 533, 539, 545, 551, 557, 563, 574, 
	580, 586, 592, 598, 604, 610, 616, 622, 
	628, 634, 640, 646, 656, 662, 668, 674, 
	680, 686, 692, 698, 704, 710, 716, 722, 
	728, 734, 740, 746, 752, 758, 764, 770, 
	776, 782, 788, 795, 802, 808, 814, 820, 
	826, 836, 842, 848, 854, 860, 866, 872, 
	878, 884, 891, 897, 903, 909, 915, 922, 
	928, 934, 940, 946, 952, 958, 964, 970, 
	976, 982, 990, 996, 1002, 1008, 1014, 1020, 
	1026, 1032, 1038, 1044, 1050, 1056, 1062, 1068, 
	1074, 1083, 1089, 1095, 1101, 1107, 1113, 1120, 
	1126, 1132, 1138, 1144, 1150, 1156, 1162, 1168, 
	1174, 1180, 1186, 1192, 1198, 1204, 1210, 1216, 
	1225, 1231, 1237, 1243, 1249, 1255, 1261, 1267, 
	1274, 1280, 1286, 1292, 1298, 1304, 1310, 1316, 
	1322, 1328, 1335, 1341, 1347, 1353, 1359, 1365, 
	1371, 1377, 1383, 1389, 1395, 1401, 1407, 1413, 
	1419, 1426, 1432, 1438, 1444, 1450, 1456, 1462, 
	1468, 1474, 1484, 1490, 1496, 1502, 1508, 1516, 
	1522, 1528, 1534, 1540, 1546, 1552, 1558, 1564, 
	1570, 1578, 1585, 1591, 1597, 1603, 1609, 1615, 
	1621, 1627, 1633, 1639, 1645, 1651, 1657, 1663, 
	1669, 1677, 1684, 1691, 1697, 1703, 1709, 1715, 
	1721, 1727, 1733, 1740, 1746, 1752, 1758, 1766, 
	1772, 1778, 1784, 1791, 1797, 1803, 1810, 1816, 
	1822, 1828, 1834, 1840, 1846, 1852, 1858, 1864, 
	1872, 1879, 1885, 1891, 1897, 1903, 1909, 1915, 
	1921, 1927, 1933, 1939, 1945, 1952, 1958, 1964, 
	1970, 1976, 1982, 1988, 1995, 2001, 2007, 2013, 
	2019, 2025
};

static const short _axl_jnc_indicies[] = {
	2, 3, 4, 1, 6, 7, 8, 5, 
	10, 9, 12, 13, 11, 12, 13, 14, 
	11, 15, 0, 17, 17, 17, 16, 19, 
	20, 19, 19, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 30, 31, 33, 34, 
	35, 36, 37, 39, 40, 38, 41, 42, 
	43, 44, 45, 46, 47, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 58, 
	59, 60, 61, 32, 38, 38, 18, 19, 
	19, 19, 62, 64, 63, 2, 3, 4, 
	1, 65, 1, 66, 63, 67, 68, 63, 
	6, 7, 8, 5, 69, 5, 70, 63, 
	71, 72, 63, 73, 74, 75, 63, 76, 
	63, 11, 77, 78, 63, 79, 77, 81, 
	82, 82, 32, 80, 15, 83, 81, 32, 
	80, 17, 17, 17, 84, 85, 63, 86, 
	87, 63, 89, 88, 90, 63, 91, 92, 
	63, 94, 93, 95, 63, 38, 38, 38, 
	38, 0, 81, 81, 38, 97, 38, 38, 
	96, 38, 97, 38, 38, 96, 98, 63, 
	38, 99, 100, 101, 38, 38, 38, 96, 
	38, 102, 38, 38, 38, 96, 38, 103, 
	38, 38, 38, 96, 38, 104, 38, 38, 
	38, 96, 38, 105, 38, 38, 38, 96, 
	38, 106, 38, 38, 38, 96, 38, 107, 
	38, 38, 38, 96, 38, 108, 38, 38, 
	38, 96, 38, 109, 38, 38, 38, 96, 
	38, 110, 38, 38, 38, 96, 38, 111, 
	38, 38, 38, 96, 38, 112, 38, 38, 
	38, 96, 38, 114, 115, 38, 38, 38, 
	113, 38, 116, 38, 38, 38, 96, 38, 
	117, 38, 38, 38, 96, 38, 118, 38, 
	38, 38, 96, 38, 119, 120, 121, 38, 
	38, 38, 96, 38, 122, 123, 38, 38, 
	38, 96, 38, 124, 38, 38, 38, 96, 
	38, 125, 38, 38, 38, 96, 38, 126, 
	38, 38, 38, 96, 38, 127, 38, 38, 
	38, 96, 38, 128, 38, 38, 38, 96, 
	38, 129, 38, 38, 38, 96, 38, 130, 
	38, 38, 38, 96, 38, 131, 38, 38, 
	38, 96, 38, 132, 38, 38, 38, 96, 
	38, 133, 38, 38, 38, 96, 38, 134, 
	38, 38, 38, 96, 38, 135, 38, 38, 
	38, 96, 38, 136, 38, 38, 38, 96, 
	38, 137, 38, 38, 38, 96, 38, 138, 
	38, 38, 38, 96, 38, 139, 38, 38, 
	38, 96, 38, 140, 141, 142, 143, 144, 
	38, 38, 38, 96, 38, 145, 38, 38, 
	38, 96, 38, 146, 38, 38, 38, 96, 
	38, 147, 38, 38, 38, 96, 38, 148, 
	38, 38, 38, 96, 38, 149, 38, 38, 
	38, 96, 38, 150, 38, 38, 38, 96, 
	38, 151, 38, 38, 38, 96, 38, 152, 
	38, 38, 38, 96, 38, 153, 38, 38, 
	38, 96, 38, 154, 38, 38, 38, 96, 
	38, 155, 38, 38, 38, 96, 38, 156, 
	157, 38, 38, 38, 96, 38, 158, 38, 
	38, 38, 96, 38, 159, 38, 38, 38, 
	96, 38, 160, 38, 38, 38, 96, 38, 
	161, 38, 38, 38, 96, 38, 162, 38, 
	38, 38, 96, 38, 163, 164, 38, 38, 
	38, 96, 38, 165, 166, 38, 38, 38, 
	96, 38, 167, 38, 38, 38, 96, 38, 
	168, 38, 38, 38, 96, 38, 169, 38, 
	38, 38, 96, 38, 170, 38, 38, 38, 
	96, 38, 171, 38, 38, 38, 96, 38, 
	172, 38, 38, 38, 96, 38, 173, 38, 
	38, 38, 96, 38, 175, 38, 38, 38, 
	174, 38, 176, 38, 38, 38, 96, 38, 
	177, 38, 38, 38, 96, 38, 178, 38, 
	38, 38, 96, 81, 81, 38, 179, 180, 
	181, 182, 97, 38, 38, 96, 38, 183, 
	38, 38, 38, 96, 38, 184, 38, 38, 
	38, 96, 38, 185, 38, 38, 38, 96, 
	38, 186, 38, 38, 38, 96, 38, 188, 
	38, 38, 38, 187, 38, 189, 38, 38, 
	38, 96, 38, 190, 38, 38, 38, 96, 
	38, 191, 38, 38, 38, 96, 38, 192, 
	38, 38, 38, 96, 38, 193, 38, 38, 
	38, 96, 38, 194, 38, 38, 38, 96, 
	38, 195, 38, 38, 38, 96, 38, 196, 
	197, 198, 199, 200, 38, 38, 38, 96, 
	38, 201, 38, 38, 38, 96, 38, 202, 
	38, 38, 38, 96, 38, 203, 38, 38, 
	38, 96, 38, 204, 38, 38, 38, 96, 
	38, 205, 38, 38, 38, 96, 38, 206, 
	38, 38, 38, 96, 38, 207, 38, 38, 
	38, 96, 38, 208, 38, 38, 38, 96, 
	38, 209, 38, 38, 38, 96, 38, 210, 
	38, 38, 38, 96, 38, 211, 38, 38, 
	38, 96, 38, 212, 38, 38, 38, 96, 
	38, 213, 38, 38, 38, 96, 38, 214, 
	38, 38, 38, 96, 38, 215, 38, 38, 
	38, 96, 38, 216, 38, 38, 38, 96, 
	38, 217, 38, 38, 38, 96, 38, 218, 
	38, 38, 38, 96, 38, 219, 38, 38, 
	38, 96, 38, 220, 38, 38, 38, 96, 
	38, 221, 38, 38, 38, 96, 38, 222, 
	38, 38, 38, 96, 38, 223, 224, 38, 
	38, 38, 96, 38, 225, 226, 38, 38, 
	38, 96, 38, 227, 38, 38, 38, 96, 
	38, 228, 38, 38, 38, 96, 38, 229, 
	38, 38, 38, 96, 38, 230, 38, 38, 
	38, 96, 232, 233, 234, 235, 38, 236, 
	38, 38, 38, 231, 237, 38, 38, 38, 
	38, 96, 238, 38, 38, 38, 38, 96, 
	239, 38, 38, 38, 38, 96, 38, 240, 
	38, 38, 38, 96, 38, 241, 38, 38, 
	38, 96, 38, 242, 38, 38, 38, 96, 
	38, 243, 38, 38, 38, 96, 38, 244, 
	38, 38, 38, 96, 38, 245, 246, 38, 
	38, 38, 96, 38, 247, 38, 38, 38, 
	96, 38, 248, 38, 38, 38, 96, 38, 
	249, 38, 38, 38, 96, 38, 250, 38, 
	38, 38, 96, 38, 251, 252, 38, 38, 
	38, 96, 38, 253, 38, 38, 38, 96, 
	38, 254, 38, 38, 38, 96, 38, 255, 
	38, 38, 38, 96, 38, 256, 38, 38, 
	38, 96, 38, 257, 38, 38, 38, 96, 
	38, 258, 38, 38, 38, 96, 38, 259, 
	38, 38, 38, 96, 38, 260, 38, 38, 
	38, 96, 38, 261, 38, 38, 38, 96, 
	38, 262, 38, 38, 38, 96, 38, 263, 
	264, 265, 38, 38, 38, 96, 38, 266, 
	38, 38, 38, 96, 38, 267, 38, 38, 
	38, 96, 38, 268, 38, 38, 38, 96, 
	38, 269, 38, 38, 38, 96, 38, 270, 
	38, 38, 38, 96, 38, 271, 38, 38, 
	38, 96, 38, 272, 38, 38, 38, 96, 
	38, 273, 38, 38, 38, 96, 38, 274, 
	38, 38, 38, 96, 38, 275, 38, 38, 
	38, 96, 38, 277, 38, 38, 38, 276, 
	38, 278, 38, 38, 38, 96, 38, 279, 
	38, 38, 38, 96, 38, 280, 38, 38, 
	38, 96, 38, 281, 282, 283, 284, 38, 
	38, 38, 96, 38, 285, 38, 38, 38, 
	96, 38, 286, 38, 38, 38, 96, 38, 
	287, 38, 38, 38, 96, 38, 288, 38, 
	38, 38, 96, 38, 289, 38, 38, 38, 
	96, 38, 290, 291, 38, 38, 38, 96, 
	38, 292, 38, 38, 38, 96, 38, 293, 
	38, 38, 38, 96, 38, 294, 38, 38, 
	38, 96, 38, 295, 38, 38, 38, 96, 
	38, 296, 38, 38, 38, 96, 38, 297, 
	38, 38, 38, 96, 38, 298, 38, 38, 
	38, 96, 38, 299, 38, 38, 38, 96, 
	38, 300, 38, 38, 38, 96, 38, 301, 
	38, 38, 38, 96, 38, 302, 38, 38, 
	38, 96, 38, 303, 38, 38, 38, 96, 
	38, 304, 38, 38, 38, 96, 38, 305, 
	38, 38, 38, 96, 38, 306, 38, 38, 
	38, 96, 38, 307, 38, 38, 38, 96, 
	38, 308, 309, 310, 311, 38, 38, 38, 
	96, 38, 312, 38, 38, 38, 96, 38, 
	313, 38, 38, 38, 96, 38, 314, 38, 
	38, 38, 96, 38, 315, 38, 38, 38, 
	96, 38, 316, 38, 38, 38, 96, 38, 
	317, 38, 38, 38, 96, 38, 318, 38, 
	38, 38, 96, 38, 319, 320, 38, 38, 
	38, 96, 38, 321, 38, 38, 38, 96, 
	38, 322, 38, 38, 38, 96, 38, 323, 
	38, 38, 38, 96, 38, 324, 38, 38, 
	38, 96, 38, 325, 38, 38, 38, 96, 
	38, 326, 38, 38, 38, 96, 38, 327, 
	38, 38, 38, 96, 38, 328, 38, 38, 
	38, 96, 38, 329, 38, 38, 38, 96, 
	38, 330, 331, 38, 38, 38, 96, 38, 
	332, 38, 38, 38, 96, 38, 333, 38, 
	38, 38, 96, 38, 334, 38, 38, 38, 
	96, 38, 335, 38, 38, 38, 96, 38, 
	336, 38, 38, 38, 96, 38, 337, 38, 
	38, 38, 96, 38, 338, 38, 38, 38, 
	96, 38, 339, 38, 38, 38, 96, 38, 
	340, 38, 38, 38, 96, 38, 341, 38, 
	38, 38, 96, 38, 342, 38, 38, 38, 
	96, 38, 343, 38, 38, 38, 96, 38, 
	344, 38, 38, 38, 96, 38, 345, 38, 
	38, 38, 96, 38, 346, 347, 38, 38, 
	38, 96, 38, 348, 38, 38, 38, 96, 
	38, 349, 38, 38, 38, 96, 38, 350, 
	38, 38, 38, 96, 38, 351, 38, 38, 
	38, 96, 38, 352, 38, 38, 38, 96, 
	38, 353, 38, 38, 38, 96, 38, 354, 
	38, 38, 38, 96, 38, 355, 38, 38, 
	38, 96, 38, 356, 357, 358, 359, 360, 
	38, 38, 38, 96, 38, 361, 38, 38, 
	38, 96, 38, 362, 38, 38, 38, 96, 
	38, 363, 38, 38, 38, 96, 38, 364, 
	38, 38, 38, 96, 38, 365, 366, 367, 
	38, 38, 38, 96, 38, 368, 38, 38, 
	38, 96, 38, 369, 38, 38, 38, 96, 
	38, 370, 38, 38, 38, 96, 38, 371, 
	38, 38, 38, 96, 38, 372, 38, 38, 
	38, 96, 38, 373, 38, 38, 38, 96, 
	38, 374, 38, 38, 38, 96, 38, 375, 
	38, 38, 38, 96, 38, 376, 38, 38, 
	38, 96, 38, 377, 378, 379, 38, 38, 
	38, 96, 38, 380, 381, 38, 38, 38, 
	96, 38, 382, 38, 38, 38, 96, 38, 
	383, 38, 38, 38, 96, 38, 384, 38, 
	38, 38, 96, 38, 385, 38, 38, 38, 
	96, 38, 386, 38, 38, 38, 96, 38, 
	387, 38, 38, 38, 96, 38, 388, 38, 
	38, 38, 96, 38, 389, 38, 38, 38, 
	96, 38, 390, 38, 38, 38, 96, 38, 
	391, 38, 38, 38, 96, 38, 392, 38, 
	38, 38, 96, 38, 393, 38, 38, 38, 
	96, 38, 394, 38, 38, 38, 96, 38, 
	395, 38, 38, 38, 96, 38, 396, 397, 
	398, 38, 38, 38, 96, 38, 399, 400, 
	38, 38, 38, 96, 38, 401, 402, 38, 
	38, 38, 96, 38, 403, 38, 38, 38, 
	96, 38, 404, 38, 38, 38, 96, 38, 
	405, 38, 38, 38, 96, 38, 406, 38, 
	38, 38, 96, 38, 407, 38, 38, 38, 
	96, 38, 408, 38, 38, 38, 96, 38, 
	409, 38, 38, 38, 96, 38, 410, 411, 
	38, 38, 38, 96, 38, 412, 38, 38, 
	38, 96, 38, 413, 38, 38, 38, 96, 
	38, 414, 38, 38, 38, 96, 38, 415, 
	416, 417, 38, 38, 38, 96, 38, 418, 
	38, 38, 38, 96, 38, 419, 38, 38, 
	38, 96, 38, 420, 38, 38, 38, 96, 
	38, 421, 422, 38, 38, 38, 96, 38, 
	423, 38, 38, 38, 96, 38, 424, 38, 
	38, 38, 96, 38, 425, 426, 38, 38, 
	38, 96, 38, 427, 38, 38, 38, 96, 
	38, 428, 38, 38, 38, 96, 38, 429, 
	38, 38, 38, 96, 38, 430, 38, 38, 
	38, 96, 38, 431, 38, 38, 38, 96, 
	38, 432, 38, 38, 38, 96, 38, 433, 
	38, 38, 38, 96, 38, 434, 38, 38, 
	38, 96, 38, 435, 38, 38, 38, 96, 
	38, 436, 437, 438, 38, 38, 38, 96, 
	38, 439, 440, 38, 38, 38, 96, 38, 
	441, 38, 38, 38, 96, 38, 442, 38, 
	38, 38, 96, 38, 443, 38, 38, 38, 
	96, 38, 444, 38, 38, 38, 96, 38, 
	445, 38, 38, 38, 96, 38, 446, 38, 
	38, 38, 96, 38, 447, 38, 38, 38, 
	96, 38, 448, 38, 38, 38, 96, 38, 
	449, 38, 38, 38, 96, 38, 450, 38, 
	38, 38, 96, 38, 451, 38, 38, 38, 
	96, 38, 452, 453, 38, 38, 38, 96, 
	38, 454, 38, 38, 38, 96, 38, 455, 
	38, 38, 38, 96, 38, 456, 38, 38, 
	38, 96, 38, 457, 38, 38, 38, 96, 
	38, 458, 38, 38, 38, 96, 38, 459, 
	38, 38, 38, 96, 38, 460, 461, 38, 
	38, 38, 96, 38, 462, 38, 38, 38, 
	96, 38, 463, 38, 38, 38, 96, 38, 
	464, 38, 38, 38, 96, 38, 465, 38, 
	38, 38, 96, 38, 466, 38, 38, 38, 
	96, 467, 468, 63, 0
};

static const short _axl_jnc_trans_targs[] = {
	7, 0, 7, 7, 11, 1, 7, 7, 
	15, 7, 7, 3, 3, 4, 7, 23, 
	7, 25, 7, 8, 7, 9, 10, 12, 
	13, 14, 16, 17, 18, 19, 20, 22, 
	24, 26, 27, 29, 30, 32, 33, 34, 
	36, 37, 53, 71, 89, 102, 115, 133, 
	135, 138, 150, 153, 169, 184, 207, 239, 
	249, 280, 294, 311, 331, 337, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 2, 21, 7, 7, 
	7, 5, 6, 7, 7, 7, 28, 7, 
	7, 7, 7, 7, 31, 7, 7, 7, 
	7, 35, 7, 38, 44, 47, 39, 40, 
	41, 42, 43, 33, 45, 46, 33, 48, 
	49, 7, 50, 51, 33, 52, 33, 54, 
	66, 68, 55, 61, 56, 57, 58, 59, 
	60, 33, 62, 63, 64, 65, 33, 67, 
	33, 69, 70, 33, 72, 74, 77, 79, 
	82, 73, 33, 75, 76, 33, 78, 33, 
	80, 81, 33, 83, 84, 85, 33, 86, 
	87, 88, 33, 90, 98, 91, 95, 92, 
	93, 94, 33, 96, 97, 33, 7, 99, 
	100, 101, 33, 103, 105, 108, 111, 104, 
	33, 106, 107, 7, 33, 109, 110, 33, 
	112, 113, 114, 33, 116, 119, 122, 123, 
	127, 117, 118, 33, 120, 121, 33, 33, 
	124, 125, 126, 33, 128, 129, 130, 131, 
	132, 33, 134, 33, 136, 137, 33, 33, 
	139, 140, 144, 141, 142, 143, 33, 7, 
	145, 146, 147, 33, 148, 33, 33, 33, 
	149, 33, 151, 152, 33, 154, 158, 155, 
	156, 157, 33, 159, 165, 160, 161, 162, 
	163, 164, 33, 166, 167, 168, 33, 170, 
	177, 178, 171, 172, 173, 174, 175, 176, 
	33, 33, 179, 180, 7, 181, 182, 183, 
	33, 185, 189, 195, 201, 186, 187, 188, 
	33, 190, 33, 191, 192, 193, 194, 33, 
	196, 197, 198, 199, 200, 33, 202, 203, 
	204, 205, 206, 33, 208, 210, 215, 235, 
	209, 33, 211, 212, 213, 214, 33, 216, 
	225, 217, 218, 219, 220, 221, 222, 223, 
	224, 33, 226, 230, 227, 228, 229, 33, 
	231, 232, 233, 234, 33, 236, 237, 238, 
	33, 240, 241, 246, 242, 243, 244, 245, 
	33, 247, 248, 33, 250, 251, 254, 264, 
	276, 33, 252, 253, 33, 255, 258, 261, 
	256, 257, 33, 259, 260, 33, 262, 263, 
	33, 265, 269, 273, 266, 267, 33, 268, 
	33, 270, 271, 272, 33, 274, 275, 33, 
	277, 278, 279, 33, 281, 286, 288, 282, 
	283, 33, 33, 284, 285, 33, 287, 33, 
	289, 290, 291, 293, 292, 33, 33, 295, 
	298, 308, 296, 297, 33, 299, 301, 300, 
	33, 302, 304, 303, 33, 305, 306, 307, 
	33, 309, 310, 33, 312, 319, 324, 313, 
	315, 314, 33, 316, 317, 318, 33, 320, 
	321, 322, 323, 33, 325, 326, 33, 327, 
	328, 329, 330, 33, 332, 334, 333, 33, 
	335, 336, 33, 7, 7
};

static const short _axl_jnc_trans_actions[] = {
	97, 0, 102, 55, 363, 0, 99, 53, 
	360, 95, 51, 0, 1, 0, 57, 0, 
	93, 0, 59, 0, 105, 0, 369, 0, 
	0, 369, 0, 0, 0, 7, 7, 366, 
	366, 0, 0, 0, 0, 0, 357, 357, 
	0, 0, 0, 0, 0, 357, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 89, 91, 
	21, 79, 37, 15, 43, 77, 33, 9, 
	29, 11, 31, 13, 0, 0, 35, 87, 
	81, 0, 0, 85, 83, 27, 0, 23, 
	71, 39, 19, 25, 0, 73, 41, 49, 
	75, 0, 45, 0, 0, 0, 0, 0, 
	0, 0, 0, 144, 0, 0, 123, 0, 
	0, 61, 0, 0, 213, 0, 219, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 168, 0, 0, 0, 0, 216, 0, 
	234, 0, 0, 327, 0, 0, 0, 0, 
	0, 0, 339, 0, 0, 195, 0, 258, 
	0, 0, 276, 0, 0, 0, 174, 0, 
	0, 0, 330, 0, 0, 0, 0, 0, 
	0, 0, 342, 0, 0, 306, 67, 0, 
	0, 0, 252, 0, 0, 0, 0, 0, 
	318, 0, 0, 65, 267, 0, 0, 210, 
	0, 0, 0, 114, 0, 0, 0, 0, 
	0, 0, 0, 354, 0, 0, 249, 321, 
	0, 0, 0, 159, 0, 0, 0, 0, 
	0, 201, 0, 279, 0, 0, 135, 315, 
	0, 0, 0, 0, 0, 0, 222, 63, 
	0, 0, 0, 237, 0, 240, 243, 246, 
	0, 255, 0, 0, 264, 0, 0, 0, 
	0, 0, 141, 0, 0, 0, 0, 0, 
	0, 0, 207, 0, 0, 0, 180, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	108, 303, 0, 0, 69, 0, 0, 0, 
	171, 0, 0, 0, 0, 0, 0, 0, 
	228, 0, 345, 0, 0, 0, 0, 300, 
	0, 0, 0, 0, 0, 291, 0, 0, 
	0, 0, 0, 150, 0, 0, 0, 0, 
	0, 117, 0, 0, 0, 0, 294, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 288, 0, 0, 0, 0, 0, 204, 
	0, 0, 0, 0, 156, 0, 0, 0, 
	153, 0, 0, 0, 0, 0, 0, 0, 
	177, 0, 0, 333, 0, 0, 0, 0, 
	0, 282, 0, 0, 261, 0, 0, 0, 
	0, 0, 162, 0, 0, 348, 0, 0, 
	309, 0, 0, 0, 0, 0, 132, 0, 
	126, 0, 0, 0, 198, 0, 0, 270, 
	0, 0, 0, 336, 0, 0, 0, 0, 
	0, 189, 285, 0, 0, 129, 0, 351, 
	0, 0, 0, 0, 0, 120, 312, 0, 
	0, 0, 0, 0, 138, 0, 0, 0, 
	273, 0, 0, 0, 192, 0, 0, 0, 
	165, 0, 0, 111, 0, 0, 0, 0, 
	0, 0, 297, 0, 0, 0, 231, 0, 
	0, 0, 0, 147, 0, 0, 225, 0, 
	0, 0, 0, 183, 0, 0, 0, 186, 
	0, 0, 324, 47, 17
};

static const short _axl_jnc_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0
};

static const short _axl_jnc_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0
};

static const short _axl_jnc_eof_trans[] = {
	1, 1, 10, 10, 10, 1, 17, 0, 
	63, 64, 64, 66, 64, 64, 64, 70, 
	64, 64, 64, 64, 64, 80, 81, 84, 
	81, 85, 64, 64, 89, 64, 64, 94, 
	64, 1, 97, 97, 64, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 114, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 175, 97, 97, 97, 97, 97, 
	97, 97, 97, 188, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	232, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 277, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 97, 97, 97, 97, 97, 97, 97, 
	97, 64
};

static const int axl_jnc_start = 7;
static const int axl_jnc_first_final = 7;
static const int axl_jnc_error = -1;

static const int axl_jnc_en_main = 7;


/* #line 243 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */


//.............................................................................

void 
CLexer::Init ()
{
	
/* #line 1091 "axl_jnc_Lexer.cpp" */
	{
	cs = axl_jnc_start;
	ts = 0;
	te = 0;
	act = 0;
	}

/* #line 251 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
}

bool
CLexer::Exec ()
{
	
/* #line 1097 "axl_jnc_Lexer.cpp" */
	{
	int _klen;
	unsigned int _trans;
	const unsigned char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _axl_jnc_actions + _axl_jnc_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
/* #line 1 "NONE" */
	{ts = p;}
	break;
/* #line 1114 "axl_jnc_Lexer.cpp" */
		}
	}

	_keys = _axl_jnc_trans_keys + _axl_jnc_key_offsets[cs];
	_trans = _axl_jnc_index_offsets[cs];

	_klen = _axl_jnc_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _axl_jnc_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _axl_jnc_indicies[_trans];
_eof_trans:
	cs = _axl_jnc_trans_targs[_trans];

	if ( _axl_jnc_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _axl_jnc_actions + _axl_jnc_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
/* #line 44 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{ NewLine (p + 1); }
	break;
	case 3:
/* #line 1 "NONE" */
	{te = p+1;}
	break;
	case 4:
/* #line 60 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 1;}
	break;
	case 5:
/* #line 61 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 2;}
	break;
	case 6:
/* #line 62 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 3;}
	break;
	case 7:
/* #line 63 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 4;}
	break;
	case 8:
/* #line 69 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 5;}
	break;
	case 9:
/* #line 70 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 6;}
	break;
	case 10:
/* #line 71 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 7;}
	break;
	case 11:
/* #line 72 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 8;}
	break;
	case 12:
/* #line 73 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 9;}
	break;
	case 13:
/* #line 74 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 10;}
	break;
	case 14:
/* #line 75 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 11;}
	break;
	case 15:
/* #line 76 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 12;}
	break;
	case 16:
/* #line 77 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 13;}
	break;
	case 17:
/* #line 78 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 14;}
	break;
	case 18:
/* #line 79 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 15;}
	break;
	case 19:
/* #line 85 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 16;}
	break;
	case 20:
/* #line 86 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 17;}
	break;
	case 21:
/* #line 87 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 18;}
	break;
	case 22:
/* #line 93 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 19;}
	break;
	case 23:
/* #line 94 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 20;}
	break;
	case 24:
/* #line 95 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 21;}
	break;
	case 25:
/* #line 96 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 22;}
	break;
	case 26:
/* #line 97 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 23;}
	break;
	case 27:
/* #line 98 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 24;}
	break;
	case 28:
/* #line 99 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 25;}
	break;
	case 29:
/* #line 100 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 26;}
	break;
	case 30:
/* #line 101 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 27;}
	break;
	case 31:
/* #line 102 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 28;}
	break;
	case 32:
/* #line 103 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 29;}
	break;
	case 33:
/* #line 104 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 30;}
	break;
	case 34:
/* #line 105 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 31;}
	break;
	case 35:
/* #line 106 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 32;}
	break;
	case 36:
/* #line 107 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 33;}
	break;
	case 37:
/* #line 108 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 34;}
	break;
	case 38:
/* #line 109 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 35;}
	break;
	case 39:
/* #line 110 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 36;}
	break;
	case 40:
/* #line 111 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 37;}
	break;
	case 41:
/* #line 112 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 38;}
	break;
	case 42:
/* #line 113 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 39;}
	break;
	case 43:
/* #line 120 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 41;}
	break;
	case 44:
/* #line 121 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 42;}
	break;
	case 45:
/* #line 122 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 43;}
	break;
	case 46:
/* #line 123 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 44;}
	break;
	case 47:
/* #line 124 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 45;}
	break;
	case 48:
/* #line 125 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 46;}
	break;
	case 49:
/* #line 126 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 47;}
	break;
	case 50:
/* #line 127 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 48;}
	break;
	case 51:
/* #line 128 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 49;}
	break;
	case 52:
/* #line 129 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 50;}
	break;
	case 53:
/* #line 131 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 52;}
	break;
	case 54:
/* #line 132 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 53;}
	break;
	case 55:
/* #line 133 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 54;}
	break;
	case 56:
/* #line 134 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 55;}
	break;
	case 57:
/* #line 141 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 57;}
	break;
	case 58:
/* #line 142 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 58;}
	break;
	case 59:
/* #line 143 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 59;}
	break;
	case 60:
/* #line 144 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 60;}
	break;
	case 61:
/* #line 150 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 61;}
	break;
	case 62:
/* #line 151 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 62;}
	break;
	case 63:
/* #line 152 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 63;}
	break;
	case 64:
/* #line 153 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 64;}
	break;
	case 65:
/* #line 154 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 65;}
	break;
	case 66:
/* #line 155 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 66;}
	break;
	case 67:
/* #line 156 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 67;}
	break;
	case 68:
/* #line 157 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 68;}
	break;
	case 69:
/* #line 163 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 69;}
	break;
	case 70:
/* #line 164 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 70;}
	break;
	case 71:
/* #line 165 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 71;}
	break;
	case 72:
/* #line 166 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 72;}
	break;
	case 73:
/* #line 172 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 73;}
	break;
	case 74:
/* #line 173 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 74;}
	break;
	case 75:
/* #line 174 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 75;}
	break;
	case 76:
/* #line 175 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 76;}
	break;
	case 77:
/* #line 177 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 78;}
	break;
	case 78:
/* #line 178 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 79;}
	break;
	case 79:
/* #line 179 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 80;}
	break;
	case 80:
/* #line 180 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 81;}
	break;
	case 81:
/* #line 181 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 82;}
	break;
	case 82:
/* #line 182 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 83;}
	break;
	case 83:
/* #line 183 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 84;}
	break;
	case 84:
/* #line 184 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 85;}
	break;
	case 85:
/* #line 190 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 86;}
	break;
	case 86:
/* #line 191 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 87;}
	break;
	case 87:
/* #line 227 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 113;}
	break;
	case 88:
/* #line 228 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 114;}
	break;
	case 89:
/* #line 229 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 115;}
	break;
	case 90:
/* #line 230 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 116;}
	break;
	case 91:
/* #line 239 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{act = 122;}
	break;
	case 92:
/* #line 198 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Inc); }}
	break;
	case 93:
/* #line 199 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Dec); }}
	break;
	case 94:
/* #line 200 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ptr); }}
	break;
	case 95:
/* #line 203 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogAnd); }}
	break;
	case 96:
/* #line 204 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_LogOr); }}
	break;
	case 97:
/* #line 205 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Eq); }}
	break;
	case 98:
/* #line 206 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ne); }}
	break;
	case 99:
/* #line 207 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Le); }}
	break;
	case 100:
/* #line 208 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ge); }}
	break;
	case 101:
/* #line 209 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ClassAssign); }}
	break;
	case 102:
/* #line 210 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AddAssign); }}
	break;
	case 103:
/* #line 211 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_SubAssign); }}
	break;
	case 104:
/* #line 212 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_MulAssign); }}
	break;
	case 105:
/* #line 213 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_DivAssign); }}
	break;
	case 106:
/* #line 214 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ModAssign); }}
	break;
	case 107:
/* #line 215 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShlAssign); }}
	break;
	case 108:
/* #line 216 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_ShrAssign); }}
	break;
	case 109:
/* #line 217 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AndAssign); }}
	break;
	case 110:
/* #line 218 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_XorAssign); }}
	break;
	case 111:
/* #line 219 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_OrAssign); }}
	break;
	case 112:
/* #line 220 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_AtAssign); }}
	break;
	case 113:
/* #line 221 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (EToken_Ellipsis); }}
	break;
	case 114:
/* #line 228 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateCharToken (EToken_Integer); }}
	break;
	case 115:
/* #line 229 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 116:
/* #line 236 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 117:
/* #line 238 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;}
	break;
	case 118:
/* #line 239 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p+1;{ CreateToken (ts [0]); }}
	break;
	case 119:
/* #line 119 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Auto); }}
	break;
	case 120:
/* #line 130 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Int); }}
	break;
	case 121:
/* #line 140 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Enum); }}
	break;
	case 122:
/* #line 176 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Do); }}
	break;
	case 123:
/* #line 192 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Null); }}
	break;
	case 124:
/* #line 201 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shl); }}
	break;
	case 125:
/* #line 202 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (EToken_Shr); }}
	break;
	case 126:
/* #line 227 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Identifier); }}
	break;
	case 127:
/* #line 228 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateCharToken (EToken_Integer); }}
	break;
	case 128:
/* #line 229 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateStringToken (EToken_Literal, 1, 1); }}
	break;
	case 129:
/* #line 230 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (10); }}
	break;
	case 130:
/* #line 231 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateIntegerToken (16, 2); }}
	break;
	case 131:
/* #line 233 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateFpToken (); }}
	break;
	case 132:
/* #line 235 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 133:
/* #line 238 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;}
	break;
	case 134:
/* #line 239 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{te = p;p--;{ CreateToken (ts [0]); }}
	break;
	case 135:
/* #line 230 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateIntegerToken (10); }}
	break;
	case 136:
/* #line 239 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */
	{{p = ((te))-1;}{ CreateToken (ts [0]); }}
	break;
	case 137:
/* #line 1 "NONE" */
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} CreateToken (EToken_Namespace); }
	break;
	case 2:
	{{p = ((te))-1;} CreateToken (EToken_Using); }
	break;
	case 3:
	{{p = ((te))-1;} CreateToken (EToken_Extend); }
	break;
	case 4:
	{{p = ((te))-1;} CreateToken (EToken_Pack); }
	break;
	case 5:
	{{p = ((te))-1;} CreateToken (EToken_Typedef); }
	break;
	case 6:
	{{p = ((te))-1;} CreateToken (EToken_Alias); }
	break;
	case 7:
	{{p = ((te))-1;} CreateToken (EToken_Static); }
	break;
	case 8:
	{{p = ((te))-1;} CreateToken (EToken_Thread); }
	break;
	case 9:
	{{p = ((te))-1;} CreateToken (EToken_Stack); }
	break;
	case 10:
	{{p = ((te))-1;} CreateToken (EToken_Heap); }
	break;
	case 11:
	{{p = ((te))-1;} CreateToken (EToken_UHeap); }
	break;
	case 12:
	{{p = ((te))-1;} CreateToken (EToken_Member); }
	break;
	case 13:
	{{p = ((te))-1;} CreateToken (EToken_Abstract); }
	break;
	case 14:
	{{p = ((te))-1;} CreateToken (EToken_Virtual); }
	break;
	case 15:
	{{p = ((te))-1;} CreateToken (EToken_Override); }
	break;
	case 16:
	{{p = ((te))-1;} CreateToken (EToken_Public); }
	break;
	case 17:
	{{p = ((te))-1;} CreateToken (EToken_Protected); }
	break;
	case 18:
	{{p = ((te))-1;} CreateToken (EToken_Friend); }
	break;
	case 19:
	{{p = ((te))-1;} CreateToken (EToken_Signed); }
	break;
	case 20:
	{{p = ((te))-1;} CreateToken (EToken_Unsigned); }
	break;
	case 21:
	{{p = ((te))-1;} CreateToken (EToken_BigEndian); }
	break;
	case 22:
	{{p = ((te))-1;} CreateToken (EToken_Nullable); }
	break;
	case 23:
	{{p = ((te))-1;} CreateToken (EToken_Const); }
	break;
	case 24:
	{{p = ((te))-1;} CreateToken (EToken_ReadOnly); }
	break;
	case 25:
	{{p = ((te))-1;} CreateToken (EToken_Mutable); }
	break;
	case 26:
	{{p = ((te))-1;} CreateToken (EToken_Volatile); }
	break;
	case 27:
	{{p = ((te))-1;} CreateToken (EToken_Weak); }
	break;
	case 28:
	{{p = ((te))-1;} CreateToken (EToken_Thin); }
	break;
	case 29:
	{{p = ((te))-1;} CreateToken (EToken_Unsafe); }
	break;
	case 30:
	{{p = ((te))-1;} CreateToken (EToken_Cdecl); }
	break;
	case 31:
	{{p = ((te))-1;} CreateToken (EToken_Stdcall); }
	break;
	case 32:
	{{p = ((te))-1;} CreateToken (EToken_Function); }
	break;
	case 33:
	{{p = ((te))-1;} CreateToken (EToken_Property); }
	break;
	case 34:
	{{p = ((te))-1;} CreateToken (EToken_Multicast); }
	break;
	case 35:
	{{p = ((te))-1;} CreateToken (EToken_Event); }
	break;
	case 36:
	{{p = ((te))-1;} CreateToken (EToken_AutoEv); }
	break;
	case 37:
	{{p = ((te))-1;} CreateToken (EToken_Bindable); }
	break;
	case 38:
	{{p = ((te))-1;} CreateToken (EToken_AutoGet); }
	break;
	case 39:
	{{p = ((te))-1;} CreateToken (EToken_Indexed); }
	break;
	case 41:
	{{p = ((te))-1;} CreateToken (EToken_Void); }
	break;
	case 42:
	{{p = ((te))-1;} CreateToken (EToken_Object); }
	break;
	case 43:
	{{p = ((te))-1;} CreateToken (EToken_Variant); }
	break;
	case 44:
	{{p = ((te))-1;} CreateToken (EToken_Bool); }
	break;
	case 45:
	{{p = ((te))-1;} CreateToken (EToken_Int8); }
	break;
	case 46:
	{{p = ((te))-1;} CreateToken (EToken_Int16); }
	break;
	case 47:
	{{p = ((te))-1;} CreateToken (EToken_Int32); }
	break;
	case 48:
	{{p = ((te))-1;} CreateToken (EToken_Int64); }
	break;
	case 49:
	{{p = ((te))-1;} CreateToken (EToken_Float); }
	break;
	case 50:
	{{p = ((te))-1;} CreateToken (EToken_Double); }
	break;
	case 52:
	{{p = ((te))-1;} CreateToken (EToken_IntPtr); }
	break;
	case 53:
	{{p = ((te))-1;} CreateToken (EToken_Char); }
	break;
	case 54:
	{{p = ((te))-1;} CreateToken (EToken_Short); }
	break;
	case 55:
	{{p = ((te))-1;} CreateToken (EToken_Long); }
	break;
	case 57:
	{{p = ((te))-1;} CreateToken (EToken_EnumC); }
	break;
	case 58:
	{{p = ((te))-1;} CreateToken (EToken_Struct); }
	break;
	case 59:
	{{p = ((te))-1;} CreateToken (EToken_Union); }
	break;
	case 60:
	{{p = ((te))-1;} CreateToken (EToken_Class); }
	break;
	case 61:
	{{p = ((te))-1;} CreateToken (EToken_Get); }
	break;
	case 62:
	{{p = ((te))-1;} CreateToken (EToken_Set); }
	break;
	case 63:
	{{p = ((te))-1;} CreateToken (EToken_This); }
	break;
	case 64:
	{{p = ((te))-1;} CreateToken (EToken_PreConstruct); }
	break;
	case 65:
	{{p = ((te))-1;} CreateToken (EToken_Operator); }
	break;
	case 66:
	{{p = ((te))-1;} CreateToken (EToken_Postfix); }
	break;
	case 67:
	{{p = ((te))-1;} CreateToken (EToken_Value); }
	break;
	case 68:
	{{p = ((te))-1;} CreateToken (EToken_OnChange); }
	break;
	case 69:
	{{p = ((te))-1;} CreateToken (EToken_New); }
	break;
	case 70:
	{{p = ((te))-1;} CreateToken (EToken_Delete); }
	break;
	case 71:
	{{p = ((te))-1;} CreateToken (EToken_SizeOf); }
	break;
	case 72:
	{{p = ((te))-1;} CreateToken (EToken_TypeOf); }
	break;
	case 73:
	{{p = ((te))-1;} CreateToken (EToken_If); }
	break;
	case 74:
	{{p = ((te))-1;} CreateToken (EToken_Else); }
	break;
	case 75:
	{{p = ((te))-1;} CreateToken (EToken_For); }
	break;
	case 76:
	{{p = ((te))-1;} CreateToken (EToken_While); }
	break;
	case 78:
	{{p = ((te))-1;} CreateToken (EToken_Break); }
	break;
	case 79:
	{{p = ((te))-1;} CreateToken (EToken_Continue); }
	break;
	case 80:
	{{p = ((te))-1;} CreateToken (EToken_Return); }
	break;
	case 81:
	{{p = ((te))-1;} CreateToken (EToken_Switch); }
	break;
	case 82:
	{{p = ((te))-1;} CreateToken (EToken_Case); }
	break;
	case 83:
	{{p = ((te))-1;} CreateToken (EToken_Default); }
	break;
	case 84:
	{{p = ((te))-1;} CreateToken (EToken_Once); }
	break;
	case 85:
	{{p = ((te))-1;} CreateToken (EToken_Silent); }
	break;
	case 86:
	{{p = ((te))-1;} CreateToken (EToken_True); }
	break;
	case 87:
	{{p = ((te))-1;} CreateToken (EToken_False); }
	break;
	case 113:
	{{p = ((te))-1;} CreateStringToken (EToken_Identifier); }
	break;
	case 114:
	{{p = ((te))-1;} CreateCharToken (EToken_Integer); }
	break;
	case 115:
	{{p = ((te))-1;} CreateStringToken (EToken_Literal, 1, 1); }
	break;
	case 116:
	{{p = ((te))-1;} CreateIntegerToken (10); }
	break;
	case 122:
	{{p = ((te))-1;} CreateToken (ts [0]); }
	break;
	}
	}
	break;
/* #line 1853 "axl_jnc_Lexer.cpp" */
		}
	}

_again:
	_acts = _axl_jnc_actions + _axl_jnc_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
/* #line 1 "NONE" */
	{ts = 0;}
	break;
/* #line 1864 "axl_jnc_Lexer.cpp" */
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _axl_jnc_eof_trans[cs] > 0 ) {
		_trans = _axl_jnc_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

/* #line 257 "D:/Prj/Ninja/axl3/axl_jnc/axl_jnc_Lexer.rl" */

	bool Result = cs != axl_jnc_error;
	if (!Result)
	{
		CToken* pToken = CreateToken (EToken_Error);
		pToken->m_Data.m_Error = err::CError ("lexer error");
	}

	return Result;
}

//.............................................................................

} // namespace jnc {
} // namespace axl {
